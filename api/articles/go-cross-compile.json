{"title":"GoLang 全平台编译","uid":"4256b93c1a14e298462e2348e12791c7","slug":"go-cross-compile","date":"2022-11-23T11:16:38.000Z","updated":"2022-11-23T11:18:38.901Z","comments":true,"path":"api/articles/go-cross-compile.json","cover":null,"content":"<p>Golang的全平台编译简直太爽了，真的太适合我了，平时编译一些不同设备的跨平台程序，真的是爽的不行。<br>拥有一台windows电脑就能开发出在Linux、Windows、Mac上面直接运行的程序。</p>\n<span id=\"more\"></span>\n\n\n<h2 id=\"一、三个平台编译示例\"><a href=\"#一、三个平台编译示例\" class=\"headerlink\" title=\"一、三个平台编译示例:\"></a>一、三个平台编译示例:</h2><p>1、Mac下编译Linux, Windows平台的64位可执行程序：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build test.go\n$ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>2、 Linux下编译Mac, Windows平台的64位可执行程序：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build test.go\n$ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>3、 Windows下编译Mac, Linux平台的64位可执行程序：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ set CGO_ENABLED=0 set GOOS=darwin3 set GOARCH=amd64 go build test.go\n$ set CGO_ENABLED=0 set GOOS=linux s GOARCH=amd64 go build test.go\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<p>当然如果编译过其他平台后，程序 go run main.go 执行会有一些问题:<br>报错如下:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">F:\\github\\syncFiles\\goApi\\ipDemo&gt;go run main.go\nwarning: GOPATH set to GOROOT (C:\\Program Files\\Go) has no effect\nexec: \"C:\\\\Users\\\\dell\\\\AppData\\\\Local\\\\Temp\\\\go-build2490838331\\\\b001\\\\exe\\\\main\": file does not exist\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>这里只需要:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">F:\\github\\syncFiles\\goApi\\ipDemo&gt;set GOOS=windows\n\nF:\\github\\syncFiles\\goApi\\ipDemo&gt;go run main.go\nwarning: GOPATH set to GOROOT (C:\\Program Files\\Go) has no effect\n192.168.5.107\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>main.go 是一个显示本机IP地址的程序。<br>这样做就没有问题了。</p>\n<h2 id=\"二、包括三个设置的参数\"><a href=\"#二、包括三个设置的参数\" class=\"headerlink\" title=\"二、包括三个设置的参数:\"></a>二、包括三个设置的参数:</h2><ul>\n<li>GOARCH：编译目标平台的硬件体系架构（amd64, 386, arm, ppc64等）。</li>\n<li>GOOS：编译目标平台上的操作系统（darwin, freebsd, linux, windows）。</li>\n<li>CGO_ENABLED：代表是否开启CGO，1表示开启，0表示禁用。由于CGO不能支持交叉编译，所以需要禁用。</li>\n</ul>\n","feature":true,"text":"Golang的全平台编译简直太爽了，真的太适合我了，平时编译一些不同设备的跨平台程序，真的是爽的不行。拥有一台windows电脑就能开发出在Linux、Windows、Mac上面直接运行的程序。 一、三个平台编译示例:1、Mac下编译Linux, Windows平台的64位可执行...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"go","slug":"go","count":1,"path":"api/categories/go.json"}],"tags":[{"name":"go","slug":"go","count":1,"path":"api/tags/go.json"},{"name":"cross","slug":"cross","count":1,"path":"api/tags/cross.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E4%B8%89%E4%B8%AA%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">一、三个平台编译示例:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%8C%85%E6%8B%AC%E4%B8%89%E4%B8%AA%E8%AE%BE%E7%BD%AE%E7%9A%84%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">二、包括三个设置的参数:</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"家庭光猫配置","uid":"d56efd048323ddb26df3b6eebbfbe819","slug":"mao-config","date":"2022-11-24T12:07:17.000Z","updated":"2022-11-24T12:54:39.989Z","comments":true,"path":"api/articles/mao-config.json","cover":[],"text":"家庭光猫配置与IPV6设置，获取公网ipv6 检测地址https://www.test-ipv6.com/ &nbsp;你的公网 IPv6 地址是 XXXX 证明你已经可以IPv6上网了 光猫登陆地址：http://192.168.3.1 请关闭电脑DHCP，手动设置IP 普通用...","link":"","photos":[],"count_time":{"symbolsCount":238,"symbolsTime":"1 mins."},"categories":[{"name":"mao","slug":"mao","count":1,"path":"api/categories/mao.json"}],"tags":[{"name":"mao","slug":"mao","count":1,"path":"api/tags/mao.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"OpenWrt开启i2c功能，并顺利编译风扇驱动","uid":"fefcb9efb9b2bb50dd1c4b29bb3c1ed0","slug":"openwet-i2c","date":"2022-11-21T06:11:56.000Z","updated":"2022-11-21T06:14:31.928Z","comments":true,"path":"api/articles/openwet-i2c.json","cover":null,"text":"树莓派安装OpenWrt作为家庭主路由，并开启i2c编译风扇、led等驱动，cpu温度骤降！～～～ 1、编译风扇/home/uuxia/openwrt/temp_control/WiringPi-master/wiringPi /home/uuxia/openwrt/wrt/st...","link":"","photos":[],"count_time":{"symbolsCount":912,"symbolsTime":"1 mins."},"categories":[{"name":"openwrt","slug":"openwrt","count":1,"path":"api/categories/openwrt.json"},{"name":"i2c","slug":"i2c","count":1,"path":"api/categories/i2c.json"}],"tags":[{"name":"openwrt","slug":"openwrt","count":1,"path":"api/tags/openwrt.json"},{"name":"i2c","slug":"i2c","count":1,"path":"api/tags/i2c.json"},{"name":"pi","slug":"pi","count":1,"path":"api/tags/pi.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}