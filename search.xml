<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Clash 基本配置记录</title>
      <link href="//post/clashx.html"/>
      <url>//post/clashx.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="35b1a33540233f9b2f396514e7969640896a48bfade41f11be45eaf7add972d0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码界面提示说明</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clashx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>家庭宽带开启IPV6</title>
      <link href="//post/openwrt-ipv6.html"/>
      <url>//post/openwrt-ipv6.html</url>
      
        <content type="html"><![CDATA[<h1 id="常见的运营商超级管理员账号"><a href="#常见的运营商超级管理员账号" class="headerlink" title="常见的运营商超级管理员账号"></a>常见的运营商超级管理员账号</h1><h2 id="中国移动"><a href="#中国移动" class="headerlink" title="中国移动"></a>中国移动</h2><ul><li>移动光猫账号∶CMCCAdmin 密码∶ aDm8H%MdA </li><li>华为的∶telecomadmin 密码∶ admintelecom</li><li>中国移动光纤宽带ip∶192.168.100.1的超级账号∶telecomadmin 密码∶nE7jA%5m</li></ul><h2 id="中国电信"><a href="#中国电信" class="headerlink" title="中国电信"></a>中国电信</h2><ul><li>账号∶telecomadmin 密码∶ nE7jA%5m</li></ul><h1 id="设置光猫为桥接模式"><a href="#设置光猫为桥接模式" class="headerlink" title="设置光猫为桥接模式"></a>设置光猫为桥接模式</h1><p>打开IPV4/IPV6，如果设置不了，请截图保存，然后删除，再新建，然后按原来的设置（如何连接光猫，可观看前面的视频）</p><p><img src="/post/openwrt-ipv6/ipv6-1.png" alt="ipv6-1.png"></p><h1 id="然后设置软路由或者路由器"><a href="#然后设置软路由或者路由器" class="headerlink" title="然后设置软路由或者路由器"></a>然后设置软路由或者路由器</h1><h2 id="有软路由情况下："><a href="#有软路由情况下：" class="headerlink" title="有软路由情况下："></a>有软路由情况下：</h2><ul><li>网络——接口——IPV6 ULA清空</li><li>网络——接口——WAN口——使用内置IPV6管理取消勾选——Obtain IPv6-Address项目确保是自动状态</li><li>网络——接口——lan口——DHCP——IPV6设置——高级设置——取消勾选使用内置IPV6管理——取消勾选强制链路</li><li>通告的DNS服务器（添加谷歌IPV6DNS）：<ol><li>2001:4860:4860::8888</li><li>2001:4860:4860::8844</li></ol></li></ul><p><img src="/post/openwrt-ipv6/ipv6-2.png" alt="ipv6-2.png"></p><p>混合模式会根据配置自动选择使用中继还是服务器模式。<font color="red">（这里如果是主路由请选择服务器模式，旁路由选择中继模式）</font><br>何时采用无状态、何时采用有状态，关键看应用场景。核心在于是否需要控制IP地址，比如保持IP不变，如果需要控制，就采用有状态;如果无需控制，就采用无状态。</p><ul><li><p>在DHCP/DNS——高级设置——取消勾选禁止解析IPV6 DNS记录</p></li><li><p>设置完成后一定要重启软路由</p></li><li><p>只有路由器的情况下：直接打开路由器的IPV6即可，如果有多个路由器，每个路由器都要打开</p></li><li><p>设置完成后，电脑要禁用网络然后重新启用（目的是为了获取IPV6地址）</p></li><li><p>测试IPV6：<br> <a href="https://ipv6-test.com/">https://ipv6-test.com/</a><br> <a href="https://test-ipv6.com/index.html.zh_CN">https://test-ipv6.com/index.html.zh_CN</a></p></li></ul><p> <video src="ipv6.mp4" style="width: 100%; height: 100%;" controls="controls"></video></p>]]></content>
      
      
      <categories>
          
          <category> ipv6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ipv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>家庭光猫配置</title>
      <link href="//post/mao-config.html"/>
      <url>//post/mao-config.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="65e87e02479d651d027f8722f3d47c3c50429eed8d4bcfb39dc8ee2b5ceba11a">8a45f6bad0c5eda31f44591d6b22cf753e511e44aa3b5867a237ebfc94d5c8fef99aacf8bdc623049be6c237f1c8d4e3c7bc850abeaaa6a3167ab793ede286ef92838112285abaa5f70f1bf48b05dee13596c8c1b832ea967b1e8f672dc40de3b9fa7d95e78f5526ad3f499b40ba79a1f5c21ba66ef773beebc62b326ae4077bfb5e0c3d1b59648057f88eb43004a3247aff10a54f9a0c5fb316eb43d51a73a691da78016ca8adb04d588909eb91819e11ddd336367d4436540e16e92ea790230ad1b43ff3336f59df96ada8f131710425483ed6122df5ff421596fdcf75db9b80e04b7522761ca374ca3ad740123788b94089a0b999702e1fddd18dd970da99842d34e1b10699f3062fd83caa0a7c279b5909a5696c6d5f321ba5e060f0eda86afa89e2d39ef26a90d9673e381267e81272b95e1715d4b53bd1449bd4af5590068f89874f1cba5330f7d6b47d710d65a693a60d94d63e3fadd10e64d879d570ec04e36908cb10a05ad562cfb095eeb4a6a3b16446407d9f0f62d1f7677cf832bd3512a90d048c89cf6b16d3e2bb8640f84453f05300d6ed0d4b4caff8b8a55ae0e2c6588b7f3620f62e10489804353a3b5d248b28c5817942cdc530ffb3a5ea2b50f9f6939a9935ad950b991fe06764cb6168d90a5ecd5c45054f3f4f2d2aaea796da2092072e15c9221498de3cabce243c293f138066228ee91367684fa456c639fdba0c975d3913076a12b8b77751a87513b9be8efa1e79eb59158d9d1cea95d101e84365bf2b55316ad886b5bc9abd9a332c055025161ad6d3bc9d688566d2014d2d71c6747dca4b22b7fba54300c2d1de580118ae8af353b9669799a3beca58ec2f31e5f8c813da8f542d097a8265680cbc75aedf4f46cddbcc7f86fd0b38f781f9ec382c13092e1239c31d7e1cd77d80cffe080f8a7d147223c27f2d0a148c3decaa34eeefbceed50eea21740cd3459f7ee7d6e77a02144a7ab92d7042561eca14957ac41353620cd9666fb8200388fb5796868a01f4b299e7162335def1e0b09d1523fbf97c99992d6055f61bb95a265f478dc43814758a547a8ecdb3e7aa67752f19b15f4a22292cd34b9c8ae5d2ab72b04c3624a29256a81c9b2c9d8563b19d19fccd6eb3cce904d7505e2d749f44ad9c752fe93f3a076c0f4f92dae77d08ead6ddf7fd3068ce809288bcafb0f42a762db05f32492c02635c65307996205195806299e12a3eadeb5807e47c205886d86b3052ed2aa4cc57c9829b61866f85c6c5325e353206796f73e2f2e8c0e2d6c1b030a12c32d272e2c339e3cd6cb93d4e995890ad03b2c0b578b2957bc13d2ddde1b40e1ec70c8b8507e93f20d33e4287408eb52096768583e4cbd6a861e2389753d5b2d5ff095d51882be0ca349ae5c42cc234d8620c978ed09aa277b63d6f021170802c6b3ca29f7e848f05c9b262ab488f66898460d9fe3f13beae0014e8c41d5ec16916a2488ec13e66540db658b1df5681a5df5279fb2046905488fd414b92e7acf2de2ab52f24e3d64d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码界面提示说明</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> mao </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mao </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoLang 全平台编译</title>
      <link href="//post/go-cross-compile.html"/>
      <url>//post/go-cross-compile.html</url>
      
        <content type="html"><![CDATA[<p>Golang的全平台编译简直太爽了，真的太适合我了，平时编译一些不同设备的跨平台程序，真的是爽的不行。<br>拥有一台windows电脑就能开发出在Linux、Windows、Mac上面直接运行的程序。</p><span id="more"></span><h2 id="一、三个平台编译示例"><a href="#一、三个平台编译示例" class="headerlink" title="一、三个平台编译示例:"></a>一、三个平台编译示例:</h2><p>1、Mac下编译Linux, Windows平台的64位可执行程序：</p><pre class="line-numbers language-none"><code class="language-none">$ CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build test.go$ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2、 Linux下编译Mac, Windows平台的64位可执行程序：</p><pre class="line-numbers language-none"><code class="language-none">$ CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build test.go$ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3、 Windows下编译Mac, Linux平台的64位可执行程序：</p><pre class="line-numbers language-none"><code class="language-none">$ set CGO_ENABLED=0 set GOOS=darwin3 set GOARCH=amd64 go build test.go$ set CGO_ENABLED=0 set GOOS=linux s GOARCH=amd64 go build test.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当然如果编译过其他平台后，程序 go run main.go 执行会有一些问题:<br>报错如下:</p><pre class="line-numbers language-none"><code class="language-none">F:\github\syncFiles\goApi\ipDemo&gt;go run main.gowarning: GOPATH set to GOROOT (C:\Program Files\Go) has no effectexec: "C:\\Users\\dell\\AppData\\Local\\Temp\\go-build2490838331\\b001\\exe\\main": file does not exist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里只需要:</p><pre class="line-numbers language-none"><code class="language-none">F:\github\syncFiles\goApi\ipDemo&gt;set GOOS=windowsF:\github\syncFiles\goApi\ipDemo&gt;go run main.gowarning: GOPATH set to GOROOT (C:\Program Files\Go) has no effect192.168.5.107<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.go 是一个显示本机IP地址的程序。<br>这样做就没有问题了。</p><h2 id="二、包括三个设置的参数"><a href="#二、包括三个设置的参数" class="headerlink" title="二、包括三个设置的参数:"></a>二、包括三个设置的参数:</h2><ul><li>GOARCH：编译目标平台的硬件体系架构（amd64, 386, arm, ppc64等）。</li><li>GOOS：编译目标平台上的操作系统（darwin, freebsd, linux, windows）。</li><li>CGO_ENABLED：代表是否开启CGO，1表示开启，0表示禁用。由于CGO不能支持交叉编译，所以需要禁用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> cross </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWrt开启i2c功能，并顺利编译风扇驱动</title>
      <link href="//post/openwet-i2c.html"/>
      <url>//post/openwet-i2c.html</url>
      
        <content type="html"><![CDATA[<p>树莓派安装OpenWrt作为家庭主路由，并开启i2c编译风扇、led等驱动，cpu温度骤降！～～～</p><span id="more"></span><h3 id="1、编译风扇"><a href="#1、编译风扇" class="headerlink" title="1、编译风扇"></a>1、编译风扇</h3><p>/home/uuxia/openwrt/temp_control/WiringPi-master/wiringPi</p><pre class="line-numbers language-none"><code class="language-none">/home/uuxia/openwrt/wrt/staging_dir/toolchain-aarch64_cortex-a72_gcc-8.4.0_musl/bin/aarch64-openwrt-linux-gcc \-o feng feng.c ssd1306_i2c.c \-I/home/uuxia/openwrt/temp_control/WiringPi-master/wiringPi \-L/home/uuxia/openwrt/temp_control/WiringPi-master/wiringPi \-lwiringPi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、Unable-to-open-I2C-device-No-such-file-or-directory-问题解决"><a href="#2、Unable-to-open-I2C-device-No-such-file-or-directory-问题解决" class="headerlink" title="2、Unable to open I2C device: No such file or directory 问题解决"></a>2、<strong>Unable to open I2C device: No such file or directory</strong> 问题解决</h3><p>用lsmod命令可以看到i2c_bmc2708字样，但是没i2c_dev字样，那么还需要做如下处理<br>执行命令<br><code>sudo nano /etc/modules</code>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; # 使用nano打开文件<br>然后增加<br>i2c_dev<br>行，安Ctrl+X退出编辑，输入Y保存内容，然后重启即可。</p><h3 id="3、在OpenWrt中开启树莓派I2C功能"><a href="#3、在OpenWrt中开启树莓派I2C功能" class="headerlink" title="3、在OpenWrt中开启树莓派I2C功能"></a>3、在OpenWrt中开启树莓派I2C功能</h3><h5 id="1、编辑-x2F-boot-x2F-config-txt"><a href="#1、编辑-x2F-boot-x2F-config-txt" class="headerlink" title="1、编辑 /boot/config.txt"></a>1、编辑 /boot/config.txt</h5><pre class="line-numbers language-none"><code class="language-none">dtparam=i2c_arm=ondtparam=i2c0=ondtparam=i2c1=ondtparam=spi=ondtparam=i2s=on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、通过opkg安装相关包"><a href="#2、通过opkg安装相关包" class="headerlink" title="2、通过opkg安装相关包"></a>2、通过opkg安装相关包</h5><pre class="line-numbers language-none"><code class="language-none">opkg install i2c-tools kmod-i2c-gpio kmod-i2c-algo-bit kmod-i2c-algo-pcf kmod-i2c-bcm2835 kmod-i2c-core kmod-i2c-gpio kmod-i2c-mux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="3、使用i2c命令行工具测试"><a href="#3、使用i2c命令行工具测试" class="headerlink" title="3、使用i2c命令行工具测试"></a>3、使用i2c命令行工具测试</h5><pre class="line-numbers language-none"><code class="language-none">#!/bin/bashls /dev/i2c*i2cdetect -y 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> openwrt </category>
          
          <category> i2c </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openwrt </tag>
            
            <tag> i2c </tag>
            
            <tag> pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下Frpc安装与自启动</title>
      <link href="//post/frpc-install-autostart.html"/>
      <url>//post/frpc-install-autostart.html</url>
      
        <content type="html"><![CDATA[<p>Windows下安装Frpc，并在windows的任务计划程序里设置Frpc自启动。</p><span id="more"></span><p>1、新建一个start.bat文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off:homefrpc -c frpc.inigoto home<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>2、 打开<code>任务计划程序</code>（<code>cmd</code>-&gt;<code>taskschd.msc</code>）</p><p>3、安装步骤如下截图：</p><p><img src="http://file.uuxia.top:88/showdoc/img/frpc/install/frpc-install-autostart-001.png"></p><hr><p><img src="http://file.uuxia.top:88/showdoc/img/frpc/install/frpc-install-autostart-002.png"></p><hr><p><img src="http://file.uuxia.top:88/showdoc/img/frpc/install/frpc-install-autostart-003.png"></p><hr><p><img src="http://file.uuxia.top:88/showdoc/img/frpc/install/frpc-install-autostart-004.png"></p>]]></content>
      
      
      <categories>
          
          <category> frpc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米9刷 PixelExperience ROM教程</title>
      <link href="//post/cepheus-lock-rom.html"/>
      <url>//post/cepheus-lock-rom.html</url>
      
        <content type="html"><![CDATA[<p>小米9刷入官方rom</p><span id="more"></span><h2 id="小米9解锁"><a href="#小米9解锁" class="headerlink" title="小米9解锁"></a>小米9解锁</h2><ol><li>确保手机插入了一张SIM卡，并登陆小米账号，并断开Wi-Fi连接;</li><li>开启<code>开发者调试模式</code>，<code>Settings</code> &gt; <code>About Phone</code>， 连续点击 <code>MIUI Version</code> 5次；</li><li>绑定设备到小米账号，<code>Settings</code> &gt; <code>Additional settings</code> &gt; <code>Developer options</code> &gt; <code>Mi Unlock status</code></li><li>下载<a href="http://file.uuxia.top:88/soft/mi9/miflash_unlock-en-6.5.224.28.zip">小米解锁程序</a>(仅支持windows)，<a href="http://www.miui.com/unlock/index.html">官方解锁网站；</a></li><li>手动进入Bootloader模式（关机后，同时按住开机键和音量下键）；</li><li>通过USB连接手机，点击 “解锁”按钮；</li><li>遇到电脑识别不了手机，需要安装驱动，可以使用<a href="https://xiaomirom.com/download-xiaomi-flash-tool-miflash/">小米刷机工具</a>自带驱动安装。</li></ol><h2 id="刷入-PixelExperience-Recovery"><a href="#刷入-PixelExperience-Recovery" class="headerlink" title="刷入 PixelExperience Recovery."></a>刷入 PixelExperience Recovery.</h2><ol><li>下载<a href="http://file.uuxia.top:88/soft/mi9/recovery_cepheus-12.1-20220611-0701-UNOFFICIAL.img">PixelExperience Recovery;</a></li><li>将小米9手机连接PC电脑，并运行一下指令进入bootloader模式：<pre class="line-numbers language-none"><code class="language-none">adb reboot bootloader<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查看手机是否连接成功：<pre class="line-numbers language-none"><code class="language-none">fastboot devices<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>开始刷入<code>PixelExperience Recovery</code><pre class="line-numbers language-none"><code class="language-none">fastboot flash recovery recovery_cepheus-12.1-20220611-0701-UNOFFICIAL.img<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="开始-PixelExperience-ROM-刷机"><a href="#开始-PixelExperience-ROM-刷机" class="headerlink" title="开始 PixelExperience ROM 刷机"></a>开始 PixelExperience ROM 刷机</h2><ol><li>uuxia编译的<a href="http://file.uuxia.top:88/soft/mi9/PixelExperience_cepheus-12.1-20220611-0701-UNOFFICIAL.zip">ROM包</a>下载</li><li>按 <code>Volume Up</code> + <code>Power</code>;</li><li>清空数据 <code>Format data / factory reset</code>;</li><li><code>Apply Update</code> &gt; <code>Apply from ADB</code>;</li><li>PC电脑端执行 <code>adb sideload PixelExperience_cepheus-12.1-20220611-0701-UNOFFICIAL.zip</code></li></ol><h2 id="附小米9刷回官方ROM"><a href="#附小米9刷回官方ROM" class="headerlink" title="附小米9刷回官方ROM"></a><a href="https://wiki.pixelexperience.org/devices/cepheus/build/">附小米9刷回官方ROM</a></h2><p><video src="http://file.uuxia.top:88/movies/%E7%94%B5%E8%A7%86%E5%89%A7/%E5%87%A1%E4%BA%BA%E4%BF%AE%E4%BB%99%E4%BC%A0/%E5%87%A1%E4%BA%BA%E4%BF%AE%E4%BB%99%E4%BC%A0%E7%AC%AC%E4%B8%80%E8%BE%91%5B01-08%5D.mov" style="width: 100%; height: 100%;" controls="controls"></video></p>]]></content>
      
      
      <categories>
          
          <category> PixelExperience </category>
          
          <category> 小米9 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cepheus </tag>
            
            <tag> PixelExperience </tag>
            
            <tag> 刷机 </tag>
            
            <tag> Recovery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 编译 openssl 的注意事项</title>
      <link href="//post/opensslforandroid.html"/>
      <url>//post/opensslforandroid.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>以下载链接<a href="https://www.openssl.org/source/openssl-1.1.1o.tar.gz%E4%B8%BA%E4%BE%8B">https://www.openssl.org/source/openssl-1.1.1o.tar.gz为例</a><br><br>下载解压之后，查看根目录的 NOTES.ANDROID，其中有</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">export ANDROID_NDK_HOME=/home/whoever/Android/android-sdk/ndk/20.0.5594570PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$ANDROID_NDK_HOME/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin:$PATH./Configure android-arm64 -D__ANDROID_API__=29make<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里就是最直接的编译方式了。但是这样编译之后，会有一个坑<br></p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">lrwxrwxrwx  1 ubuntu ubuntu      16 Jun  9 21:23 libcrypto.so -&gt; libcrypto.so.1.1-rwxrwxr-x  1 ubuntu ubuntu 2754216 Jun  9 21:23 libcrypto.so.1.1lrwxrwxrwx  1 ubuntu ubuntu      13 Jun  9 21:23 libssl.so -&gt; libssl.so.1.1-rwxrwxr-x  1 ubuntu ubuntu  596600 Jun  9 21:23 libssl.so.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译时尝试链接 libssl.so ，实际上会链接到 libssl.so.1.1 ，但是当你尝试将 libssl.so.1.1 集成到 Android studio 工程内时，会发现 libssl.so.1.1 这种命名格式so，Android studio 是不会自动将其打包到 apk 内的，即使将 libssl.so.1.1 改名为 libssl.so 可以集成到 apk ，app运行时仍然会去找 libssl.so.1.1。因为 so 内部有其文件名信息</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">$objdump -p libssl.so | grep SONAME  SONAME               libssl.so.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>对于Android来说，我们更希望，编译之后，so 本身名字就叫 libssl.so。<br>具体做法是解压 openssl-1.1.1o.tar.gz 之后，修改 15-android.conf<br>大概 193 行</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">my %targets = (    "android" =&gt; {        inherit_from     =&gt; [ "linux-generic32" ],        template         =&gt; 1,        ################################################################        # Special note about -pie. The underlying reason is that        # Lollipop refuses to run non-PIE. But what about older systems        # and NDKs? -fPIC was never problem, so the only concern is -pie.        # Older toolchains, e.g. r4, appear to handle it and binaries        # turn out mostly functional. "Mostly" means that oldest        # Androids, such as Froyo, fail to handle executable, but newer        # systems are perfectly capable of executing binaries targeting        # Froyo. Keep in mind that in the nutshell Android builds are        # about JNI, i.e. shared libraries, not applications.        cflags           =&gt; add(sub { android_ndk()-&gt;{cflags} }),        cppflags         =&gt; add(sub { android_ndk()-&gt;{cppflags} }),        cxxflags         =&gt; add(sub { android_ndk()-&gt;{cflags} }),        bn_ops           =&gt; sub { android_ndk()-&gt;{bn_ops} },        bin_cflags       =&gt; "-pie",        enable           =&gt; [ ],        shared_extension =&gt; ".so",  ### 这一行是新加的    },    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样可以编译出来不带版本后缀的 libssl.so 和 libcrypto.so</p><p>可以参考下边的懒人脚本来自行编译</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">#!/bin/bashfunction buildopenssl(){    androidarch=$1    toolchain=$2    if [ ! -f openssl-1.1.1o.tar.gz ]; then        wget https://www.openssl.org/source/openssl-1.1.1o.tar.gz    fi    if [ !-d openssl-1.1.1o ]; then        tar -xf openssl-1.1.1o.tar.gz    fi    if [ -z $ANDROID_NDK_HOME ]; then        echo "missing ANDROID_NDK_HOME"        exit    fi    pushd openssl-1.1.1o    PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$ANDROID_NDK_HOME/toolchains/${toolchain}-linux-androideabi-4.9/prebuilt/linux-x86_64/bin:$PATH    ./Configure android-$androidarch -D__ANDROID_API__=26    make clean    make    popd}buildopenssl arm64 aarch64#buildopenssl arm arm#buildopenssl x86 x86#buildopenssl x86_64 x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用时，将 NDK_HOME传入，例如，脚本保存为 build.sh，则执行命令</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">ANDROID_NDK_HOME=/home/whoever/android-ndk-r21e ./build_android_openssl.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>想为 Android (arm/x86/x86_64)编译时，修改脚本末尾的 buildopenssl 注释</p><p><a href="https://www.cnblogs.com/SupperMary/p/16361303.html?share_token=D86811DE-FA19-49BF-A4AB-B50D1D50C467&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_ios&amp;utm_campaign=client_share">友情链接</a></p>]]></content>
      
      
      <categories>
          
          <category> ndk </category>
          
          <category> openssl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ndk </tag>
            
            <tag> Android </tag>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IoT接入文档</title>
      <link href="//post/iot-used.html"/>
      <url>//post/iot-used.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-3-设备与平台通信接口"><a href="#4-3-设备与平台通信接口" class="headerlink" title="4.3 设备与平台通信接口"></a>4.3 设备与平台通信接口</h1><h3 id="4-3-1-注册"><a href="#4-3-1-注册" class="headerlink" title="4.3.1 注册"></a>4.3.1 注册</h3><p>接口描述：设备上电联网后，检测本地是没有登录信息和注册标志，<br>设备需要到平台进行注册激活，注册地址固定 URL，且分为测试和正<br>式服务器地址（域名或 IP、端口）。<br>正式服务器地址（OPENHOST）：open.clife.cn<br>测试服务器地址（TESTHOST）：test.clife.cn<br>正式或者测试服务器请求 URL 只需要对服务器地址进行互换即可。</p><h4 id="4-3-1-1-请求"><a href="#4-3-1-1-请求" class="headerlink" title="4.3.1.1 请求"></a>4.3.1.1 请求</h4><p>请求 URL：http(s)://OPENHOST/device/register</p><p>请求参数：</p><ul><li><input checked="" disabled="" type="checkbox"> authLevel=安全认证级别（0 高级，1 中级，2 初级）</li><li><input checked="" disabled="" type="checkbox"> productCode=产品编码（初、中级认证级别必选）</li><li><input checked="" disabled="" type="checkbox"> devId=设备 ID 号（高级认证级别必选）</li></ul><p>请求头：Content-Type: application/json<br><br>请求类型：POST <br><br>请求方向：设备-&gt;平台<br></p><table><thead><tr><th>参数名</th><th align="center">类型</th><th align="left">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td>cmd</td><td align="center">Number</td><td align="left">功能码，取值 2000</td><td align="center">Y</td></tr><tr><td>ver</td><td align="center">String</td><td align="left">通讯协议版本，通讯双方需要比对版本号，高版本向下兼容，格式示例：1.0</td><td align="center">Y</td></tr><tr><td>dir</td><td align="center">String</td><td align="left">传递方向，同 4.1.1.1</td><td align="center">Y</td></tr><tr><td>msgId</td><td align="center">Number</td><td align="left">帧序号，回复帧与请求帧中值相同，否则作为异常处理（丢包、错误）。帧序号由请求方管理，确保帧的唯一性，可做累加计算。</td><td align="center">Y</td></tr><tr><td>prio</td><td align="center">Number</td><td align="left">功能优先级，高优先级数据报文优先处理，默认中等优先级。优先级等级：<br>0：低优先级<br>1：中优先级<br>&gt;=2：高优先级</td><td align="center">N</td></tr><tr><td>timestamp</td><td align="center">String</td><td align="left">时间戳，最小单位毫秒，UTC-8 时区。设备首次注册使用设备本地时间做时间戳，通过平台回复内容再同步时间戳。</td><td align="center">Y</td></tr><tr><td>data</td><td align="center">Object</td><td align="left">关键数据对象体，HTTP 请求时需要对此数据内容作加密并使用 base64 编码处理，加解密密钥需平台申请 devKey</td><td align="center">Y</td></tr><tr><td>productCode</td><td align="center">String</td><td align="left">data 中成员，产品编码，平台申请，初、中级认证必选</td><td align="center">N</td></tr><tr><td></td><td align="center"></td><td align="left"></td><td align="center"></td></tr></tbody></table><hr><h4 id="4-3-2-8-文件操作"><a href="#4-3-2-8-文件操作" class="headerlink" title="4.3.2.8 文件操作"></a>4.3.2.8 文件操作</h4><p>接口描述：平台通知设备下载文件，或者请求设备上传文件。<br>该接口主要分为升级、日志调试、收发文件三大功能。</p><h5 id="4-3-2-8-1-请求"><a href="#4-3-2-8-1-请求" class="headerlink" title="4.3.2.8.1 请求"></a>4.3.2.8.1 请求</h5><p>请求方向：平台-&gt;设备</p><table><thead><tr><th>参数名</th><th align="center">类型</th><th align="left">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td>cmd</td><td align="center">Number</td><td align="left">功能码，取值 2000</td><td align="center">Y</td></tr><tr><td>ver</td><td align="center">String</td><td align="left">通讯协议版本，通讯双方需要比对版本号，高版本向下兼容，格式示例：1.0</td><td align="center">Y</td></tr><tr><td>dir</td><td align="center">String</td><td align="left">传递方向，同 4.1.1.1</td><td align="center">Y</td></tr><tr><td>msgId</td><td align="center">Number</td><td align="left">帧序号，回复帧与请求帧中值相同，否则作为异常处理（丢包、错误）。帧序号由请求方管理，确保帧的唯一性，可做累加计算。</td><td align="center">Y</td></tr><tr><td>prio</td><td align="center">Number</td><td align="left">功能优先级，高优先级数据报文优先处理，默认中等优先级。优先级等级：<br>0：低优先级<br>1：中优先级<br>&gt;=2：高优先级</td><td align="center">N</td></tr><tr><td>timestamp</td><td align="center">String</td><td align="left">时间戳，最小单位毫秒，UTC-8 时区。设备首次注册使用设备本地时间做时间戳，通过平台回复内容再同步时间戳。</td><td align="center">Y</td></tr><tr><td>data</td><td align="center">Object</td><td align="left">关键数据对象体，HTTP 请求时需要对此数据内容作加密并使用 base64 编码处理，加解密密钥需平台申请 devKey</td><td align="center">Y</td></tr><tr><td>fileMode</td><td align="center">String</td><td align="left">data 中成员，文件操作模式，取值：<br>“DOWN”：下载模式<br>“UP”：上传模式<br>“QUERY”：查询文件信息（主要是版本号）</td><td align="center">Y</td></tr><tr><td>productVer</td><td align="center">Number</td><td align="left">data 中成员，产品版本（总版本号），基础版本从 1 开始，<strong>下载模式为升级时必选</strong></td><td align="center">N</td></tr><tr><td>fileInfo</td><td align="center">Array of Object</td><td align="left">data 中成员，文件信息列表，包括 Url、软硬件版本等</td><td align="center">Y</td></tr><tr><td>fileType</td><td align="center">String</td><td align="left">fileInfo 中成员，文件作用类型，取值：<br>1. 升级功能<br>“FIRM”： 设备升级固件，下载模式<br>“SUBFIRM”： 子设备（插件）的升级固件， 下载模式<br>“PROFILE”：设备 profile 文件<br>2. 日志调试<br>“LOG”：设备日志文件，上传模式<br>（3）文件收发<br>“PHOTO”：照片文件<br>“VIDEO”：视频文件<br>“VOICE”：音频文件 <br>“DATA”：记录数据文件</td><td align="center">Y</td></tr><tr><td>devNum</td><td align="center">Number</td><td align="left">fileInfo 内部成员，设备（插件）ID 号，当 “<strong>fileType</strong>”为“<strong>SUBFIRM</strong>”时必选</td><td align="center">N</td></tr><tr><td>software</td><td align="center">String</td><td align="left">fileInfo 内部成员，软件版本号，fileType 为 “<strong>FIRM</strong>”、“<strong>SUBFIRM</strong>”升级固件时必选</td><td align="center">N</td></tr><tr><td>hardware</td><td align="center">String</td><td align="left">fileInfo 内部成员，硬件版本号，fileType 为 “<strong>FIRM</strong>”、“<strong>SUBFIRM</strong>”升级固件时必选</td><td align="center">N</td></tr><tr><td>url</td><td align="center">String</td><td align="left">fileInfo 内部成员，下载或者上传文件的 Url文件地址</td><td align="center">Y</td></tr><tr><td>md5</td><td align="center">String</td><td align="left">fileInfo 内部成员，下载文件的 MD5 校验码，16 进制字符串格式，<strong>升级必选</strong></td><td align="center">N</td></tr><tr><td>checkSum</td><td align="center">Number</td><td align="left">fileInfo 内部成员，下载文件的累加和，<strong>升级必选</strong></td><td align="center">N</td></tr><tr><td>startTime</td><td align="center">Number</td><td align="left">data 中成员，文件操作相对当前系统时间的<br>开始时间偏移，单位秒，三种情况：<br>&lt;0：当前时间之前的时间点<br>0：当前时间点<br>&gt;0：当前时间后的时间点</td><td align="center">N</td></tr><tr><td>stopTime</td><td align="center">Number</td><td align="left">data 中成员，文件操作相对当前系统时间的<br>结束时间偏移，单位秒，三种情况：<br>&lt;0：当前时间之前的时间点<br>0：当前时间点<br>&gt;0：当前时间后的时间点<br>且满足 fileStopTime &gt;= fileStartTime</td><td align="center">N</td></tr></tbody></table><p>示例：<br><br>文件下载模式：<br><br>加密前：<br></p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">{    "cmd": 2019,    "ver": "1.0",    "dir": "30",    "timestamp": 1617787651542,    "msgId": 23454,    "data": {        "fileMode": "DOWN",        "productVer": 2,        "fileInfo": [            {                "fileType": "FIRM",                "devNum": 0,                "software": "1.0.2.0",                "hardware": "02",                "checkSum": 34458424,                "md5": "6d348c902ace4d09b6d62ce982dc8ace",                "url": "http://clife.open.cn/device/ota/esp8266.bin"            },            {                "fileType": "SUBFIRM",                " devNum": 1,                "software": "01",                "hardware": "02",                "checkSum": 764234235,                "md5": "6d348c902ace4d09b6d62ce982dc8ace",                "url": "http://clife.open.cn/device/ota/esp8266_1.bin"            }        ],        "startTime": 0,        "stopTime": 600    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件上传模式：</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm"> {    "cmd": 2019,    "ver": "1.0",    "dir": "30",    "timestamp": 1617787651542,    "msgId": 231,    "data": {        "fileMode": "UP",        "fileInfo": [            {                "fileType": "PHOTO",                "url": "http://clife.open.cn/device/storage"            }        ],        "startTime": 0,        "stopTime": 60    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-3-2-8-2-响应"><a href="#4-3-2-8-2-响应" class="headerlink" title="4.3.2.8.2 响应"></a>4.3.2.8.2 响应</h5><p>用于升级回复、查询回复（升级后版本主动上报）或者主动升级查询。<br><br>请求方向：设备-&gt;平台<br></p><table><thead><tr><th>参数名</th><th align="center">类型</th><th align="left">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td>cmd</td><td align="center">Number</td><td align="left">功能码，取值 2000</td><td align="center">Y</td></tr><tr><td>ver</td><td align="center">String</td><td align="left">通讯协议版本，通讯双方需要比对版本号，高版本向下兼容，格式示例：1.0</td><td align="center">Y</td></tr><tr><td>dir</td><td align="center">String</td><td align="left">传递方向，同 4.1.1.1</td><td align="center">Y</td></tr><tr><td>msgId</td><td align="center">Number</td><td align="left">帧序号，回复帧与请求帧中值相同，否则作为异常处理（丢包、错误）。帧序号由请求方管理，确保帧的唯一性，可做累加计算。</td><td align="center">Y</td></tr><tr><td>prio</td><td align="center">Number</td><td align="left">功能优先级，高优先级数据报文优先处理，默认中等优先级。优先级等级：<br>0：低优先级<br>1：中优先级<br>&gt;=2：高优先级</td><td align="center">N</td></tr><tr><td>timestamp</td><td align="center">String</td><td align="left">时间戳，最小单位毫秒，UTC-8 时区。设备首次注册使用设备本地时间做时间戳，通过平台回复内容再同步时间戳。</td><td align="center">Y</td></tr><tr><td>data</td><td align="center">Object</td><td align="left">关键数据对象体，HTTP 请求时需要对此数据内容作加密并使用 base64 编码处理，加解密密钥需平台申请 devKey</td><td align="center">Y</td></tr><tr><td>respCode</td><td align="center">Number</td><td align="left">data 中成员，升级结果码，详见表 5.4-1</td><td align="center">Y</td></tr><tr><td>respCont</td><td align="center">String</td><td align="left">data 中成员，升级结果描述，详见表 5.4-1</td><td align="center">Y</td></tr><tr><td>productVer</td><td align="center">Number</td><td align="left">data 中成员，产品版本（总版本号），基础版本从 1 开始, <strong>respCode 为 3 是必选</strong></td><td align="center">N</td></tr><tr><td>devVer</td><td align="center">Array of Object</td><td align="left">data 中成员，设备版本，包括软件版本、硬件版本、设备编号, <strong>respCode 为 3 是必选</strong></td><td align="center">N</td></tr><tr><td>software</td><td align="center">String</td><td align="left">devVer 中成员，设备软件（固件）版本，格式“主版本.次版本.修订版本.修复版本”，如1.0.0.0，<strong>详见 5.1</strong></td><td align="center">N</td></tr><tr><td>hardware</td><td align="center">String</td><td align="left">devVer 中成员，设备硬件版本，格式“主版本.次版本”，如 1.0</td><td align="center">N</td></tr><tr><td>devNum</td><td align="center">Number</td><td align="left">devVer 中成员，设备编号，特别的，0 代表通信模组</td><td align="center">N</td></tr></tbody></table><p>示例：<br><br>文件升级（下载模式）回复：<br></p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">{    "cmd": 2018,    "ver": "1.0",    "dir": "03",    "timestamp": 1617787651542,    "msgId": 23454,    "data": {        "respCode": 3,        "respCont": "ver",        "productVer": 2,        "devVer": [            {                "software": "1.0.0.0",                "hardware": "1.0",                "devNum": 0            },            {                "software": "01",                "hardware": "02",                "devNum": 1            }        ]    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主动升级查询：</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">{    "cmd": 2018,    "ver": "1.0",    "dir": "03",    "timestamp": 1617787651542,    "msgId": 23454,    "data": {        "respCode": 2,        "respCont": "SUBFIRM"    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-1-版本号约定"><a href="#5-1-版本号约定" class="headerlink" title="5.1 版本号约定"></a>5.1 版本号约定</h2><p>格式：主版本.次版本.修订版本.修复版本<br><br>版本号变化说明如表 5.1-1：<br></p><table><thead><tr><th><strong>版本号</strong></th><th align="left"><strong>软件</strong></th><th align="center">硬件</th></tr></thead><tbody><tr><td>主版本</td><td align="left">软件兼容性变化时递增</td><td align="center">硬件大改动时递增</td></tr><tr><td>次版本</td><td align="left">软件增加新功能，不影响兼容性时递增</td><td align="center">硬件小改动时递增，非必需</td></tr><tr><td>修订版本</td><td align="left">BUG 修复时递增</td><td align="center">无</td></tr><tr><td>修订版本</td><td align="left">优化记录或者测试时递增，非必需</td><td align="center">无</td></tr></tbody></table><ul><li>表 5.1-1 版本号变化说明</li></ul><p>版本级别：主版本 &gt; 次版本 &gt; 修订版本 &gt; 修复版本<br><br>当低一级别的版本号累计到 100 时，递增上一级版本，低一级版本号 归零。<br></p><h2 id="5-3-功能-ID"><a href="#5-3-功能-ID" class="headerlink" title="5.3 功能 ID"></a>5.3 功能 ID</h2><table><thead><tr><th><strong>版本号</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td>2000</td><td align="left">注册请求</td></tr><tr><td>2001</td><td align="left">注册响应</td></tr><tr><td>2004</td><td align="left">连接请求</td></tr><tr><td>2005</td><td align="left">连接响应</td></tr><tr><td>2006</td><td align="left">数据上报请求</td></tr><tr><td>2009</td><td align="left">数据查询请求</td></tr><tr><td>2011</td><td align="left">数据控制请求</td></tr><tr><td>2012</td><td align="left">解绑回复</td></tr><tr><td>2013</td><td align="left">设备解绑</td></tr><tr><td>2014</td><td align="left">遗嘱</td></tr><tr><td>2017</td><td align="left">强制下线</td></tr><tr><td>2018</td><td align="left">文件操作响应</td></tr><tr><td>2019</td><td align="left">文件操作请求</td></tr></tbody></table><ul><li>表 5.3-1 功能 ID 统计<br>说明：<br><br>     功能码在 2000 及以上范围表示设备与服务器使用的功能码；<br><br>     功能码 2000 以下范围属于本地通信使用，其中 1100 以下范围功 能码用作配网，1100 及以上范围用作设备与网关通信使用。<br></li></ul><h2 id="5-4-升级结果码"><a href="#5-4-升级结果码" class="headerlink" title="5.4 升级结果码"></a>5.4 升级结果码</h2><table><thead><tr><th><strong>响应码(respCode)</strong></th><th align="left"><strong>描述(respCont)</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td>0</td><td align="left">[1,100]</td><td align="left">升级进度信息:<br>1:版本下载完成,开始升级<br>100:升级完成</td></tr><tr><td>1</td><td align="left">[1,100]</td><td align="left">下载进度信息:<br>1:开始下载<br>100:完成下载</td></tr><tr><td>2</td><td align="left">[ALL,FIRM,SUBFIRM]</td><td align="left">设备主动请求升级：<br>ALL：设备所有升级固件（默认）<br>FIRM: 设备升级固件新版本请求<br>SUBFIRM: 子设备（插件）的升级固<br>件新版本请求</td></tr><tr><td>3</td><td align="left">描述信息</td><td align="left">查询响应信息：<br>服务器查询时回复</td></tr><tr><td>-1</td><td align="left">[0,1,2,X]</td><td align="left">过程异常信息：<br>0:URL非法或设备忙;<br>1:升级中断;<br>2:版本下载完成,校验异常取消升级;<br>X:其他异常信息(可为具体描述)</td></tr></tbody></table><ul><li>表 5.4-1 升级结果码表<br></li></ul><p>具体为：<br><br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;正常升级：{1,1},{1,100},{0,1},{0,100}上报至少 4 个事件<br><br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;升级异常：{-1,0};{-1,1};{-1,2}上报三种情况之一的若干事件<br><br>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;主动（重新）请求升级：{2,FIRM} 或者 {2,SUBFIRM}<br></p>]]></content>
      
      
      <categories>
          
          <category> IoT </category>
          
          <category> mqtt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Iot </tag>
            
            <tag> mqtt </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH公钥免密登录</title>
      <link href="//post/ssh-pub-login.html"/>
      <url>//post/ssh-pub-login.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c19cd06df4990dfbdcd210e7244d734ed6313168ae43bfc7ea8fa4a27d6722c9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码界面提示说明</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> ssh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> pubkey </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADB保存Android日志</title>
      <link href="//post/logcat.html"/>
      <url>//post/logcat.html</url>
      
        <content type="html"><![CDATA[<p>Macos、Windows、linux下如何使用adb保存android手机的日志</p><span id="more"></span><h2 id="一、MacOsX、Linux下使用adb保存Android日志"><a href="#一、MacOsX、Linux下使用adb保存Android日志" class="headerlink" title="一、MacOsX、Linux下使用adb保存Android日志"></a>一、MacOsX、Linux下使用adb保存Android日志</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb logcat -c <span class="token operator">&amp;&amp;</span> adb logcat -v <span class="token function">time</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"abss"</span> <span class="token operator">&gt;</span> /Users/uuxia/Desktop/android.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="一、Windows下使用adb保存Android日志"><a href="#一、Windows下使用adb保存Android日志" class="headerlink" title="一、Windows下使用adb保存Android日志"></a>一、Windows下使用adb保存Android日志</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb logcat -c <span class="token operator">&amp;&amp;</span> adb logcat -v <span class="token function">time</span> <span class="token operator">|</span> <span class="token function">find</span> <span class="token string">"abss"</span> <span class="token operator">&gt;</span> D:/android.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
          <category> logcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> logcat </tag>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Linux(centos/ubuntu)搭建树莓派C/C++程序编译环境</title>
      <link href="//post/raspberry-build-env.html"/>
      <url>//post/raspberry-build-env.html</url>
      
        <content type="html"><![CDATA[<p>记录在Linux系统下搭建树莓派C/C++程序环境搭建的过程。</p><span id="more"></span><h2 id="一、安装gcc-x2F-g"><a href="#一、安装gcc-x2F-g" class="headerlink" title="一、安装gcc/g++"></a>一、安装gcc/g++</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> gcc-c++<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、-安装CMake"><a href="#二、-安装CMake" class="headerlink" title="二、 安装CMake"></a>二、 安装CMake</h2><ol><li>下载文件到本地：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz<span class="token function">tar</span> -xzvf cmake-3.13.4.tar.gz<span class="token builtin class-name">cd</span> cmake-3.13.4/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>逐个运行：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./bootstrap<span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="三、下载交叉编译工具"><a href="#三、下载交叉编译工具" class="headerlink" title="三、下载交叉编译工具"></a>三、下载交叉编译工具</h2><p><a href="https://developer.arm.com/downloads/-/gnu-a">https://developer.arm.com/downloads/-/gnu-a</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/10.2-2020.11/binrel/gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解压：xz -d gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu.tar.xz<br>解压：tar -xf gcc-arm-10.2-2020.11-x86_64-aarch64-none-linux-gnu.tar.xz</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> C/C++ </tag>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米9基于PixelExperience源码编译步骤</title>
      <link href="//post/cepheus.html"/>
      <url>//post/cepheus.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pixel-Experience"><a href="#Pixel-Experience" class="headerlink" title="Pixel Experience"></a>Pixel Experience</h1><h3 id="Sync"><a href="#Sync" class="headerlink" title="Sync"></a>Sync</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Initialize local repository</span>repo init -u https://github.com/PixelExperience/manifest -b twelve<span class="token comment"># Sync</span>repo <span class="token function">sync</span> -c -j<span class="token variable"><span class="token variable">$(</span>nproc --all<span class="token variable">)</span></span> --force-sync --no-clone-bundle --no-tags<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Set up environment</span>$ <span class="token builtin class-name">.</span> build/envsetup.sh<span class="token comment"># Choose a target</span>$ lunch aosp_cepheus-userdebug$ lunch aosp_cepheus-user<span class="token comment"># Build the code</span>$ mka bacon -j4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Turn-on-caching-to-speed-up-build"><a href="#Turn-on-caching-to-speed-up-build" class="headerlink" title="Turn on caching to speed up build"></a>Turn on caching to speed up build</h3><p>Make use of ccache if you want to speed up subsequent builds by running:</p><pre class="line-numbers language-none"><code class="language-none">export USE_CCACHE=1export CCACHE_EXEC=/usr/bin/ccache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>and adding that line to your ~/.bashrc file. Then, specify the maximum amount of disk space you want ccache to use by typing this:</p><pre class="line-numbers language-none"><code class="language-none">ccache -M 50G<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>where 50G corresponds to 50GB of cache. This needs to be run once. Anywhere from 25GB-100GB will result in very noticeably increased build speeds (for instance, a typical 1hr build time can be reduced to 20min). If you’re only building for one device, 25GB-50GB is fine. If you plan to build for several devices that do not share the same kernel source, aim for 75GB-100GB. This space will be permanently occupied on your drive, so take this into consideration.</p><p>You can also enable the optional ccache compression. While this may involve a slight performance slowdown, it increases the number of files that fit in the cache. To enable it, run:</p><pre class="line-numbers language-none"><code class="language-none">ccache -o compression=true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Start-the-build"><a href="#Start-the-build" class="headerlink" title="Start the build"></a>Start the build</h3><p>Time to start building! Now, type:</p><pre class="line-numbers language-none"><code class="language-none">crootmka bacon -j$(nproc --all)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Install-the-build"><a href="#Install-the-build" class="headerlink" title="Install the build"></a>Install the build</h3><p>Assuming the build completed without errors (it will be obvious when it finishes), type the following in the terminal window the build ran in:</p><pre class="line-numbers language-none"><code class="language-none">cd $OUT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>There you’ll find all the files that were created. The two files of more interest are:</p><p>recovery.img, which is the PixelExperience recovery image.</p><p>A zip file whose name starts with ‘PixelExperience_’, which is the PixelExperience installer package.</p><p>Success! So… what’s next?<br>You’ve done it! Welcome to the elite club of self-builders. You’ve built your operating system from scratch, from the ground up. You are the master/mistress of your domain… and hopefully you’ve learned a bit on the way and had some fun too.</p><h3 id="Submitting-Patches"><a href="#Submitting-Patches" class="headerlink" title="Submitting Patches"></a>Submitting Patches</h3><p>Patches are always welcome! Please submit your patches to our Gerrit.</p><p><a href="https://wiki.pixelexperience.org/help/submit-patch/">Gerrit push guide</a></p><pre class="line-numbers language-none"><code class="language-none">unzip platform-tools-latest-linux.zip -d ~# Now you have to add adb and fastboot to your PATH. Open ~/.profile and add the following:# add Android SDK platform tools to pathif [ -d "$HOME/platform-tools" ] ; then    PATH="$HOME/platform-tools:$PATH"ficurl https://storage.googleapis.com/git-repo-downloads/repo &gt; /root/code/twelve/repochmod a+x /root/code/twelve/repocurl https://storage.googleapis.com/git-repo-downloads/repo &gt; /media/psf/aosp/twelve/repochmod a+x /media/psf/aosp/twelve/repo./repo init -u https://github.com/PixelExperience/manifest -b twelverepo init -u https://github.com/PixelExperience/manifest -b twelvegit config --global user.email "xiaoli.xia@uuxiclife.cn"git config --global user.name "uuxia"./repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags# Running configuration script:cd ~/git clone https://github.com/akhilnarang/scriptscd scripts./setup/android_build_env.sh./repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tagssource build/envsetup.shlunch aosp_cepheus-userdebugexport USE_CCACHE=1export CCACHE_EXEC=/usr/bin/ccache# and adding that line to your ~/.bashrc file. Then, specify the maximum amount of disk space you want ccache to use by typing this:ccache -M 50Gccache -o compression=truecrootmka bacon -j$(nproc --all)export http_proxy=http://127.0.0.1:1087export https_proxy=http://127.0.0.1:1087git config --global http.proxy http://127.0.0.1:1087git config --global https.proxy http://127.0.0.1:1087git config --global core.gitproxy http://127.0.0.1:1087export http_proxy=http://127.0.0.1:1080export https_proxy=http://127.0.0.1:1080git config --global http.proxy http://127.0.0.1:1080git config --global https.proxy http://127.0.0.1:1080git config --global core.gitproxy http://127.0.0.1:1080git config --global --get http.proxygit config --global --get https.proxygit config --global --get core.gitproxygit config --global --unset http.proxygit config --global --unset https.proxygit config --global --unset core.gitproxyhttps://mirrors.tuna.tsinghua.edu.cn/git/AOSP/https://android.googlesource.comsudo chown -R root:root /root/cepheus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> AOSP </category>
          
          <category> 小米9 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cepheus </tag>
            
            <tag> proxy </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>terminal代理设置</title>
      <link href="//post/proxysetting.html"/>
      <url>//post/proxysetting.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c0b9686c1c50179ebee1461ef0a84431e05b19c620fa881f649b527a539e4b75">8a45f6bad0c5eda31f44591d6b22cf7588611db6740aaf37b60e55b90bec518bc1eb700345aa787c7ef1afa6c70569b4348629e0544655146d9e90c01e723f592670b5c271f39b6511a9c2009c109c1f5d18f635ccac9809f1d05865f1c94098b76760725799024d2c6d60baa67ac82df75cbe5e53c5bdae97e78206f35ffdef9324c52b0db9903910efde62de86be7dd64a5b713f7a76b635330b63d74aa1b9b03d52ce395e2f8895e88f7b2907c5fc6f3046462bca019209ba9deb008918c0656fc6d7595900cca65411bf32939be478454729bcc1bcbd0aade6394dd74a94d7be4e1d8e7df6520fb72f8d896448358a2d18125c9897acba6482255393ceaf7a5742db96fd95d57e33a337bcaab5bed261d42f6eb45279ffb4dca557d350de116cace0e229797fdd1126889456ea75a4aa575edfbbdc1056d96d11bfe9ffe609bedf2f66ab5b668c3b3e4d49333aab458532b24b2ee40f5e45dbd9a75b1605455f1273fc4415d011bbad0c5c42785d2184fc06ce9221392f7bd7558d86d9093ff19e0e35a04222166c75eb4cee793fa9a86bc83e7de1cd60b374f8c6e21c2beef217b1dc707ace68ec329aa10e67e379d2cba08cce08dbea85a13a21843d25d2cea22bd88e82f590916646aee647cf0550fdf579ec2f80fb3f45c73836475c94c669bbd979b16632ec9a7558cccdea72436ab0a9610ac0b14efdb471b918e163537d8f06ebc6551e86ed41da3f4cbc38d51fc5943bff775b9d567f33f34cc81271f2410378d0d36a1d22abc66571e2a1acf291f90076de5f6c3496ea6d345ec51ad722a83d0af6eed0a15dc61dfaa78497f2303fd6e436b1ecaeb072669248b93e96bad0292599d607c41b7f0598ac21c748f8f2e7892d4f4b13307b6b95d348270cd12ab98f773997943894f296804605ed7232db565f41e25e31dcbc18681ccc6f4c6053e3fc6d59950b684fe01a683aae4cb9ab02a96775d9d6b4f0da2583cc9e5d9bd68008dc4aba26798f21095a7d535b0b80ea715593529414abd4c5d1b1e6d52d8ff1a9fc05726af1b46d247bcf97b2772aad94206d95a66069ad5e6515d25069089db2b29037c369b9c57669cf07da3177c242b659804f67c1b81a21dffc23825e95418bbc4d3e31115adfabab1f6f41dcca0196cb7c8ba0780973d44ad160da9e6b4a06c21d1a2666f8a317484f2b50a27ee88d82f37d6fecf276255de9146bb628e72b09e9ce197e32d8cc3c13227e31e934b3574904889f5482bf27ccb229e0c92f6fe2d192d8602709ad6843214aec79ddb1a0e6e90b8bc2aa18cdb7c95da0e6d5013e46a88fbedfba43de46968d2ce73f001c3173cf091137d994b5387d9ab53dc1f28594d5b7d7db2c01148a69194ade859b83bf326beec1fd02ed3511a220bf70232f26b4ef2701955b0c3e706e7e7fcdc8c7f88e834debaa121cbb808031380e76365e222173b3a81a73a8a7e53f56660352595ef514179ad6c4def1bb10ade450e86c1b7b87b5e0db99f4ab4eba06c7c0d191690150a744a02cf71288c009d41127c5c9750b0076cddc8011399baeeec9ab7df6473b4a56f53a2a25e8493139382d5af5f4dac2f57c1469c617a4a28d750a2b036d7b7f9bd0bb79ee71d8cd2012bc51bf0366030921207ad91ab1ee84935d8dad7baa5b7bf06e6df1516da1529b74399b5432585f958d25a723e2cf1a85045c474989d5997c435bc732f71ff62f86540cf9066ccd5977560cbf5fefa0ebb4341916a500748465a00082668a284b873b5adb8485d1a8f26dd6f9d08db8459c13ca3f6ff85b9b2335443f95d62501b626488bc9aa405cdf5aba82561156298bf0cbe3a15a5726bc8513f4191f2c52346e1b2860f3273fa456655e1cd71263b7a3d742ea6a1688662bc0ff9b78a2765c8cc109bd524a13a0aacfa79217077324dd412aa343014a1c914028467831e97d733d8825f41ea90de97739d341ec61a9c64dcbd6dc65e9d3fea91d09ae167443745facf249d2c88bbb0d23998be80854dc8465e5b575ffd0241765af9befdf96cb615a086b06664da6f5255d722e6002cf89f03e3ec7db1f87db1b083c6981c2b90bb15deba3a054592afd50df23ce9394534851195c37bc9d71bb42b15a7feeeec1db70f7f6dce53773c825b9a3c568b64d895c2d53b568aa7d297564d225f0855b3079a80948d019d77c29943e1ccc08ba0d0c39e984caa90e8a8ded9fc90c136e2306105c53b12ccb3e5a9b9d610d26b6d9d5b8fe93e66a46aa4be7c33c7b8cd5260175e3985bcf237e2eb40d8c5c931ee163883999e1706ebde5d1b0d359c24041be8d907b3b1ebcc5c9fda35d3bef824b7835615905652d5919aef9141ed128682458493e91cea7845e7cef7f30d4ba33d129e6aa7e4cd84df032fa3e42fbd05adbe151c98d08b9918eff8bc61f3b7c450eb630da7642f00988aff63f07d8188f80ce12834292b6ba5959bc5389de30a2db515e6ff1e3a514b439bc348f436a49bed8e12700b9ea30fdf49ff6f358fdfb5dd01aded3258006047cd6897b31f9cf607a2245dcf6eb0187957cf5dcd59f00393efc54d2da1eee23545510a483c46a9a8fc60b337bf3a234544f616a8fe6acf6809e5655baac2688d54b48c7397c1e3723f1354cf6a7f7a645ab6e5cf1a33c8ae8f3db5bfcba733ba3c149b20577409f0abc6546cc2386d579afd51705f783b4738113e11fcbc3dfd2a3a997e0f110e2e1fe95d6c4e228aa0f218ef73650ebafececfa0d1890209837bf61932a59cef671151e15d020d2c61887ba9788782839ebb4ae049a2acd0fe4a0eb764ac5f3c78a6ce03850c77b94398f765509d1e5aa5ce5bfabed9d0e85c5cbc713bc6021072c10f936db9c3890b26bb94e66eca8094b708206e30ea938c24a1b205ff3fb394b826255943b6ac5e9c01f8590ef622863d1fa3b3f70f2b3485ad2a6af50fe43c978947f3543eb87385fd8827ae2d7fc2ccd70840cf56100698c75b27f6517e4f81836e2fd714bb876d37cb0112a865f3fee908da49da9385023954286d9b704628bb1283769bf765262ae38b60dbe10081c66c97831bcd579f9323d20b6728f1446d691b22cb49938a627bed5a3de3d17516c83782e8c506f6aa8112df8ff601721a913313b6fd4c98ddbae980c0c60d8ded657196d0bd3a6800a121d48f7c929a566808afef82399e43b107048273c9d206f25817e2e02bb860612458affbd08911d0deaccd63428b017a62188572ad6842a50653d572463a1044ce6dc41a2da7f5ef55c35546a0484f6075694ab00db2755434e4d67bfebad0f0cadbf117212e50efdc7b90a482fa4b87fdf2b5aa392a6103eca7d63726b7c634d6159c3d9ee</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码界面提示说明</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> proxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
            <tag> git </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汽车搭火教程</title>
      <link href="//post/car-start.html"/>
      <url>//post/car-start.html</url>
      
        <content type="html"><![CDATA[<p>汽车搭火教程</p><img src="/post/car-start/start.png" class="" title="car-start.png"><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汽车 </tag>
            
            <tag> 搭火 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle发布MavenCenter和Nexus私服插件</title>
      <link href="//post/gradle-maven.html"/>
      <url>//post/gradle-maven.html</url>
      
        <content type="html"><![CDATA[<p>基于<code>Java</code>语言与<code>Gradle Api</code>开发的<code>Gradle Plugin</code>，本<code>Gradle插件</code>可以让你的<code>library</code>发布到<code>MavenCenter</code>和自己的<code>nexus</code>私服变得非常容易。<br>内置了阿里云<code>Maven</code>中央仓库，其中配置了<code>aliyun</code>代理的<code>central</code>、<code>jcenter</code>、<code>google</code>。</p><img src="/post/gradle-maven/gradle-publish-plugin.png" class="" title="gradle-publish-plugin.png"><span id="more"></span><h3 id="一、最新版本-根目录build-gradle"><a href="#一、最新版本-根目录build-gradle" class="headerlink" title="一、最新版本(根目录build.gradle)"></a>一、最新版本(根目录build.gradle)</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">classpath<span class="token punctuation">(</span><span class="token string">"io.github.szhittech:gradle-maven:0.1.0"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="二、功能简介"><a href="#二、功能简介" class="headerlink" title="二、功能简介"></a>二、功能简介</h3><ul><li>支持发布多种类型的库, 例如：<code>Java</code>、<code>Android</code>、<code>Kotlin</code>；</li><li>支持在新的<code>gradle</code>中依赖方式 <code>api / implementation</code>；</li><li>支持签名库资源，<code>包括sources</code>、<code>Javadoc</code>、<code>POM</code>（需要<code>Gradle Version &gt;= 4.8</code>）</li><li>本插件内置了<code>signing</code>签名信息与文件(<code>secring.gpg</code>)</li></ul><h3 id="三、使用步骤"><a href="#三、使用步骤" class="headerlink" title="三、使用步骤"></a>三、使用步骤</h3><h4 id="1-在根目录build-gradle中新增如下代码"><a href="#1-在根目录build-gradle中新增如下代码" class="headerlink" title="1. 在根目录build.gradle中新增如下代码"></a>1. 在根目录<code>build.gradle</code>中新增如下代码</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">classpath<span class="token punctuation">(</span><span class="token string">"io.github.szhittech:gradle-maven:0.1.0"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-在library-build-gradle中新增如下代码"><a href="#2-在library-build-gradle中新增如下代码" class="headerlink" title="2. 在library/build.gradle中新增如下代码"></a>2. 在<code>library/build.gradle</code>中新增如下代码</h4><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">apply plugin: 'gradle.maven'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="四、发布MavenCenter步骤"><a href="#四、发布MavenCenter步骤" class="headerlink" title="四、发布MavenCenter步骤"></a>四、发布<code>MavenCenter</code>步骤</h3><h4 id="1-配置根目录下gradle-properties"><a href="#1-配置根目录下gradle-properties" class="headerlink" title="1. 配置根目录下gradle.properties"></a>1. 配置根目录下<code>gradle.properties</code></h4><p>如果发布到<code>MavenCenter</code>，该文件无需配置</p><h4 id="2-配置library-build-gradle"><a href="#2-配置library-build-gradle" class="headerlink" title="2. 配置library/build.gradle"></a>2. 配置<code>library/build.gradle</code></h4><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">ext {  groupId = "io.github.szhittech"  name = "gradle-maven"  version = "0.0.0-SNAPSHOT"  description = "A Gradle Plugin For Java、Android、Kotlin."  url = "https://e.coding.net/clife-devops/clifepublic/gradle-maven.git"  connection = "scm:git@github.com:szhittech/clifesdk.git"  authorId = "uuxia"  authorName = "xiamoumou"  authorEmail = "xxx@clife.com"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">必选</th><th>描述</th></tr></thead><tbody><tr><td align="left">groupId</td><td align="left"><font color="red">是</font></td><td>项目组织唯一的标识符</td></tr><tr><td align="left">name</td><td align="left"><font color="red">是</font></td><td>项目名称</td></tr><tr><td align="left">version</td><td align="left"><font color="red">是</font></td><td>项目版本。有<code>-SNAPSHOT</code>发布快照，没有发布<code>release</code>版</td></tr><tr><td align="left">description</td><td align="left">否</td><td>项目描述</td></tr><tr><td align="left">url</td><td align="left">否</td><td>项目地址</td></tr><tr><td align="left">connection</td><td align="left">否</td><td>项目地址</td></tr><tr><td align="left">authorId</td><td align="left">否</td><td>作者ID</td></tr><tr><td align="left">authorName</td><td align="left">否</td><td>作者姓名</td></tr><tr><td align="left">authorEmail</td><td align="left">否</td><td>作者邮箱</td></tr></tbody></table><h4 id="3-执行发布任务"><a href="#3-执行发布任务" class="headerlink" title="3. 执行发布任务"></a>3. 执行发布任务</h4><img src="/post/gradle-maven/maven.jpg" class="" title="发布Maven"><p>如上图，点击<code>uploadToMaven</code>，即可将库发布到MavenCenter</p><p>发布<code>MavenCenter</code>成功后 <code>Release</code>版步审核步骤如下：</p><ol><li>上述步骤成功后，请登录<a href="https://s01.oss.sonatype.org/">https://s01.oss.sonatype.org/</a>;</li><li>页面左侧栏点击<code>Build Promotion</code>-&gt;<code>Staging Repositories</code>；</li><li>在<code>Staging Repositories</code>选项卡可以看到刚提交的release版本库，如：<code>iogithubszhittect-xxxx</code>;</li><li>勾选<code>iogithubszhittect-xxxx</code>，点击<code>Close</code>；</li><li>稍等几十秒 <code>Refresh</code>，再次勾选<code>iogithubszhittect-xxxx</code>，点击<code>Release</code>,即可发布成功，等待大概4小时；</li></ol><h4 id="4-自定Maven-oss账号配置"><a href="#4-自定Maven-oss账号配置" class="headerlink" title="4. 自定Maven oss账号配置"></a>4. 自定<code>Maven oss</code>账号配置</h4><p>因本插件与<code>groupId = "io.github.szhittech"</code>绑定，如果用户需要添加自己的<code>groupid</code>，则需要在<code>gradle.properties</code>配置<code>Maven oss</code>账号</p><p><code>Maven oss</code>账号注册，请至<a href="https://s01.oss.sonatype.org/">https://s01.oss.sonatype.org/</a>注册</p><p><code>gradle.properties</code>配置如下：</p><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">maven.name=mavenmaven.username=你的oss账号maven.password=你的oss密码maven.release=https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/maven.snapshot=https://s01.oss.sonatype.org/content/repositories/snapshots/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五、发布Nexus私服步骤"><a href="#五、发布Nexus私服步骤" class="headerlink" title="五、发布Nexus私服步骤"></a>五、发布<code>Nexus</code>私服步骤</h3><h4 id="1-配置根目录下gradle-properties-1"><a href="#1-配置根目录下gradle-properties-1" class="headerlink" title="1. 配置根目录下gradle.properties"></a>1. 配置根目录下<code>gradle.properties</code></h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nexus.name<span class="token operator">=</span>codingcoding.username<span class="token operator">=</span>xiaoli.xia@clife.cncoding.password<span class="token operator">=</span>xxxxxxcoding.snapshot<span class="token operator">=</span>https://clife-devops-maven.pkg.coding.net/repository/public-repository/maven-snapshots/coding.release<span class="token operator">=</span>https://clife-devops-maven.pkg.coding.net/repository/public-repository/maven-releases/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">必选</th><th>描述</th></tr></thead><tbody><tr><td align="left">nexus.name</td><td align="left">是</td><td>自定义前缀名称，本例<code>coding</code>，下面字段就都以<code>coding</code>为前缀</td></tr><tr><td align="left">coding.username</td><td align="left">是</td><td>私服用户名</td></tr><tr><td align="left">coding.password</td><td align="left">是</td><td>私服密码</td></tr><tr><td align="left">coding.snapshot</td><td align="left">是</td><td>私服快照版上传地址</td></tr><tr><td align="left">coding.release</td><td align="left">是</td><td>私服<code>release</code>版上传地址</td></tr></tbody></table><h4 id="2-配置library-build-gradle-1"><a href="#2-配置library-build-gradle-1" class="headerlink" title="2. 配置library/build.gradle"></a>2. 配置<code>library/build.gradle</code></h4><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">ext {  groupId = "io.github.szhittech"  name = "gradle-maven"  version = "0.0.0-SNAPSHOT"  description = "A Gradle Plugin For Java、Android、Kotlin."  url = "https://e.coding.net/clife-devops/clifepublic/gradle-maven.git"  connection = "scm:git@github.com:szhittech/clifesdk.git"  authorId = "uuxia"  authorName = "xiamoumou"  authorEmail = "xxx@clife.cn"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">必选</th><th>描述</th></tr></thead><tbody><tr><td align="left">groupId</td><td align="left"><font color="red">是</font></td><td>项目组织唯一的标识符</td></tr><tr><td align="left">name</td><td align="left"><font color="red">是</font></td><td>项目名称</td></tr><tr><td align="left">version</td><td align="left"><font color="red">是</font></td><td>项目版本。有<code>-SNAPSHOT</code>发布快照，没有发布<code>release</code>版</td></tr><tr><td align="left">description</td><td align="left">否</td><td>项目描述</td></tr><tr><td align="left">url</td><td align="left">否</td><td>项目地址</td></tr><tr><td align="left">connection</td><td align="left">否</td><td>项目地址</td></tr><tr><td align="left">authorId</td><td align="left">否</td><td>作者ID</td></tr><tr><td align="left">authorName</td><td align="left">否</td><td>作者姓名</td></tr><tr><td align="left">authorEmail</td><td align="left">否</td><td>作者邮箱</td></tr></tbody></table><h4 id="3-执行发布任务-1"><a href="#3-执行发布任务-1" class="headerlink" title="3. 执行发布任务"></a>3. 执行发布任务</h4><img src="/post/gradle-maven/nexus.jpg" class="" title="发布Maven"><p>如上图，点击<code>uploadToCoding</code>，即可将库发布到Nexus私服</p><p><strong>注意：这里的<code>Coding</code>就是上文自定义的前缀(<code>nexus.name</code>)</strong></p><p>友情链接：</p><p><a href="https://blog.csdn.net/zyw0101/article/details/120670836?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120670836.pc_agg_new_rank&amp;utm_term=android%E5%8F%91%E5%B8%83maven&amp;spm=1000.2123.3001.4430">1. android发布三方库到远程maven仓库详细教程</a></p><p><a href="https://mp.weixin.qq.com/s/FVR6_zMp5DxO5N4ptVuA6g">2. 发布Android Lib到Maven Central</a></p>]]></content>
      
      
      <categories>
          
          <category> gradle </category>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> gradle </tag>
            
            <tag> android </tag>
            
            <tag> maven </tag>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>netty粘包断包处理</title>
      <link href="//post/netty-tcp-packet-decoder.html"/>
      <url>//post/netty-tcp-packet-decoder.html</url>
      
        <content type="html"><![CDATA[<p>基于Netty的TCP Server，处理二进制数据断包和粘包，以及tcp发送字符串的截取处理！</p><span id="more"></span><p>基于Netty的TCP Server，处理二进制数据断包和粘包，以及tcp发送字符串的截取处理！</p><!--more--><h2 id="一、5A协议在Netty中处理断包粘包"><a href="#一、5A协议在Netty中处理断包粘包" class="headerlink" title="一、5A协议在Netty中处理断包粘包"></a>一、5A协议在Netty中处理断包粘包</h2><pre class="line-numbers language-code" data-language="code"><code class="language-code">   长度[2] 1  1    设备编码[8]       Mac地址[6]    帧序号[4] 保留[8]          命令字[2] Body                                                             CRC2[2]5A 0042   40 00   00000199000B0301 8C18D9FFEB9D 00000046 0000000000000000 0104     0000000001000301000000000000000000000003000200000000000000000000 050B说明：   1. 长度len=0042(HEX)=66=(34+32)不包含5A;   2. 空包长度total=35；   3. 包头5A(1byte)不算在len区；int maxFrameLength      = 65535;   （len是两个byte，所以最大长度是无符号两个byte的最大值）int lengthFieldOffset   = 1;       （len的索引下表是1，下表从0开始）int lengthFieldLength   = 2;       （len是两个byte）int lengthAdjustment    = -2;      （netty从len后面开始读取，5A不在len中，len又是2byte，所以这里是-2）int initialBytesToStrip = 0;       （这个0表示完整的协议内容，如果不想要5A，那么这里就是1）socketChannel.pipeline().addLast(new LengthFieldBasedFrameDecoder(maxFrameLength, lengthFieldOffset, lengthFieldLength, lengthAdjustment, initialBytesToStrip));测试断包发送：完整数据包：5A0042400000000199000B03018C18D9FFEB9D00000046000000000000000001040000000001000301000000000000000000000003000200000000000000000000050B第一次发送（一包半）：5A0042400000000199000B03018C18D9FFEB9D00000046000000000000000001040000000001000301000000000000000000000003000200000000000000000000050B 5A0042400000000199000B03018C18D9FFEB9D0000004600000000000000000104第二次发送（补齐后半包）：0000000001000301000000000000000000000003000200000000000000000000050B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、水机"><a href="#二、水机" class="headerlink" title="二、水机"></a>二、水机</h2><pre class="line-numbers language-code" data-language="code"><code class="language-code">起始码  功能码 数据长度      Body                         CRCA2      10     0E        0102030405060708091011121314 050B说明：1.len=0E(HEX)=14,这里的len仅仅是Body的长度，不包含head的长度;lengthFieldOffset   = 2lengthFieldLength   = 1lengthAdjustment    = 2   initialBytesToStrip = 0maxFrameLength      = 255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/lzwglory/article/details/80242209">https://blog.csdn.net/lzwglory/article/details/80242209</a></p><p><a href="https://blog.csdn.net/zougen/article/details/79037675">https://blog.csdn.net/zougen/article/details/79037675</a></p><p><a href="https://www.jianshu.com/p/a0a51fd79f62">https://www.jianshu.com/p/a0a51fd79f62</a></p><p><a href="https://www.cnblogs.com/workharder/p/12325908.html">https://www.cnblogs.com/workharder/p/12325908.html</a></p>]]></content>
      
      
      <categories>
          
          <category> netty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> netty </tag>
            
            <tag> tcp </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派设置proxy</title>
      <link href="//post/pi-proxy.html"/>
      <url>//post/pi-proxy.html</url>
      
        <content type="html"><![CDATA[<p>树莓派设置proxy</p><span id="more"></span><pre><code>设置步骤：1. cd /etc/apt/apt.conf.d2. sudo nano 10proxy3. Acquire::http::Proxy "http://192.168.31.53:1090";4. reboot</code></pre>]]></content>
      
      
      <categories>
          
          <category> Raspberry </category>
          
          <category> proxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
            <tag> proxy </tag>
            
            <tag> raspberry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用SSH进行无密码身份验证</title>
      <link href="//post/gitssh.html"/>
      <url>//post/gitssh.html</url>
      
        <content type="html"><![CDATA[<p>git使用SSH进行无密码身份验证</p><span id="more"></span><h2 id="一、生成key"><a href="#一、生成key" class="headerlink" title="一、生成key"></a>一、生成key</h2><h3 id="ed25519方式"><a href="#ed25519方式" class="headerlink" title="ed25519方式"></a>ed25519方式</h3><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t ed25519 -C "uuxia@uuxia.cn"cat ~/.ssh/id_ed25519.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="rsa方式"><a href="#rsa方式" class="headerlink" title="rsa方式"></a>rsa方式</h3><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C "uuxia@uuxia.com"cat ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="二、测试"><a href="#二、测试" class="headerlink" title="二、测试"></a>二、测试</h2><h3 id="github"><a href="#github" class="headerlink" title="github"></a>github</h3><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="gitee"><a href="#gitee" class="headerlink" title="gitee"></a>gitee</h3><pre class="line-numbers language-none"><code class="language-none">ssh -T git@gitee.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="coding"><a href="#coding" class="headerlink" title="coding"></a>coding</h3><pre class="line-numbers language-none"><code class="language-none">ssh -T git@e.coding.net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><hr><p>在个人设置里面添加前，必须删除单独项目中添加的ssh key！！！</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
          <category> SSH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> gitee </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos服务器程序安装指南</title>
      <link href="//post/centos-server.html"/>
      <url>//post/centos-server.html</url>
      
        <content type="html"><![CDATA[<p>主要记录我的centos服务器上的服务环境安装，frp、nginx配置、java程序、mysql安装、个人博客hexo。</p><span id="more"></span><h2 id="1-nginx配置"><a href="#1-nginx配置" class="headerlink" title="1. nginx配置"></a>1. nginx配置</h2><pre class="line-numbers language-none"><code class="language-none">安装yum install nginx配置代码nano /etc/nginx/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h3><pre class="line-numbers language-none"><code class="language-none">user root;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;include /usr/share/nginx/modules/*.conf;events {worker_connections 1024;}http {log_format  main  '$remote_addr - $remote_user [$time_local] "$request" ''$status $body_bytes_sent "$http_referer" ''"$http_user_agent" "$http_x_forwarded_for"';    access_log  /var/log/nginx/access.log  main;    sendfile            on;    tcp_nopush          on;    tcp_nodelay         on;    keepalive_timeout   65;    types_hash_max_size 2048;    client_max_body_size 500m;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    include /etc/nginx/conf.d/*.conf;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="admin-conf"><a href="#admin-conf" class="headerlink" title="admin.conf"></a>admin.conf</h3><pre class="line-numbers language-none"><code class="language-none">server {        listen       80;        server_name  admin.uuxia.cn;                location / {           index index.html index.htm;           proxy_set_header Host $host;           proxy_pass https://127.0.0.1:8082/;           proxy_set_header Upgrade $http_upgrade;           proxy_http_version 1.1;           proxy_set_header Connection "upgrade";           proxy_redirect https://127.0.0.1/admin https://127.0.0.1:8080/;       }       }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="file-conf"><a href="#file-conf" class="headerlink" title="file.conf"></a>file.conf</h3><pre class="line-numbers language-none"><code class="language-none">autoindex on;# 显示目录autoindex_exact_size off;# 显示文件大小autoindex_localtime on;# 显示文件时间server {        listen       80;        server_name  file.uuxia.cn;        charset gbk,utf-8;                location / {            root /home/;            index  index.html index.htm;            charset utf-8;        } }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="cloud-conf"><a href="#cloud-conf" class="headerlink" title="cloud.conf"></a>cloud.conf</h3><pre class="line-numbers language-none"><code class="language-none">server {        listen       80 default_server;        server_name  cloud.uuxia.cn;        location / {            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_set_header Host $http_host;            proxy_redirect off;            proxy_pass http://127.0.0.1:5212;            # 如果您要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸            # client_max_body_size 20000m;        }    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="java-conf"><a href="#java-conf" class="headerlink" title="java.conf"></a>java.conf</h3><pre class="line-numbers language-none"><code class="language-none">server {        listen       80;        #listen       [::]:80 default_server;        server_name  uuxia.cn;        #root         /usr/share/nginx/html;        #charset gbk,utf-8;#        charset utf-8;        location ^~ /frp_server_web/{            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header Host $http_host;            proxy_pass http://127.0.0.1:9090;        }        location / {            root /home/file/xxl6097.github.io;            index index.html index.htm;            charset utf-8;        }        location /file {            alias /home/file;            autoindex on;            autoindex_exact_size off;            autoindex_localtime on;            charset utf-8;        }        location /websocket{            proxy_pass https://127.0.0.1:8082;            proxy_http_version 1.1;            proxy_set_header Upgrade $http_upgrade;            proxy_set_header Connection "upgrade";            proxy_read_timeout 3600s;        }        location /admin/ {           index index.html index.htm;           proxy_set_header Host $host;           proxy_pass https://127.0.0.1:8082/;           proxy_set_header Upgrade $http_upgrade;           proxy_http_version 1.1;           proxy_set_header Connection "upgrade";           proxy_redirect https://127.0.0.1/admin https://127.0.0.1:8080/;       }              location ~* ^(/v2|/webjars|/swagger-resources|/swagger-ui.html){         proxy_set_header Host $host;         proxy_set_header  X-Real-IP  $remote_addr;           proxy_set_header X-Forwarded-For $remote_addr;         #proxy_set_header Host $host:$server_port;         proxy_set_header X-Forwarded-Proto $scheme;         proxy_set_header X-Forwarded-Port $server_port;         proxy_pass https://127.0.0.1:8082; # 后端服务地址       }       location /v1 {         proxy_set_header Host $host;         add_header 'Access-Control-Allow-Origin' '*';         add_header 'Access-Control-Allow-Headers' 'X-Requested-With';         add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';         proxy_pass https://127.0.0.1:8082;        }        error_page 404 /404.html;            location = /40x.html {        }        error_page 500 502 503 504 /50x.html;            location = /50x.html {        }    }# Settings for a TLS enabled server.#    server {        listen       443 ssl http2 default_server;       # listen       [::]:443 ssl http2 default_server;        server_name  uuxia.cn;       # root         /usr/share/nginx/html;        ssl_certificate "/etc/pki/nginx/server.crt";        ssl_certificate_key "/etc/pki/nginx/private/server.key";        ssl_session_cache shared:SSL:1m;        ssl_session_timeout  10m;        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;        #ssl_ciphers PROFILE=SYSTEM;        ssl_prefer_server_ciphers on;#        charset gbk,utf-8;        client_max_body_size 500m;            location / {            root /home/file/xxl6097.github.io;            index index.html index.htm;            #proxy_pass https://127.0.0.1:8082/;            #proxy_redirect https://127.0.0.1/admin https://127.0.0.1:8082/;            charset utf-8;        }        location /file {            alias /home/file;            autoindex on;            autoindex_exact_size off;            autoindex_localtime on;            charset utf-8;        }        location /v1 {            proxy_set_header Host $host;            add_header 'Access-Control-Allow-Origin' '*';            add_header 'Access-Control-Allow-Headers' 'X-Requested-With';            add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';            proxy_pass https://127.0.0.1:8082;        }        location /admin/ {           index index.html index.htm;           proxy_set_header Host $host;           proxy_pass https://127.0.0.1:8082/;           proxy_set_header Upgrade $http_upgrade;           proxy_http_version 1.1;           proxy_set_header Connection "upgrade";           proxy_redirect https://127.0.0.1/admin https://127.0.0.1:8080/;       }              location ~* ^(/v2|/webjars|/swagger-resources|/swagger-ui.html){         proxy_set_header Host $host;         proxy_set_header  X-Real-IP  $remote_addr;           proxy_set_header X-Forwarded-For $remote_addr;         #proxy_set_header Host $host:$server_port;         proxy_set_header X-Forwarded-Proto $scheme;         proxy_set_header X-Forwarded-Port $server_port;         proxy_pass https://127.0.0.1:8082; # 后端服务地址       }        location /websocket{            proxy_pass https://127.0.0.1:8082;            proxy_http_version 1.1;            proxy_set_header Upgrade $http_upgrade;            proxy_set_header Connection "upgrade";            proxy_read_timeout 3600s;        }        error_page 404 /404.html;            location = /40x.html {        }#        error_page 500 502 503 504 /50x.html;            location = /50x.html {        }    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="2-mysql安装配置"><a href="#2-mysql安装配置" class="headerlink" title="2. mysql安装配置"></a>2. mysql安装配置</h2><pre class="line-numbers language-none"><code class="language-none">1.下载MySQLRed Hat Enterprise Linux / Oracle Linux2. 选择 `Red Hat Enterprise Linux 8 / Oracle Linux 8 (x86, 64-bit), RPM Bundle<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">安装wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.28-1.el8.x86_64.rpm-bundle.tartar -xvf mysql-8.0.28-1.el8.x86_64.rpm-bundle.tar rpm -ivh mysql-community-common-8.0.28-1.el8.x86_64.rpm --nodeps --forcerpm -ivh mysql-community-libs-8.0.28-1.el8.x86_64.rpm --nodeps --forcerpm -ivh mysql-community-client-8.0.28-1.el8.x86_64.rpm --nodeps --forcerpm -ivh mysql-community-server-8.0.28-1.el8.x86_64.rpm --nodeps --force通过 rpm -qa | grep mysql 命令查看 mysql 的安装包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">通过以下命令，完成对 mysql 数据库的初始化和相关配置mysqld --initialize;chown mysql:mysql /var/lib/mysql -R;systemctl start mysqld.service;systemctl enable mysqld;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过 <code>cat /var/log/mysqld.log | grep password</code> 命令查看数据库的密码</p><p>通过 <code>mysql -uroot -p</code> 敲回车键进入数据库登陆界面</p><p>通过 <code>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'Xxl2475431305.';</code> 命令来修改密码<br><code>ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'Xxl2475431305.';</code><br>这下密码改成了 root</p><p>通过 exit; 命令退出 MySQL，然后通过新密码再次登陆</p><p>通过以下命令，进行远程访问的授权</p><pre class="line-numbers language-none"><code class="language-none">create user 'root'@'%' identified with mysql_native_password by 'root';grant all privileges on *.* to 'root'@'%' with grant option;flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>sqlyog链接时出现2058异常</p><p><code>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';</code><br>其中password为自己修改的密码。然后SQLyog中重新连接，则可连接成功，OK。</p><p>如果报错：ERROR 1396 (HY000): Operation ALTER USER failed for ‘root’@’localhost’则使用下面命令：</p><p><code>ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'Xxl2475431305.';</code></p><hr><h2 id="3-JDK安装配置"><a href="#3-JDK安装配置" class="headerlink" title="3. JDK安装配置"></a>3. JDK安装配置</h2><h3 id="方式一（推荐）"><a href="#方式一（推荐）" class="headerlink" title="方式一（推荐）"></a>方式一（推荐）</h3><pre class="line-numbers language-none"><code class="language-none">查询安装的jdk版本yum -y list java*安装jdk1.8yum install -y java-11-openjdk.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><pre class="line-numbers language-none"><code class="language-none">https://www.oracle.com/java/technologies/downloads/#java8Mac：https://download.oracle.com/otn/java/jdk/8u321-b07/df5ad55fdd604472a86a45a217032c7d/jdk-8u321-macosx-x64.dmgLinux：https://download.oracle.com/otn/java/jdk/8u321-b07/df5ad55fdd604472a86a45a217032c7d/jdk-8u321-linux-x64.tar.gzWindows：https://download.oracle.com/otn/java/jdk/8u321-b07/df5ad55fdd604472a86a45a217032c7d/jdk-8u321-windows-x64.exe选择 `jdk-8u321-linux-x64.tar.gz`解压 `tar -zxvf jdk-8u321-linux-x64.tar.gz`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">修改环境变量 `nano /etc/profile`export JAVA_HOME=/usr/lib/jdk1.8.0_321export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/binsource /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="4-gralde安装"><a href="#4-gralde安装" class="headerlink" title="4. gralde安装"></a>4. gralde安装</h2><pre class="line-numbers language-none"><code class="language-none">wget https://services.gradle.org/distributions/gradle-6.7-bin.zipunzip gradle-6.7-bin.zipnano ~/.bash_profilePATH=$PATH:/usr/lib/gradle-6.7/binsource ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="5-安装frps安装"><a href="#5-安装frps安装" class="headerlink" title="5. 安装frps安装"></a>5. 安装frps安装</h2><p>服务端配置</p><pre class="line-numbers language-none"><code class="language-none">[common]bind_port = 8000token = xxxxxxxxxdashboard_port=8888dashboard_user = admindashboard_pwd = adminvhost_http_port = 9090vhost_https_port = 9091subdomain_host = uuxia.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端配置</p><pre class="line-numbers language-none"><code class="language-none">[common]tls_enable = trueadmin_addr = 0.0.0.0admin_port = 7400admin_user = adminadmin_pwd = admintoken = xxxxxx#server_addr = 127.0.0.1server_addr = uuxia.cnserver_port = 8000[公司-树莓派3B]type = tcplocal_ip = 0.0.0.0local_port = 22remote_port = 2222[公司-FRP客户端管理页面]type = tcplocal_ip = 0.0.0.0local_port = 7400remote_port = 7401[公司-win]type = tcplocal_ip = 192.168.31.53local_port = 3389remote_port = 7001[公司-iMac-VNC]type = tcplocal_ip = 192.168.31.92local_port = 5900remote_port = 7002[公司-iMac-SSH]type = tcplocal_ip = 192.168.31.92local_port = 22remote_port = 7003<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="6-安装Node-js"><a href="#6-安装Node-js" class="headerlink" title="6. 安装Node.js"></a>6. 安装Node.js</h2><hr><pre class="line-numbers language-none"><code class="language-none">1 下载官网地址：https://nodejs.org/en/download/wget https://nodejs.org/dist/v10.24.0/node-v10.24.0-linux-x64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">安装tar -xvf node-v10.24.0-linux-x64.tar.gzmv node-v10.24.0-linux-x64 /opt/NodejsNODE_HOME=/opt/Nodejsexport PATH=$NODE_HOME/bin:$PATHsource /etc/profilenpm install -g hexo-clinpm uninstall hexo-cli -g  推荐这个，成功卸载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="7-页脚备案代码"><a href="#7-页脚备案代码" class="headerlink" title="7. 页脚备案代码"></a>7. 页脚备案代码</h2><pre class="line-numbers language-none"><code class="language-none">&lt;div style="color:#666;text-align:center;margin-top:-10px;padding-bottom:35px;"&gt;    &lt;p&gt;&lt;a style="color:#666;" text-decoration:underline;" href="http://beian.miit.gov.cn/"&gt;工业和信息化部备案管理系统网站 粤ICP备2022014941号&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;主办单位：&lt;a style="color:#666;" text-decoration:underline;" target="_blank" href="http://uuxia.cn"&gt;悠悠科技&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Operated by Guangzhou ChoMeng Computer System Co., Ltd.&lt;/p&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> nginx </category>
          
          <category> frp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> hexo </tag>
            
            <tag> java </tag>
            
            <tag> frp </tag>
            
            <tag> nginx </tag>
            
            <tag> mysql </tag>
            
            <tag> gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo写文章使用说明</title>
      <link href="//post/shi-yong-shuo-ming.html"/>
      <url>//post/shi-yong-shuo-ming.html</url>
      
        <content type="html"><![CDATA[<p>如何使用hexo作文章</p><span id="more"></span><h2 id="1-内容说明"><a href="#1-内容说明" class="headerlink" title="1. 内容说明"></a>1. 内容说明</h2><pre class="line-numbers language-none"><code class="language-none">---title: hexo写文章使用说明date: 2022-02-09 14:08:49tags: [写作,hexo]categories: hexo---如何使用hexo作文章&lt;!--more--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-新建文章可用Hexo命令创建："><a href="#2-新建文章可用Hexo命令创建：" class="headerlink" title="2. 新建文章可用Hexo命令创建："></a>2. 新建文章可用Hexo命令创建：</h2><pre class="line-numbers language-none"><code class="language-none">hexo new vpn使用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-构建和发布"><a href="#3-构建和发布" class="headerlink" title="3. 构建和发布"></a>3. 构建和发布</h2><pre class="line-numbers language-none"><code class="language-none">hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云【centos7/8】一键安装 shadowsocks-libev</title>
      <link href="//post/tencent-shadowsocks.html"/>
      <url>//post/tencent-shadowsocks.html</url>
      
        <content type="html"><![CDATA[<p>CentOS 7/8 一键安装 shadowsocks-libev, 本教程仅提供学习，请勿用于商业用途和不法行为。</p><p>由于 Google BBR 需要内核版本 4.9 以上，如果安装时内核版本低于 4.9 建议先升级内核版本。</p><p>提示：CentOS 7 自带内核版本为 3.10，CentOS 8 自带内核版本为 4.18。</p><p>查看内核版本命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1、下载脚本"><a href="#1、下载脚本" class="headerlink" title="1、下载脚本"></a>1、下载脚本</h3><p>一键脚本已集成TCP优化、自动开启Google BBR（限 4.9 或更高版本内核）、自动安装 shadowsocks-libev</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://down.24kplus.com/linux/shadowsocks/centos-shadowsocks-libev.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、执行脚本进行安装"><a href="#2、执行脚本进行安装" class="headerlink" title="2、执行脚本进行安装"></a>2、执行脚本进行安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x centos-shadowsocks-libev.sh <span class="token operator">&amp;&amp;</span> ./centos-shadowsocks-libev.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、根据shell脚本提示输入相关信息"><a href="#3、根据shell脚本提示输入相关信息" class="headerlink" title="3、根据shell脚本提示输入相关信息"></a>3、根据shell脚本提示输入相关信息</h3><p>1、提示设置SS密码，输入自定义密码后按回车，也可以直接按回车使用默认密码<br>2、接下来选择SS要使用的服务器端口，输入自己喜欢的端口， 也可以直接按回车使用默认端口<br>3、 然后选择加密方式（仅保留相对安全的加密方式），如果选择chacha20的话，就输入对应序号3，按回车继续<br>4、 安装完成后，会有如下图安装成功的提示，记住各项信息，在客户端连接时需要用到</p><h3 id="4、shadowsocks管理"><a href="#4、shadowsocks管理" class="headerlink" title="4、shadowsocks管理"></a>4、shadowsocks管理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#!/bin/bash</span><span class="token keyword">function</span> <span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    systemctl status shadowsocks-libev.service<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function-name function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    systemctl restart shadowsocks-libev.service<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function-name function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    journalctl -f -u shadowsocks-libev.service<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function-name function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token builtin class-name">echo</span> <span class="token string">"1. 重启"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"2. 重看状态"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"3. 查看日志"</span>    <span class="token builtin class-name">echo</span> <span class="token string">"请输入编号:"</span>    <span class="token builtin class-name">read</span> index    <span class="token keyword">case</span> <span class="token string">"<span class="token variable">$index</span>"</span> <span class="token keyword">in</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>restart<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    *<span class="token punctuation">)</span> <span class="token builtin class-name">echo</span> <span class="token string">"exit"</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>  <span class="token keyword">esac</span><span class="token punctuation">}</span>m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> VPN </category>
          
          <category> shadowsocks </category>
          
          <category> centos7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
            <tag> centos </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国庆长假新疆旅行-北疆环游</title>
      <link href="//post/xj-north-circle.html"/>
      <url>//post/xj-north-circle.html</url>
      
        <content type="html"><![CDATA[<h1 id="行程速览"><a href="#行程速览" class="headerlink" title="行程速览"></a>行程速览</h1><img src="/post/xj-north-circle/xj-todo-list.png" class=""><h1 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h1><ol><li>日照强烈日夜温差大，做好防晒带好冲锋衣或羽绒服（特别是喀纳斯地区，观鱼亭山顶大风变幻莫测）;</li><li>新疆各景点之间距离较远，基本每天换酒店，一次性生活用品带足（建议内裤袜子毛巾也最好买一次性）;</li><li>自驾比较随性，建议当天订隔天酒店即可（最好订景区附近城镇，性价比高又干净;</li><li><font color="red">车子油箱少于一半见到加油站就满上;</font></li><li>开车要注意区间限速，哪怕前面一望无际，也只能慢慢的开;</li><li>新疆买东西是按公斤计算，吃饭菜量很大，北方人可能没感觉，南方去的点菜要注意量;</li><li>治安绝对可靠安全，各种检查，当地百姓纯朴善良（详细后文会说）;</li><li>外地卡去新疆只有克拉玛依有4G，其他地区一概没有，建议到新疆第一天办张当地上网卡.</li></ol><h4 id="D1-9月27号-深圳-乌鲁木齐"><a href="#D1-9月27号-深圳-乌鲁木齐" class="headerlink" title="D1(9月27号):深圳-乌鲁木齐"></a>D1(9月27号):深圳-乌鲁木齐</h4><h5 id="行程安排："><a href="#行程安排：" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>去酒店放下行李；</li><li>时间充足的话，可以去【新疆博物馆】，感怀西域历史的沧桑变化；</li><li>如果想要体验感受浓郁异域风情，推荐可以去【二道桥国际大巴扎】，独特的西域文化，琳琅满目的商品及各种新疆特色美食，说不定还能淘到不少好货；</li><li>找超市备货；</li><li>预定好下一站可可托海的住宿；</li></ol><img src="/post/xj-north-circle/xj-jipiao.jpeg" class=""><h5 id="注意事项：-1"><a href="#注意事项：-1" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li>晚上21:00以后才会天黑；</li></ol><h4 id="D2-9月28号-乌鲁木齐-准噶尔盆地-可可苏里湖-可可托海镇"><a href="#D2-9月28号-乌鲁木齐-准噶尔盆地-可可苏里湖-可可托海镇" class="headerlink" title="D2(9月28号):乌鲁木齐-准噶尔盆地-可可苏里湖-可可托海镇"></a>D2(9月28号):乌鲁木齐-准噶尔盆地-可可苏里湖-可可托海镇</h4><h5 id="行程安排：-1"><a href="#行程安排：-1" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>途中小镇午餐；</li><li>继续北上穿越准噶尔盆地，驶向阿勒泰山腹地；</li><li>路经古尔班0烤馕、凉皮、炒面、烤串，地道的羊羔肉;</li><li>一路上大概过了十几个安检站</li></ol><h5 id="车程："><a href="#车程：" class="headerlink" title="车程："></a>车程：</h5><ol><li>约520KM（高速、国道为主）;</li><li>区间测速80km；</li><li><a href="https://www.amap.com/dir?from%5Bid%5D=B03DF0668Z-to&amp;from%5Bname%5D=%E4%B9%8C%E9%B2%81%E6%9C%A8%E9%BD%90%E5%9C%B0%E7%AA%9D%E5%A0%A1%E5%9B%BD%E9%99%85%E6%9C%BA%E5%9C%BA&amp;from%5Blnglat%5D=87.479742,43.905808&amp;from%5Bmodxy%5D=87.478441,43.902829&amp;from%5Bpoitype%5D=150104&amp;from%5Badcode%5D=650104&amp;to%5Badcode%5D=654322&amp;to%5Bname%5D=%E5%8F%AF%E5%8F%AF%E6%89%98%E6%B5%B7%E9%95%87&amp;to%5Bid%5D=B038A0LO1U&amp;to%5Bpoitype%5D=190106&amp;to%5Blnglat%5D=89.81118900000001,47.221611&amp;to%5Bmodxy%5D=&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img1.png" class=""><hr><h4 id="D3-9月29号-可可托海镇-可可托海国家地质公园-五彩滩-布尔津"><a href="#D3-9月29号-可可托海镇-可可托海国家地质公园-五彩滩-布尔津" class="headerlink" title="D3(9月29号):可可托海镇-可可托海国家地质公园-五彩滩-布尔津"></a>D3(9月29号):可可托海镇-可可托海国家地质公园-五彩滩-布尔津</h4><h5 id="费用："><a href="#费用：" class="headerlink" title="费用："></a>费用：</h5><ol><li>可可托海风景区（门票：90，区间车：36）；</li><li>五彩滩景区（门票：50，建议游玩2小时）；</li></ol><h5 id="行程安排：-2"><a href="#行程安排：-2" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>早餐后，前往“世界地质公园”【可可托海国家地质公园】，又称额尔齐斯河大峡谷；</li><li>进景区需要办理“边境通行证”，在购票处出示身份证办理即可；</li><li>景区车一路沿额尔齐斯河河谷前行；</li><li>沿途欣赏金秋的白桦林、石门、夫妻树等，游玩拍摄可可托海著名的标志【神钟山】；</li><li>之后可以沿着额尔齐斯河峡谷往里徒步深入一段；</li><li>驾车到富蕴县继续大众点评找午餐，午餐后富蕴县——北屯——布尔津——五彩滩；</li><li>游览五彩滩景区后返回布尔津，晚餐并游览著名的布尔津美食街；</li><li>9点回布尔津市区，入住布尔津国际酒店</li></ol><h5 id="注意事项：-2"><a href="#注意事项：-2" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li><font color="red">进景区需要办理“边境通行证”，在购票处出示身份证办理即可</font></li><li>景区不必走到山顶中蒙边境，后半程风景和前半程类似，另外可以沿中间河边的石子路走，景色更美；</li></ol><h5 id="车程：-1"><a href="#车程：-1" class="headerlink" title="车程："></a>车程：</h5><ol><li>自驾全程350公里，6小时左右。</li><li>布尔津-五彩滩：距离40KM，车程50分钟（此段有区间测速，60）；</li><li><font color="red">富蕴县-布尔津 全程国道，有测速，而且还有流动测速（路边放个临时测速器，CT就停在暗处）</font>；</li><li><a href="https://www.amap.com/dir?from%5Badcode%5D=654322&amp;from%5Bname%5D=%E5%8F%AF%E5%8F%AF%E6%89%98%E6%B5%B7%E9%95%87&amp;from%5Bid%5D=B038A0LO1U-from&amp;from%5Bpoitype%5D=190106&amp;from%5Blnglat%5D=89.81118900000001,47.221611&amp;from%5Bmodxy%5D=&amp;to%5Bid%5D=B038A0LR4U&amp;to%5Bname%5D=%E5%B8%83%E5%B0%94%E6%B4%A5%E5%8E%BF&amp;to%5Blnglat%5D=86.874897,47.701850&amp;to%5Bmodxy%5D=86.874897,47.701850&amp;to%5Bpoitype%5D=190105&amp;to%5Badcode%5D=654321&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img2.png" class=""><img src="/post/xj-north-circle/xj-img3.png" class=""><hr><h4 id="D4-9月30号-布尔津-喀纳斯-贾登峪"><a href="#D4-9月30号-布尔津-喀纳斯-贾登峪" class="headerlink" title="D4(9月30号):布尔津-喀纳斯-贾登峪"></a>D4(9月30号):布尔津-喀纳斯-贾登峪</h4><p>#####费用：</p><ol><li>门票185元/人，门票站到游客中心100元/人，游客中心到观景台120元/人，游船120元/人</li></ol><h5 id="行程安排：-3"><a href="#行程安排：-3" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>布尔津到贾登峪门票站，135公里，区间测速必须要开3个小时；</li><li>买喀纳斯景区门票坐景区大巴1小时到游客中心；</li><li>在游客中心用餐，然后分头行动，上观鱼台的上观鱼台（要爬1068步梯坎才能到观鱼台，去湖边的去湖边</li><li>耍了2个多小时后回游客中心坐大巴出景区；</li><li>返程沿途游览三湾（三湾里就月亮湾最为有代表性，另外两个需要清晨漫步才有感觉，这样就必须在喀纳斯景区里住）；</li><li>回贾登峪后自驾1个小时前往禾木门票站，转大巴1小时到禾木村入住；</li></ol><h5 id="注意事项：-3"><a href="#注意事项：-3" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li><font color="red">去喀纳斯之前请在布尔津把油箱加满，这来回路上没有加油站</font></li><li>进去喀纳斯一定要裹严实了，冲锋衣羽绒服都穿起来;</li><li>区间车要坐在面向车头的右手边，区间车要坐半个小时，右手边会看到山谷，左手边就只能看堡坎了..</li><li>布尔津到喀纳斯后半截的路上，大客车巨多，越往后面山路也最多，安检站也多</li></ol><h5 id="车程：-2"><a href="#车程：-2" class="headerlink" title="车程："></a>车程：</h5><ol><li>自驾全程135公里，3小时左右。</li><li>全程区县测速限速：60km；</li><li>去程走大路，返程走小路；</li><li><a href="https://www.amap.com/dir?from%5Bid%5D=B038A0LR4U-from&amp;from%5Bname%5D=%E5%B8%83%E5%B0%94%E6%B4%A5%E5%8E%BF&amp;from%5Blnglat%5D=86.874897,47.701850&amp;from%5Bmodxy%5D=86.874897,47.701850&amp;from%5Bpoitype%5D=190105&amp;from%5Badcode%5D=654321&amp;to%5Bid%5D=B0FFL2UMIZ&amp;to%5Bname%5D=%E8%B4%BE%E7%99%BB%E5%B3%AA%E9%97%A8%E7%A5%A8%E7%AB%99&amp;to%5Blnglat%5D=87.130721,48.507338&amp;to%5Bmodxy%5D=87.130721,48.507338&amp;to%5Bpoitype%5D=070000&amp;to%5Badcode%5D=654321&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img4.png" class=""><img src="/post/xj-north-circle/xj-img5.png" class=""><hr><h4 id="D5-10月1号-贾登峪-禾木一日游-禾木村"><a href="#D5-10月1号-贾登峪-禾木一日游-禾木村" class="headerlink" title="D5(10月1号):贾登峪-禾木一日游-禾木村"></a>D5(10月1号):贾登峪-禾木一日游-禾木村</h4><p>到达禾木村差不多上午10点左右。</p><h5 id="费用：-1"><a href="#费用：-1" class="headerlink" title="费用："></a>费用：</h5><h5 id="行程安排：-4"><a href="#行程安排：-4" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>上午游览村庄北面的白桦林、草原；</li><li>中午回去睡了个午觉；</li><li>下午骑马到村庄南面观景台，河边游玩（强烈推荐3小时的美丽峰骑马游，200元/人，其实性价比非常之高，谁骑谁知道）；</li><li>傍晚大家可以前往【禾木日落观景台】，俯瞰禾木村全景</li><li>晚上，可以干点想干的事。。。</li></ol><h5 id="注意事项：-4"><a href="#注意事项：-4" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li>下午4、5点钟的时候太阳巨大巨晒，注意选择时间</li></ol><h5 id="车程：-3"><a href="#车程：-3" class="headerlink" title="车程："></a>车程：</h5><ol><li>距离70KM，2个半小时车程；</li><li><a href="https://www.amap.com/dir?from%5Bid%5D=B0FFL2UMIZ-from&amp;from%5Bname%5D=%E8%B4%BE%E7%99%BB%E5%B3%AA%E9%97%A8%E7%A5%A8%E7%AB%99&amp;from%5Blnglat%5D=87.130721,48.507338&amp;from%5Bmodxy%5D=87.130721,48.507338&amp;from%5Bpoitype%5D=070000&amp;from%5Badcode%5D=654321&amp;to%5Bid%5D=B0FFIPUO59&amp;to%5Bname%5D=%E7%A6%BE%E6%9C%A8%E6%9D%91&amp;to%5Blnglat%5D=87.432910,48.568561&amp;to%5Bmodxy%5D=87.432910,48.568561&amp;to%5Bpoitype%5D=190108&amp;to%5Badcode%5D=654321&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img6.png" class=""><img src="/post/xj-north-circle/xj-img7.png" class=""><hr><h4 id="D6-10月2号-禾木村-乌尔禾胡杨林-魔鬼城-乌尔禾"><a href="#D6-10月2号-禾木村-乌尔禾胡杨林-魔鬼城-乌尔禾" class="headerlink" title="D6(10月2号):禾木村-乌尔禾胡杨林-魔鬼城-乌尔禾"></a>D6(10月2号):禾木村-乌尔禾胡杨林-魔鬼城-乌尔禾</h4><h5 id="费用：-2"><a href="#费用：-2" class="headerlink" title="费用："></a>费用：</h5><ol><li>门票+观光车 98/人</li></ol><h5 id="行程安排：-5"><a href="#行程安排：-5" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>6点半起床上观景台拍日出，是否能看到晨雾美景就需要点运气了；</li><li>驾车回布尔津午餐；</li><li>魔鬼城景区里坐小火车一路前行</li></ol><h5 id="注意事项：-5"><a href="#注意事项：-5" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li>禾木景区出来的这段景色超美，路边设有多个观景台，可供停车拍照；</li><li>魔鬼城合适摄影，特别是日出和日落的时候，景区是24小时开放，但日落要10点过，不要去太早 注意选择时间</li><li><font color="red">乌尔禾，入住博玉大酒店，性价比相当高哦,附近美食也超多;</font></li><li><a href="https://go.cqmmgo.com/forum-2466-thread-47141499934173209-7-1.html" title="在马路对面吃到最好吃的一家大盘鸡！还有塔城的特色风干牛肉、特色拉条子">在马路对面吃到最好吃的一家大盘鸡！还有塔城的特色风干牛肉、特色拉条子</a>;</li></ol><h5 id="车程：-4"><a href="#车程：-4" class="headerlink" title="车程："></a>车程：</h5><ol><li>禾木-布尔津-克拉玛依：距离470KM，10小时车程（前半段国道有区间测速，后半段高速）；</li><li>布尔津-克拉玛依这段横风很大，开车要双手握紧方向盘；</li><li><a href="https://www.amap.com/dir?from%5Bid%5D=B0FFIPUO59-from&amp;from%5Bname%5D=%E7%A6%BE%E6%9C%A8%E6%9D%91&amp;from%5Blnglat%5D=87.432910,48.568561&amp;from%5Bmodxy%5D=87.432910,48.568561&amp;from%5Bpoitype%5D=190108&amp;from%5Badcode%5D=654321&amp;to%5Bid%5D=B03DE0004L&amp;to%5Bname%5D=%E4%B8%96%E7%95%8C%E9%AD%94%E9%AC%BC%E5%9F%8E&amp;to%5Blnglat%5D=85.746798,46.129675&amp;to%5Bmodxy%5D=85.735517,46.137257&amp;to%5Bpoitype%5D=110202&amp;to%5Badcode%5D=650205&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img8.png" class=""><hr><h4 id="D7-10月3号-乌尔禾-果子沟大桥-赛里木湖"><a href="#D7-10月3号-乌尔禾-果子沟大桥-赛里木湖" class="headerlink" title="D7(10月3号):乌尔禾-果子沟大桥-赛里木湖"></a>D7(10月3号):乌尔禾-果子沟大桥-赛里木湖</h4><h5 id="费用：-3"><a href="#费用：-3" class="headerlink" title="费用："></a>费用：</h5><ol><li>门票70一人</li></ol><h5 id="行程安排：-6"><a href="#行程安排：-6" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>中午下道去乌苏市区找大众点评美食（要稍早到达赛里木，后面景点较多，不建议在乌苏就餐）；</li><li>大约下午5点才到赛里木湖，环湖一圈玩了3个小时后；</li><li>入住果子沟大桥绝佳观景台唯一的山庄；</li><li>早点的话，可以上观景台看全景。</li></ol><img src="/post/xj-north-circle/xj-img9.png" class=""><h5 id="注意事项：-6"><a href="#注意事项：-6" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li><a href="https://go.cqmmgo.com/forum-2466-thread-47141499934173209-8-1.html" title="可入住龙岭山庄，山顶北可观赛里木湖全景，南可俯揽果子沟大桥全景">可入住龙岭山庄，山顶北可观赛里木湖全景，南可俯揽果子沟大桥全景</a>；</li><li><font color="red">龙岭山庄</font>8点半开始供应早餐</li></ol><h5 id="车程：-5"><a href="#车程：-5" class="headerlink" title="车程："></a>车程：</h5><ol><li>自驾全程600公里，不耽误只要6个小时；</li><li><a href="https://www.amap.com/dir?from%5Bid%5D=B03DE0004L-from&amp;from%5Bname%5D=%E4%B8%96%E7%95%8C%E9%AD%94%E9%AC%BC%E5%9F%8E&amp;from%5Blnglat%5D=85.746798,46.129675&amp;from%5Bmodxy%5D=85.735517,46.137257&amp;from%5Bpoitype%5D=110202&amp;from%5Badcode%5D=650205&amp;to%5Bid%5D=B038D0LN33&amp;to%5Bname%5D=%E8%B5%9B%E9%87%8C%E6%9C%A8%E6%B9%96%E6%B8%B8%E5%AE%A2%E4%B8%AD%E5%BF%83&amp;to%5Blnglat%5D=81.394494,44.601962&amp;to%5Bmodxy%5D=81.394578,44.601789&amp;to%5Bpoitype%5D=070000&amp;to%5Badcode%5D=652701&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img10.png" class=""><hr><h4 id="D8-10月4号-赛里木湖-九曲十八弯日落-巴音布鲁克镇"><a href="#D8-10月4号-赛里木湖-九曲十八弯日落-巴音布鲁克镇" class="headerlink" title="D8(10月4号):赛里木湖-九曲十八弯日落-巴音布鲁克镇"></a>D8(10月4号):赛里木湖-九曲十八弯日落-巴音布鲁克镇</h4><h5 id="费用：-4"><a href="#费用：-4" class="headerlink" title="费用："></a>费用：</h5><h5 id="行程安排：-7"><a href="#行程安排：-7" class="headerlink" title="行程安排："></a>行程安排：</h5><ol><li>早起去拍赛里木湖日出全景；</li><li>出发，路径伊犁看薰衣草；</li><li>午餐可以在高速服务区用餐；</li><li>看巴音布鲁克景区欣赏九曲十八弯的日落</li></ol><h5 id="注意事项：-7"><a href="#注意事项：-7" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li>巴音布鲁克景区过了晚上8点不准进；</li><li>到达巴音布鲁克镇上，可以<font color="red">入住龙兴国际大酒店</font></li><li><font color="red">如果到的比较早，那么就今天游玩完巴音布鲁克景点</font></li></ol><h5 id="车程：-6"><a href="#车程：-6" class="headerlink" title="车程："></a>车程：</h5><ol><li>自驾全程450公里，7小时左右。</li><li><a href="https://www.amap.com/dir?from%5Bid%5D=B038D0LN33-from&amp;from%5Bname%5D=%E8%B5%9B%E9%87%8C%E6%9C%A8%E6%B9%96%E6%B8%B8%E5%AE%A2%E4%B8%AD%E5%BF%83&amp;from%5Blnglat%5D=81.394494,44.601962&amp;from%5Bmodxy%5D=81.394578,44.601789&amp;from%5Bpoitype%5D=070000&amp;from%5Badcode%5D=652701&amp;to%5Badcode%5D=652827&amp;to%5Bname%5D=%E5%B7%B4%E9%9F%B3%E5%B8%83%E9%B2%81%E5%85%8B%E9%95%87&amp;to%5Bid%5D=B0FFIITRO1&amp;to%5Bpoitype%5D=190106&amp;to%5Blnglat%5D=84.15197999999998,43.033831&amp;to%5Bmodxy%5D=&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img11.png" class=""><hr><h4 id="D9-10月5号-巴音布鲁克镇-天鹅湖-九曲十八弯-独库公路-乌鲁木齐"><a href="#D9-10月5号-巴音布鲁克镇-天鹅湖-九曲十八弯-独库公路-乌鲁木齐" class="headerlink" title="D9(10月5号):巴音布鲁克镇-天鹅湖-九曲十八弯-独库公路-乌鲁木齐"></a>D9(10月5号):巴音布鲁克镇-天鹅湖-九曲十八弯-独库公路-乌鲁木齐</h4><h5 id="费用：-5"><a href="#费用：-5" class="headerlink" title="费用："></a>费用：</h5><ol><li>景区门票+保险+观光车，170一人</li></ol><h5 id="行程安排：-8"><a href="#行程安排：-8" class="headerlink" title="行程安排："></a>行程安排：</h5><p>1.上午进巴音布鲁克景区游览天鹅湖和九曲十八弯；<br>2.中午在巴音布鲁克镇上撸了本次行程最美味的羊肉串后出发；<br>3.下午：号称中国最美公路的天山天路——独库公路，欣赏沿途一日四季美景；<br>4.直接杀到乌鲁木齐。</p><h5 id="注意事项：-8"><a href="#注意事项：-8" class="headerlink" title="注意事项："></a>注意事项：</h5><ol><li>晚上8点加油站关门</li><li><font color="red">尽量早点出发，因为去乌鲁木齐有500km，最晚不能超过13点</font></li></ol><h5 id="车程：-7"><a href="#车程：-7" class="headerlink" title="车程："></a>车程：</h5><ol><li><a href="https://www.amap.com/dir?from%5Badcode%5D=652827&amp;from%5Bname%5D=%E5%B7%B4%E9%9F%B3%E5%B8%83%E9%B2%81%E5%85%8B%E9%95%87&amp;from%5Bid%5D=B0FFIITRO1-from&amp;from%5Bpoitype%5D=190106&amp;from%5Blnglat%5D=84.15197999999998,43.033831&amp;from%5Bmodxy%5D=&amp;to%5Bid%5D=B03DF0668Z&amp;to%5Bname%5D=%E4%B9%8C%E9%B2%81%E6%9C%A8%E9%BD%90%E5%9C%B0%E7%AA%9D%E5%A0%A1%E5%9B%BD%E9%99%85%E6%9C%BA%E5%9C%BA&amp;to%5Blnglat%5D=87.479742,43.905808&amp;to%5Bmodxy%5D=87.478441,43.902829&amp;to%5Bpoitype%5D=150104&amp;to%5Badcode%5D=650104&amp;type=car&amp;policy=1" title="行车路线">行车路线</a></li></ol><img src="/post/xj-north-circle/xj-img12.png" class=""><hr><h4 id="D10-10月6号-乌鲁木齐一日游"><a href="#D10-10月6号-乌鲁木齐一日游" class="headerlink" title="D10(10月6号):乌鲁木齐一日游"></a>D10(10月6号):乌鲁木齐一日游</h4><p>待定。。。。</p><hr><h4 id="D11-10月7号-乌鲁木齐一深圳"><a href="#D11-10月7号-乌鲁木齐一深圳" class="headerlink" title="D11(10月7号):乌鲁木齐一深圳"></a>D11(10月7号):乌鲁木齐一深圳</h4><p>乌鲁木齐—-飞–深圳</p><hr><h4 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h4><ol><li><p><a href="https://go.cqmmgo.com/forum-2466-thread-47141499934173209-1-1.html" title="【2017自驾游】有一种诗和远方叫新疆！北疆9日环线落地自驾游记">【2017自驾游】有一种诗和远方叫新疆！北疆9日环线落地自驾游记</a></p></li><li><p><a href="https://post.smzdm.com/p/779744/" title="说走就走的北疆自驾十日游（攻略+建议）">说走就走的北疆自驾十日游（攻略+建议）</a>；</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 旅行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新疆 </tag>
            
            <tag> 北疆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>健身运动</title>
      <link href="//post/lifehealth.html"/>
      <url>//post/lifehealth.html</url>
      
        <content type="html"><![CDATA[<hr><p>健身圈从来就是一个强者的舞台，有的人通过健身强健了体魄，有的人通过健身找到了自信。正所谓“一入健身深似海”，健身就是有这样的魔力让你欲罢不能。</p><img src="/post/lifehealth/83b8000151b5571c9367.jpg" class="" title="img1"><span id="more"></span><h1 id="深蹲跳"><a href="#深蹲跳" class="headerlink" title="深蹲跳"></a>深蹲跳</h1><hr><p>锻炼部位：股四头肌、腘绳肌、臀大肌、腓肠肌。</p><img src="/post/lifehealth/1.gif" class="" title="avatar"><h1 id="俯卧撑"><a href="#俯卧撑" class="headerlink" title="俯卧撑"></a>俯卧撑</h1><hr><p>锻炼部位：胸大肌、肱三头肌。</p><img src="/post/lifehealth/2.gif" class="" title="avatar"><h1 id="开合跳"><a href="#开合跳" class="headerlink" title="开合跳"></a>开合跳</h1><hr><p>锻炼部位：股四头肌、三角肌、比目鱼肌、腓肠肌。</p><img src="/post/lifehealth/3.gif" class="" title="avatar"><h2 id="登山者"><a href="#登山者" class="headerlink" title="登山者"></a>登山者</h2><hr><p>锻炼部位：股四头肌、腘绳肌、胸肌。</p><img src="/post/lifehealth/4.gif" class="" title="avatar"><h1 id="波比跳"><a href="#波比跳" class="headerlink" title="波比跳"></a>波比跳</h1><hr><p>锻炼部位：股四头肌、三角肌、腹直肌。</p><img src="/post/lifehealth/5.gif" class="" title="avatar"><p>—贵在坚持—</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 运动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派3B(Raspberry 3B)搭建HomeAssistant</title>
      <link href="//post/homeassistant.html"/>
      <url>//post/homeassistant.html</url>
      
        <content type="html"><![CDATA[<p>Home Assistant 是一款基于 Python 的智能家居开源系统，支持众多品牌的智能家居设备，可以轻松实现设备的语音控制、自动化等。本文档全站内容基于 Home Assistant 官方网站 本地化而成，具有以下特点：</p><p>整合『组件』与『文档』页，采用更直观清晰、符合中文阅读的展现形式；<br>剔除国内用户较少接触的组件说明，提高常用智能家居平台的层级和权重；<br>跳出 Home Assistant 原生框架，一并纳入 Floorplan、HADashboard 等相关衍生项目；<br>本文将讲述树莓派3B搭建HomeAssistant和小米设备的接入。</p><span id="more"></span><h1 id="一、系统要求和硬件配置"><a href="#一、系统要求和硬件配置" class="headerlink" title="一、系统要求和硬件配置"></a>一、系统要求和硬件配置</h1><hr><ul><li>树莓派3B（Raspberry 3B）;</li><li>一张16G的TF存储卡；</li><li>一台电脑（windowns or mac）；</li><li>若干小米设备（小米网关、小米插座、小米吸顶灯等）；</li><li>TF卡读卡器；</li><li>原生 <a href="https://www.raspberrypi.org/downloads/raspbian/">Raspbian</a> 系统；</li><li>xshell工具；</li><li><a href="http://www.upantool.com/hfxf/sd/3137.html">SDFormatter</a>；</li><li><a href="http://www.onlinedown.net/soft/110173.htm">Win32 Disk Imager</a>。</li><li><a href="http://www.pc6.com/mac/248733.html">Etcher Mac版</a>（MacOs下烧录工具）；</li><li>Fing工具（Android端或者ios端都行）。</li></ul><h1 id="二、系统安装"><a href="#二、系统安装" class="headerlink" title="二、系统安装"></a>二、系统安装</h1><hr><ol><li>SDFormatter格式化TF存储卡</li><li>使用Win32 Disk Imager工具烧录Raspbian系统到TF卡</li><li>如果是在MacOs系统下，请用mac自带工具格式化TF卡，然后使用Etcher烧录系统；</li></ol><h1 id="三、树莓派配置"><a href="#三、树莓派配置" class="headerlink" title="三、树莓派配置"></a>三、树莓派配置</h1><hr><ol><li><p>烧录完毕后，TF卡自动命名为boot，<strong>在boot根目录新建ssh文件以便ss登录</strong>；</p></li><li><p>在TF卡根目录新建<code>wpa_supplicant.conf</code>文件，用于连接WiFi，配置如下：</p> <pre class="line-numbers language-none"><code class="language-none">country=CNctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=1network={    ssid="路由器的ssid"    psk="路由器的密码"    key_mgmt=WPA-PSK    priority=1}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将TF卡插在树莓派后上电启动；</p></li><li><p>使用Fing查询树莓派的IP地址；</p></li><li><p>树莓派默认用户名<strong>pi</strong>，密码<strong>raspberry</strong>;</p></li><li><p>使用xshell连接树莓派，MacOs方式：<code>ssh pi@192.168.x.x -p 22</code>；</p></li></ol><h2 id="3-1-启用root用户（由于本人天性爱自由，所以必须要绝对权限）"><a href="#3-1-启用root用户（由于本人天性爱自由，所以必须要绝对权限）" class="headerlink" title="3.1 启用root用户（由于本人天性爱自由，所以必须要绝对权限）"></a>3.1 启用root用户（由于本人天性爱自由，所以必须要绝对权限）</h2><ol><li>设置root用户密码</li></ol><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>sudo passwd root</p></blockquote><pre class="line-numbers language-none"><code class="language-none">pi@raspberrypi:~$ sudo passwd rootEnter new UNIX password:   #输入第一遍密码Retype new UNIX password:  #输入第二遍密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>启用 root 账号登录<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>sudo passwd –unlock root</p></blockquote></li></ol><pre class="line-numbers language-none"><code class="language-none">pi@raspberrypi:~$ sudo passwd --unlock rootpasswd: password expiry information changed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li>设置root登陆</li></ol><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>sudo nano /etc/ssh/sshd_config  </p></blockquote><pre class="line-numbers language-none"><code class="language-none">pi@raspberrypi:~$ sudo nano /etc/ssh/sshd_config    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><code>Ctrl + W</code> 快捷键 搜索 <code>PermitRootLogin without-password</code><br>修改 <code>PermitRootLogin without-password</code> 为 <code>PermitRootLogin yes</code><br>执行完之后，用 <code>reboot</code> 命令重启，这样就可以解锁<code>root</code>账户。</p></blockquote><h1 id="四、HomeAssistant安装"><a href="#四、HomeAssistant安装" class="headerlink" title="四、HomeAssistant安装"></a>四、HomeAssistant安装</h1><hr><h2 id="4-1-源替换"><a href="#4-1-源替换" class="headerlink" title="4.1 源替换"></a>4.1 源替换</h2><p>由于默认都是从国外服务器下载安装，为了避免安装失败所以先替换成阿里的源。</p><ul><li><p>在此目录新建此文件：<code> ~/.pip/pip.conf</code></p></li><li><p>复制粘贴以下内容并保存：</p></li></ul><pre class="line-numbers language-none"><code class="language-none">[global]trusted-host=mirrors.aliyun.comindex-url=https://mirrors.aliyun.com/pypi/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-2-安装Python3"><a href="#4-2-安装Python3" class="headerlink" title="4.2 安装Python3"></a>4.2 安装Python3</h2><p>打开<code>Linux</code>系统命令行窗口，输入：<code>sudo apt-get install python3.5</code></p><p>应系统要求输入<code>root</code>账号的密码。</p><img src="/post/homeassistant/1.png" class="" title="img1"><p>安装资源准备好后提问是否继续安装，打回车确认。<br>然后等待安装完成。</p><img src="/post/homeassistant/2.png" class="" title="img1"><h2 id="4-3-安装Python3开发资源"><a href="#4-3-安装Python3开发资源" class="headerlink" title="4.3 安装Python3开发资源"></a>4.3 安装Python3开发资源</h2><p>在第一步安装完成后，继续输入命令：<code>sudo apt-get install python3.5-dev</code><br>在系统提问是否继续安装时打回车确认。<br>然后等待安装完成。</p><img src="/post/homeassistant/3.png" class="" title="img1"><img src="/post/homeassistant/4.png" class="" title="img1"><h2 id="4-4-安装Pip3"><a href="#4-4-安装Pip3" class="headerlink" title="4.4 安装Pip3"></a>4.4 安装Pip3</h2><p>继续在命令行中输入：<code>sudo apt install python3-pip</code><br>回车确认安装。<br>等待安装完成。</p><img src="/post/homeassistant/5.png" class="" title="img1"><h2 id="4-5-验证安装结果"><a href="#4-5-验证安装结果" class="headerlink" title="4.5 验证安装结果"></a>4.5 验证安装结果</h2><p>在命令行中输入<code>python3 --version</code>，看到显示版本。<br>在命令行中输入<code>pip3 --version</code>，看到显示版本。<br>说明Python3环境及Pip3工具安装成功。</p><img src="/post/homeassistant/6.png" class="" title="img1"><h2 id="4-6-使用Pip工具安装Home-Assistant"><a href="#4-6-使用Pip工具安装Home-Assistant" class="headerlink" title="4.6 使用Pip工具安装Home Assistant"></a>4.6 使用Pip工具安装Home Assistant</h2><p>在此步之前建议设置国内的安装源，可以提升后续的速度，参见这篇文档。<br>打开命令行窗口，输入：<code>sudo pip3 install homeassistant</code> （<font color="red">此步骤若失败，请重复操作</font>）<br>等待安装过程完成。</p><img src="/post/homeassistant/8.png" class="" title="img1"><h2 id="4-7-验证安装结果"><a href="#4-7-验证安装结果" class="headerlink" title="4.7 验证安装结果"></a>4.7 验证安装结果</h2><p>在命令行窗口，输入：<code>hass --debug</code> 参数<code>--debug</code>可以查看启动的日志。<br>首次启动需要初始化配置文件，也会自动下载一些所需的文件，会需要一些时间。有时因网络质量问题还会出现文件下载失败情况，导致启动过程受阻。此时可以关闭命令行窗口，再重新执行启动命令。</p><img src="/post/homeassistant/9.png" class="" title="img1"><p>继续等待启动过程完成，直到浏览器自动打开<code>Home Assistant</code>系统首页，即表明软件安装成功。</p><img src="/post/homeassistant/10.png" class="" title="img1"><h1 id="五、HomeAssistant设置自动启动"><a href="#五、HomeAssistant设置自动启动" class="headerlink" title="五、HomeAssistant设置自动启动"></a>五、HomeAssistant设置自动启动</h1><hr><p>Home Assistant 针对树莓派的发行版（手动安装除外）中都已经自带自启任务，其余系统安装的用户需要自行配置自启。</p><h2 id="5-1-配置自启动文件"><a href="#5-1-配置自启动文件" class="headerlink" title="5.1 配置自启动文件"></a>5.1 配置自启动文件</h2><p>如果你未使用 <code>Python</code> 虚拟环境安装 <code>Home Assistant</code>，请使用以下方法</p><pre><code>sudo nano -w /etc/systemd/system/home-assistant@root.service</code></pre><p>复制粘贴</p><pre><code>[Unit]Description=Home AssistantAfter=network-online.target[Service]Type=simpleUser=%iExecStart=/usr/local/bin/hass [Install]WantedBy=multi-user.target</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>注意<code>ExecStart=/usr/local/bin/hass</code>  这个路径使用<code>whereis hass</code>查看路径</p></blockquote><h2 id="5-2-启动自启服务"><a href="#5-2-启动自启服务" class="headerlink" title="5.2 启动自启服务"></a>5.2 启动自启服务</h2><p>完成上述步骤后，请重新加载进程管理。</p><pre><code>sudo systemctl --system daemon-reload</code></pre><p>启用服务：</p><pre><code>sudo systemctl enable home-assistant@root</code></pre><h1 id="六、HomeAssistant的一些常用命令"><a href="#六、HomeAssistant的一些常用命令" class="headerlink" title="六、HomeAssistant的一些常用命令"></a>六、HomeAssistant的一些常用命令</h1><hr><h2 id="6-1-systemd相关的控制命令"><a href="#6-1-systemd相关的控制命令" class="headerlink" title="6.1 systemd相关的控制命令"></a>6.1 systemd相关的控制命令</h2><pre><code>sudo systemctl --system daemon-reload：重新加载systemd的配置文件。sudo systemctl enable home-assistant@root：设置home-assitant服务为自启动。sudo systemctl disable home-assistant@root：从自启动中去除home-assitant服务。sudo systemctl start home-assistant@root：手工启动home-assitant服务（命令中start可以替换成stop、restart、status，完成停止、重启、查看服务状态等功能）。sudo journalctl -f -u home-assistant@root：查看hass的日志输出。sudo journalctl -f -u home-assistant@[your user] | grep -i 'error'：查看hass的日志输出中的error部分sudo systemctl restart home-assistant@root</code></pre><h2 id="6-2-使用脚本控制HomeAssistant"><a href="#6-2-使用脚本控制HomeAssistant" class="headerlink" title="6.2 使用脚本控制HomeAssistant"></a>6.2 使用脚本控制HomeAssistant</h2><pre><code>#!/bin/bashfunction check(){    echo "检查配置文件是否有错误"    sudo hass --script check_config}function dis(){    echo "显示所有组件的配置信息"    sudo hass --script check_config --info all}function hass(){    echo "启动hass"    sudo systemctl start home-assistant@root}function rehass(){    echo "重启hass"    sudo systemctl restart home-assistant@root}function stophass(){    echo "停止hass"    sudo systemctl stop home-assistant@root}function log(){    echo "查看hass日志"    sudo journalctl -f -u home-assistant@root}function debug(){    echo "debug hass"    sudo hass --debug}echo "输入编号选择"echo "1. 检查配置文件是否有错误"echo "2. 显示所有组件的配置信息"echo "3. 启动hass"echo "4. 查看hass日志"echo "5. 重启hass"echo "6. 停止hass"echo "7. debug hass"echo "******Enter nothing to exit*****"read numcase "$num" in[1] ) (check);;[2] ) (dis);;[3] ) (hass);;[4] ) (log);;[5] ) (rehass);;[6] ) (stophass);;[7] ) (debug);;*) echo "nothing,exit";;esac</code></pre><h1 id="七、小米设备接入"><a href="#七、小米设备接入" class="headerlink" title="七、小米设备接入"></a>七、小米设备接入</h1><hr><ul><li><p>安装米家App（最新版本获取获取不到<code>Token</code>，使用【<a href="http://uuxia.cn:8123/file/com.xiaomi.smarthome.apk">MI Home5.0.19</a>】此版本OK）;</p></li><li><p>使用<a href="http://uuxia.cn:8123/file/RE.apk">RE文件管理器</a>，打开<code>/data/data/com.xiaomi.smarthome/databases/miio2.db</code></p></li><li><p>记录设备的<code>token</code></p></li><li><p><a href="http://uuxia.cn:8123/file/configuration.yaml">configuration.yaml</a>配置文件</p></li></ul><h1 id="八、遇到的一些问题"><a href="#八、遇到的一些问题" class="headerlink" title="八、遇到的一些问题"></a>八、遇到的一些问题</h1><hr><ol><li>urllib3与chardet不兼容解决方案</li></ol><pre class="line-numbers language-none"><code class="language-none">pip3 uninstall urllib3pip3 uninstall  chardetip3 install requests<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>2.执行sh ./xxx.sh出现：“Syntax error: “(” unexpected”的解决方法</p><pre><code>sudo dpkg-reconfigure dash在选择项中选No，搞定了！</code></pre><ol start="3"><li>nodejs安装</li></ol><p><a href="https://blog.csdn.net/xiongtm/article/details/77620005">https://blog.csdn.net/xiongtm/article/details/77620005</a><br><a href="https://nodejs.org/dist/latest-v9.x/">https://nodejs.org/dist/latest-v9.x/</a></p>]]></content>
      
      
      <categories>
          
          <category> IoT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IoT </tag>
            
            <tag> HomeAssistant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos后台运行jar</title>
      <link href="//post/centos-run-jar.html"/>
      <url>//post/centos-run-jar.html</url>
      
        <content type="html"><![CDATA[<p>jar后台运行</p><span id="more"></span><h1 id="jar后台运行"><a href="#jar后台运行" class="headerlink" title="jar后台运行"></a>jar后台运行</h1><pre><code>nohup java -jar xx.jar &gt;/dev/null  &amp;</code></pre><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>此处的“&gt;/dev/null”作用是将终端输出信息输出到空洞中，即不保存输出信息，若要查看输出信息需指定输出到那个文件，例如“&gt;/xxx/yyy.out”</p></blockquote><h1 id="关闭后台进程"><a href="#关闭后台进程" class="headerlink" title="关闭后台进程"></a>关闭后台进程</h1><p>先查看后台进程pid</p><pre><code>ps -aux</code></pre><p>记住进程pid，然后kill命令关闭</p><pre><code>kill [pid]</code></pre>]]></content>
      
      
      <categories>
          
          <category> Centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Jar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>业余时间做什么，决定了你的生活品质</title>
      <link href="//post/hobby.html"/>
      <url>//post/hobby.html</url>
      
        <content type="html"><![CDATA[<p>业余时间做什么，决定了你的生活品质</p><span id="more"></span><img src="/post/hobby/1.gif" class="" title="avatar"><h1 id="摄影"><a href="#摄影" class="headerlink" title="摄影"></a>摄影</h1><p>看到朋友晓川发布的一条动态，配的图特别有意思，以为他去哪里旅行了。</p><p>一问才知道，他拍的地方其实只是这座城市一条不起眼的街道。</p><p>不由感叹，自己怎么就从来没有发现，这条街道还有这样美的一面。</p><p>这或许得益于晓川的摄影素养，他总能从日常生活中，发现不平凡的景致，捕捉稍纵即逝的瞬间。</p><p>晓川说，一次偶然，他在某摄影论坛看到了一位摄影师的作品，内心深受触动。</p><p>从那以后，从入手第一部相机，到埋头理论书籍，再到拍下自己的第一万零一张照片，他在摄影的道路上一去不复返。</p><p>他用镜头记录岁月的流逝，也用这种方式感受生活的诗意和从容。</p><p>看晓川相册里的光影世界，无论是花叶建筑，还是人间世故，都能感受到他内心的丰富和细腻。</p><p>对摄影爱好的坚持，也让他的生活变得充实丰盈起来。</p><p>其实，摄影也好，绘画也好，拥有一些爱好，可以体验不一样的生活方式，不断探索生命的广度和深度。</p><p>王小波说，<strong>拥有自己的爱好，丰富的内心，再普通的日子也能过出妙趣横生，锦上添花般的诗意</strong>。</p><p>一个人只注重眼前是不够的，他还应该在生活常态之外，追求更诗意有趣的世界。</p><p>而爱好就是你表达自我的最好途径。</p><img src="/post/hobby/2.jpg" class="" title="img1"><h1 id="美食"><a href="#美食" class="headerlink" title="美食"></a>美食</h1><p>周末和几个朋友去赏桃花，时近正午，正有些饿了，小美拿出她亲手制作的提拉米苏蛋糕。</p><p>席地而坐后，小美还摘了一束粉紫色的野花，用养乐多瓶子插着，顿时感觉增色不少。</p><p>小美工作需要三班倒，平时非常忙。但无论如何，她都没有放弃对美食的追求。</p><p>休息时，她喜欢变着花样尝试制作不同的美食。</p><p>无论是精致的甜点，还是营养的羹汤，或者是可口的料理，她的手艺总能令人惊艳不已。</p><p>记得上次一个朋友过生日，小美为她制作了一个蛋糕，裱上了对方喜欢的花样。对方上传朋友圈后，获赞无数。</p><p>小美对美食的追求到了极致，有时为了买到最新鲜的食材，她会早起到市场采购。常常一顿饭菜下来，要花去不少时间精力。</p><p>但小美一点都没感觉到累，反而觉得这是一种调剂和享受。</p><p>当你专心去烹饪美食，并享受其中时，会感觉身边的一切都变得美好起来，仿佛世界都静止了。</p><p><strong>吃和思考，都是生命的必需品。</strong></p><p>作家朱利安·巴吉尼说，<strong>好好吃，就是好好生活。</strong></p><p>如果人明白美食真正的价值和本质，就会关注美食带来的生活状态。</p><p>美食也有很好的治愈功能，一个人有吃的念头，就有活的欲望。</p><p>喜欢美食的人，也通常能把生活过得热气腾腾。</p><p>因为他内心怀着对生活的热爱，一餐一饭，都讲究精致。</p><p>他会明白，什么才是生活的真实。</p><img src="/post/hobby/3.jpg" class="" title="img1"><h1 id="运动"><a href="#运动" class="headerlink" title="运动"></a>运动</h1><p>前段时间，表弟状态有些低迷，整日萎靡不振。</p><p>在别人的建议下，他开始跑步。</p><p>慢慢坚持下来后，他对待事物的态度开始变得积极，也喜欢上了这个运动。</p><p>表弟说，跑步时，我可以不受外界打扰，静下心来思考，反省自己。</p><p>有研究表明，人在快乐的时候，大脑会分泌一种叫做内啡肽的物质，而运动会加速这种物质的分泌。</p><p>一个坚持运动健身的人，往往也能做到自律、自爱，不会被欲望和情绪左右。</p><p>而以有益身心的运动消磨空闲时间的人，生活品质也不会太差。</p><img src="/post/hobby/4.jpg" class="" title="img1"><p>周国平曾说，<strong>排遣的方式，最能见出一个人的性情。</strong></p><p>有个朋友，闲暇时光喜欢尝试不同的东西：</p><p>比如背古诗文，觉得可以让自己内心沉静；</p><p>看各种纪录片，觉得这是了解世界最直观的方式；</p><p>还尝试学些入门的乐器，认为音乐给生活带来美好。</p><p>培养一些爱好，其实就是学会与自己相处，让一个人的生活变得有声有色。</p><p>或许有人认为，这些都是一些无用之事，谈不上兴趣爱好。</p><p>其实不然，<strong>有味之事，往往无用</strong>，并不是所有的爱好都要有用。</p><p>哪怕只是定期扔东西，整理房间，也是一种爱好。收拾房间能让心情变好，帮助你认识到什么才是想要的和值得追求的。</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><strong>正如梁文道所说：读一些无用的书，做一些无用的事，花一些无用的时间，都是为了在一切已知之外，保留一个超越自己的机会，人生中一些很了不起的变化，就是来自这种时刻。</strong></p></blockquote><p><strong>人生在世，总要找到一些专属于你的东西，才能让自己区别于其他人。</strong></p><p>如果没有兴趣爱好，就仅仅只是活着而已。</p><img src="/post/hobby/5.jpg" class="" title="img1"><h1 id="古人云"><a href="#古人云" class="headerlink" title="古人云"></a>古人云</h1><p>那些爱好广泛的人，其实是对这个世界保持好奇心。</p><p>精读君在终身成长词典《63：好奇》里提到：一个有好奇心的人，会思考云彩的形成与变换，会着迷于花蕾的初绽，觉察数学法则逻辑上的简洁性。</p><p>他会积极尝试不同事物，学习每一样新东西。</p><p>他会懂得欣赏一花一叶的美，也愿意尝试无用之事。</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>古人云，不为无益之事，何以遣有涯之生？</p></blockquote><p>你的爱好，就是你庸常生活的寄托，决定你的生活品质。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hobby </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L2TP/IPSec一键安装脚本</title>
      <link href="//post/l2tp-ipsec-sh.html"/>
      <url>//post/l2tp-ipsec-sh.html</url>
      
        <content type="html"><![CDATA[<p>基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。</p><p>OpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。<br>因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。</p><p>如何检测是否支持TUN模块？<br>执行命令：<br>cat /dev/net/tun<br>如果返回信息为：cat: /dev/net/tun: File descriptor in bad state 说明正常</p><p>如何检测是否支持ppp模块？<br>执行命令：<br>cat /dev/ppp<br>如果返回信息为：cat: /dev/ppp: No such device or address 说明正常<br>当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。</p><span id="more"></span><h2 id="本脚本适用环境："><a href="#本脚本适用环境：" class="headerlink" title="本脚本适用环境："></a>本脚本适用环境：</h2><p>系统支持：CentOS6+，Debian7+，Ubuntu12+<br>内存要求：≥128M<br><font color="red">更新日期：2017 年 05 月 28 日</font></p><h2 id="关于本脚本："><a href="#关于本脚本：" class="headerlink" title="关于本脚本："></a>关于本脚本：</h2><p>名词解释如下<br>L2TP（Layer 2 Tunneling Protocol）<br>IPSec（Internet Protocol Security）<br>IKEv2 (Internet Key Exchange v2)<br>能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。<br>libreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。<br>当然也有使用 strongswan 的。</p><p>之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。<br>本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。</p><h2 id="1-使用方法："><a href="#1-使用方法：" class="headerlink" title="1. 使用方法："></a><font color="red">1. 使用方法：</font></h2><p>root 用户登录后，运行以下命令：</p><pre class="line-numbers language-none"><code class="language-none">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.shchmod +x l2tp.sh./l2tp.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行后，会有如下交互界面</p><img src="/post/l2tp-ipsec-sh/l2tp_1.png" class="" title="img1"><p>Please input IP-Range:<br>(Default Range: 192.168.18):<br>输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18</p><p>Please input PSK:<br>(Default PSK: teddysun.com):<br>PSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com</p><p>Please input Username:<br>(Default Username: teddysun):<br>Username意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun</p><p>Please input teddysun’s password:<br>(Default Password: Q4SKhu2EXQ):<br>输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。</p><p>ServerIP:your_server_main_IP<br>显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）</p><p>Server Local IP:192.168.18.1<br>显示你的 VPS 的本地 IP（默认即可）</p><p>Client Remote IP Range:192.168.18.2-192.168.18.254<br>显示 IP 段范围</p><p>PSK:teddysun.com<br>显示 PSK</p><p>Press any key to start…or Press Ctrl+c to cancel<br>按下任意按键继续，如果想取消安装，请按Ctrl+c键</p><p>安装完成后，脚本会执行 ipsec verify 命令并提示如下：</p><pre class="line-numbers language-none"><code class="language-none">If there are no [FAILED] above, then you can connect to yourL2TP VPN Server with the default Username/Password is below:ServerIP:your_server_IPPSK:your PSKUsername:your usenamePassword:your passwordIf you want to modify user settings, please use command(s):l2tp -a (Add a user)l2tp -d (Delete a user)l2tp -l (List all users)l2tp -m (Modify a user password)Welcome to visit https://teddysun.com/448.htmlEnjoy it!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你要想对用户进行操作，可以使用如下命令：<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -m 修改现有的用户的密码<br>l2tp -l 列出所有用户名和密码<br>l2tp -h 列出帮助信息</p><h2 id="2-注意事项："><a href="#2-注意事项：" class="headerlink" title="2. 注意事项："></a><font color="red">2. 注意事项：</font></h2><p>1、错误809：<br>解决：路由线路上有防火墙没有关闭（pptp穿透防火墙的能力较差）<br>2、错误代码619<br>解决：</p><pre class="line-numbers language-none"><code class="language-none">rm -r /dev/pppmknod /dev/ppp c 108 0 然后重启VPS即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果还未解决，尝试重启机器。</p><p>3、要根据ppp的版本来选择对应的pptpd版本。<br>ppp-2.4.4  对应   pptpd-1.3.4<br>ppp-2.4.5  对应   pptpd-1.4.0</p><h2 id="3-其他事项："><a href="#3-其他事项：" class="headerlink" title="3. 其他事项："></a><font color="red">3. 其他事项：</font></h2><p>1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。<br>2、脚本会改写 iptables 或 firewalld 的规则。<br>3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。</p><h2 id="4-使用命令："><a href="#4-使用命令：" class="headerlink" title="4. 使用命令："></a><font color="red">4. 使用命令：</font></h2><p>ipsec status （查看 IPSec 运行状态）<br>ipsec verify （查看 IPSec 检查结果）<br>/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）<br>/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）<br>systemctl start|stop|restart|status ipsec （CentOS7 下使用）<br>systemctl start|stop|restart xl2tpd （CentOS7 下使用）<br>service ipsec start|stop|restart|status （Debian/Ubuntu 下使用）<br>service xl2tpd start|stop|restart （Debian/Ubuntu 下使用）</p><h2 id="5-更新日志"><a href="#5-更新日志" class="headerlink" title="5. 更新日志"></a><font color="red">5. 更新日志</font></h2><p>2017 年 05 月 28 日：<br>升级 libreswan 到版本 3.20。<br>修正 libreswan 的若干配置问题。<br>修正 xl2tpd 的端口监听配置问题。<br>修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。<br>测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。</p><p><font color="red">2017 年 02 月 25 日：</font><br>升级 libreswan 到版本 3.19。</p><p><font color="red">2016 年 09 月 12 日：</font><br>修正了在 CentOS 6 下 libevent2 依赖的问题；<br>新增了一个 -m 选项，用以修改现有用户的密码。</p><p><font color="red">2016 年 08 月 13 日：</font><br>修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。</p><p><font color="red">2016 年 08 月 05 日：</font><br>升级 libreswan 到版本 3.18。</p><p><font color="red">2016 年 06 月 10 日：</font><br>脚本在安装完成后，新增了几个命令，便于操作用户<br>l2tp -a 新增用户<br>l2tp -d 删除用户<br>l2tp -l 列出所有用户<br>l2tp -h 列出帮助信息</p><p>参考链接：<br><a href="https://libreswan.org/wiki/3.14_on_Debian_Wheezy">https://libreswan.org/wiki/3.14_on_Debian_Wheezy</a><br><a href="https://github.com/libreswan/libreswan">https://github.com/libreswan/libreswan</a></p>]]></content>
      
      
      <categories>
          
          <category> VPN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android导入第三方静态库.a编译成动态库.so</title>
      <link href="//post/android-ndk-so-a.html"/>
      <url>//post/android-ndk-so-a.html</url>
      
        <content type="html"><![CDATA[<p>Android导入第三方静态库.a编译成动态库.so</p><span id="more"></span><img src="/post/android-ndk-so-a/img1.png" class="" title="img1"><p>下面我以一个简单的实际例子来讲解如何在动态库中导入静态库。</p><p>静态库中的源代码有两个文件：static.h, static.c，有一个add方法 static.h</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;stdio.h&gt; int add(int x, int y);static.c#include "static.h" int add(int x, int y) {     return x + y; }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将它编译成静态库，Android.mk如下：</p><pre class="line-numbers language-none"><code class="language-none">LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) LOCAL_MODULE    := static_add LOCAL_SRC_FILES := static.c include $(BUILD_STATIC_LIBRARY)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意编译静态库的时候，必须有一个Application.mk文件：</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>APP_MODULES:=static_add</p></blockquote><p>APP_MODULES的值应该和Android.mk中的LOCAL_MODULE的值保持一样。</p><p>然后调用ndk-build进行编译生成libstatic_add.a静态库</p><pre class="line-numbers language-none"><code class="language-none">hejinlai_iMac:jni hejinlai$ ndk-buildPrebuilt : libstatic_add.a &lt;= jni/ 生成静态库后，然后编写动态库中的源代码: share.h share.c share.h [cpp]#include int test_add(int x, int y);share.c1234567 #include “share.h”#include “static.h”int test_add(int x, int y){// 调用static里面的方法return add(x, y);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写导入静态库的Android.mk：</p><pre class="line-numbers language-none"><code class="language-none">LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS) LOCAL_MODULE    := static_add LOCAL_SRC_FILES := libstatic_add.a include $(PREBUILT_STATIC_LIBRARY) include $(CLEAR_VARS) LOCAL_MODULE    := share_add LOCAL_STATIC_LIBRARIES := static_add LOCAL_SRC_FILES := share.c include $(BUILD_SHARED_LIBRARY)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意上面生成的libstatic_add.a必须跟Android.mk放在同一目录下，否则需要填写相应的路径，然后进行编译：</p><pre class="line-numbers language-none"><code class="language-none">hejinlai_iMac:jni hejinlai$ ndk-buildCompile thumb : share_add &lt;= share.c Prebuilt : libstatic_add.a &lt;= jni/ SharedLibrary : libshare_add.so Install : libshare_add.so =&gt; libs/armeabi/libshare_add.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>提示so编译成功。</p><p>需要注意的是我这边share.c和static.c放在同一目录下，如果放在不同的目录下，需要指定</p><p>LOCAL_C_INCLUDES链接到相应的路径。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Andorid </tag>
            
            <tag> ndk </tag>
            
            <tag> so </tag>
            
            <tag> a </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喜马拉雅WiFi音响绑定及通讯协议初稿</title>
      <link href="//post/ximalaya.html"/>
      <url>//post/ximalaya.html</url>
      
        <content type="html"><![CDATA[<p>喜马拉雅WiFi音响绑定及通讯协议初稿</p><span id="more"></span><h1 id="通讯协议"><a href="#通讯协议" class="headerlink" title="通讯协议"></a><strong>通讯协议</strong></h1><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">1字节</td><td align="left">2字节</td><td align="left">1字节</td><td align="left">1字节</td><td align="left">8字节</td><td align="left">6字节</td><td align="left">4字节</td><td align="left">8字节</td><td align="left">2字节</td><td align="left">N字节</td><td align="left">2字节</td></tr></tbody></table><h1 id="通讯Json格式："><a href="#通讯Json格式：" class="headerlink" title="通讯Json格式："></a><strong>通讯Json格式</strong>：</h1><pre><code>{  "cmd": 0 ,//命令码"code": 0,//返回码"msg": "",//状态消息"data": ......//数据节点}</code></pre><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a><strong>参数说明</strong></h2><table><thead><tr><th align="left">参数名称</th><th align="left">是否必须</th><th align="left">字段类型</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">cmd</td><td align="left">YES</td><td align="left">int</td><td align="left">命令码</td></tr><tr><td align="left">code</td><td align="left">NO</td><td align="left">int</td><td align="left">返回码</td></tr><tr><td align="left">msg</td><td align="left">NO</td><td align="left">String</td><td align="left">状态消息</td></tr><tr><td align="left">data</td><td align="left">NO</td><td align="left">String</td><td align="left">数据节点</td></tr></tbody></table><h2 id="全局命令码"><a href="#全局命令码" class="headerlink" title="全局命令码"></a><strong>全局命令码</strong></h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>每一种操作对用一个命令码，用作标识指令。</p></blockquote><h4 id="全局命令码说明如下："><a href="#全局命令码说明如下：" class="headerlink" title="全局命令码说明如下："></a>全局命令码说明如下：</h4><table><thead><tr><th align="left">命令码（十六进制）</th><th align="left">十进制</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">0x0001</td><td align="left">1</td><td align="left">添加歌曲</td></tr><tr><td align="left">0x0002</td><td align="left">2</td><td align="left">App查询歌曲列表</td></tr><tr><td align="left">0x0003</td><td align="left">3</td><td align="left">升级操作</td></tr><tr><td align="left">0x0004</td><td align="left">4</td><td align="left">播放</td></tr><tr><td align="left">0x0005</td><td align="left">5</td><td align="left">关机</td></tr><tr><td align="left">0x0006</td><td align="left">6</td><td align="left">静音/解除静音</td></tr><tr><td align="left">0x0007</td><td align="left">7</td><td align="left">音量+</td></tr><tr><td align="left">0x0008</td><td align="left">8</td><td align="left">音量-</td></tr><tr><td align="left">0x0009</td><td align="left">9</td><td align="left">切换aux状态</td></tr><tr><td align="left">0x000a</td><td align="left">10</td><td align="left">下一曲</td></tr><tr><td align="left">0x000b</td><td align="left">11</td><td align="left">上一曲</td></tr><tr><td align="left">0x000c</td><td align="left">12</td><td align="left">暂停</td></tr><tr><td align="left">0x000d</td><td align="left">13</td><td align="left">App查询播放状态</td></tr><tr><td align="left">0x000e</td><td align="left">14</td><td align="left">WIFI 无线简易连接</td></tr><tr><td align="left">0x000f</td><td align="left">15</td><td align="left">设备回复心跳</td></tr><tr><td align="left">0x400f</td><td align="left">16399</td><td align="left">App发送心跳</td></tr><tr><td align="left">0x0011</td><td align="left">17</td><td align="left">palyMode(顺序播放/随机播放/列表循环/单曲循环/)</td></tr><tr><td align="left">0x0012</td><td align="left">18</td><td align="left">音量设置（直接设置音量值）</td></tr><tr><td align="left">0x0013</td><td align="left">19</td><td align="left">设备推送播放状态</td></tr><tr><td align="left">0x0014</td><td align="left">20</td><td align="left">设备推送播放列表</td></tr><tr><td align="left">0x0015</td><td align="left">21</td><td align="left">拖拽进度条</td></tr></tbody></table><h2 id="全局返回码"><a href="#全局返回码" class="headerlink" title="全局返回码"></a><strong>全局返回码</strong></h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>每次调用接口时，可能获得正确或错误的返回码，可以根据返回码信息调试接口，排查错误。<br>####全局返回码说明如下：</p><table><thead><tr><th align="left">0</th><th align="left">请求成功</th></tr></thead><tbody><tr><td align="left">200</td><td align="left">无错误</td></tr><tr><td align="left">400</td><td align="left">不支持此接口</td></tr><tr><td align="left">401</td><td align="left">JSON数据解析错误</td></tr></tbody></table></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a><strong>示例</strong></h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a><strong>字符串</strong></h3><pre><code>{ "cmd": 0x0001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data": "This is string"  //数据节点}</code></pre><h3 id="整形参数"><a href="#整形参数" class="headerlink" title="整形参数"></a><strong>整形参数</strong></h3><pre><code>{ "cmd": 0x0001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data": 1  //数据节点}</code></pre><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a><strong>对象</strong></h3><pre><code>{ "cmd": 0x0001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data":  {      "ssid":"TP-link",  //连接的路由名称      "password":"12345678",  //路由密码,需要加密  }  }</code></pre><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a><strong>数组</strong></h3><pre><code>{ "cmd": 0x001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data":[  {        "id"      ：   "0"        "name" ： “xxxx",        "artist" ： “xxxx",        "album_title"： “xxxx",        "cover_url_small”：“xxxx",        "cover_url_middle":"xxxx",        "cover_url_large":"xxxx",        "url":"xxxxxxxxx"  {详细规格见规格说明url部分},  },  {        "id":"1"        "name":"xxxx1",        "artist":"xxxx1",        "album":"xxxx1",        "cover_url_small":"xxxx",        "cover_url_middle":"xxxx",        "cover_url_large":"xxxx",        "url":"xxxxxxxxxx"{详细规格见规格说明url部分},  }   ]}</code></pre><h2 id="指令说明"><a href="#指令说明" class="headerlink" title="指令说明"></a><strong>指令说明</strong></h2><h3 id="一、设备基础指令"><a href="#一、设备基础指令" class="headerlink" title="一、设备基础指令"></a><strong>一、设备基础指令</strong></h3><ol><li><strong>App扫描设备</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">0022</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">20000000</td><td align="left">0000000000000000</td><td align="left">0405</td><td align="left">data</td><td align="left">381a</td></tr></tbody></table><ul><li><font color="#c00"><strong>命令字：0x0405</strong></font></li><li><font color="#c00"><strong>data区：NULL</strong></font></li></ul><ol start="2"><li><strong>设备回复自身信息</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">00000199001b0300</td><td align="left">d8f710e019b0</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0305</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"><strong>命令字：0x0305</strong></font></li><li><font color="#c00"><strong>厂商ID：0x0199</strong> </font></li><li><font color="#c00"><strong>大分类：0x1b</strong>  </font></li><li><font color="#c00"><strong>小分类：0x03</strong></font></li></ul><ol start="3"><li><strong>App发送心跳包</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">20000000</td><td align="left">0000000000000000</td><td align="left">0104</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"><strong>命令字：0x0104</strong></font></li><li><font color="#c00"><strong>data区：json</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x400f ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data": ......//数据节点    }</code></pre><ol start="4"><li><strong>设备回复心跳</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0204</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0204</strong></font> </li><li><font color="#c00"> <strong>data区：json</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x000f ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data":  {              "deviceId": "SPK设备序列号"          }      }</code></pre><h3 id="二、App主动控制终端指令"><a href="#二、App主动控制终端指令" class="headerlink" title="二、App主动控制终端指令"></a><strong>二、App主动控制终端指令</strong></h3><p><strong>1.App控制终端</strong></p><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0104</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0104</strong></font> </li><li><font color="#c00"> <strong>data区：json数据</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x00xx ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data": ......//数据节点    }</code></pre><p><strong>2.终端回复App</strong></p><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0204</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0204</strong></font> </li><li><font color="#c00"> <strong>data区：json数据</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x00xx ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data": ......//数据节点    }</code></pre><h3 id="三、终端主动发送控制数据给App"><a href="#三、终端主动发送控制数据给App" class="headerlink" title="三、终端主动发送控制数据给App"></a><strong>三、终端主动发送控制数据给App</strong></h3><p><strong>1.周期上传运行数据</strong></p><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0105</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0105</strong></font> </li><li><font color="#c00"> <strong>data区：json数据</strong></font></li></ul><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">{      "cmd": 0x0013 ,//命令码"code": 0,//返回码"msg": "",//状态消息"data": ......//数据节点}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="音箱数据模型"><a href="#音箱数据模型" class="headerlink" title="音箱数据模型"></a><strong>音箱数据模型</strong></h1><h2 id="一、歌单"><a href="#一、歌单" class="headerlink" title="一、歌单"></a><strong>一、歌单</strong></h2><p><strong>参数说明</strong></p><table><thead><tr><th align="left">参数名称</th><th align="left">是否必须</th><th align="left">字段类型</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲ID</td></tr><tr><td align="left">name</td><td align="left">否</td><td align="left">string</td><td align="left">演唱者</td></tr><tr><td align="left">artist</td><td align="left">否</td><td align="left">String</td><td align="left">艺术家</td></tr><tr><td align="left">album_title</td><td align="left">否</td><td align="left">String</td><td align="left">专辑标题</td></tr><tr><td align="left">lrc_id</td><td align="left">否</td><td align="left">String</td><td align="left">歌词ID</td></tr><tr><td align="left">image_url_small</td><td align="left">否</td><td align="left">String</td><td align="left">歌曲海报1</td></tr><tr><td align="left">image_url_middle</td><td align="left">否</td><td align="left">String</td><td align="left">歌曲海报2</td></tr><tr><td align="left">image_url_large</td><td align="left">否</td><td align="left">String</td><td align="left">歌曲海报3</td></tr><tr><td align="left">mac</td><td align="left">否</td><td align="left">String</td><td align="left">Mac地址</td></tr><tr><td align="left">total_time</td><td align="left">否</td><td align="left">int</td><td align="left">歌曲时长</td></tr><tr><td align="left">album_id</td><td align="left">否</td><td align="left">int</td><td align="left">专辑ID</td></tr><tr><td align="left">utype</td><td align="left">否</td><td align="left">int</td><td align="left">比如 虾米音乐 考虑 喜马拉雅 之类的</td></tr><tr><td align="left">uri</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲URL</td></tr><tr><td align="left">downloadurl</td><td align="left">是</td><td align="left">String</td><td align="left">下载url</td></tr></tbody></table><h2 id="二、播放状态"><a href="#二、播放状态" class="headerlink" title="二、播放状态"></a><strong>二、播放状态</strong></h2><p><strong>参数说明</strong></p><table><thead><tr><th align="left">参数名称</th><th align="left">是否必须</th><th align="left">字段类型</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">id是</td><td align="left">int</td><td align="left">歌曲ID</td><td align="left"></td></tr><tr><td align="left">mtype</td><td align="left">是</td><td align="left">String</td><td align="left">虾米，百度云盘，本地音乐…</td></tr><tr><td align="left">p_status</td><td align="left">否</td><td align="left">int</td><td align="left">“0/1/2/3/4”, //准备播放，播放,暂停,停止,播放结束(用于网络收音机)</td></tr><tr><td align="left">type</td><td align="left">否</td><td align="left">String</td><td align="left">当前播放源(预设preset),收藏,实时推送</td></tr><tr><td align="left">name</td><td align="left">否</td><td align="left">string</td><td align="left">演唱者</td></tr><tr><td align="left">artist</td><td align="left">否</td><td align="left">String</td><td align="left">艺术家</td></tr><tr><td align="left">album</td><td align="left">否</td><td align="left">String</td><td align="left">专辑</td></tr><tr><td align="left">next_id</td><td align="left">是</td><td align="left">int</td><td align="left">下一首歌曲id</td></tr><tr><td align="left">total_time</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲总时间</td></tr><tr><td align="left">current_time</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲当前播放时间</td></tr><tr><td align="left">play_mode</td><td align="left">否</td><td align="left">int</td><td align="left">模式（//顺序播放/随机播放列表循环/单曲循环/）</td></tr><tr><td align="left">volume</td><td align="left">是</td><td align="left">int</td><td align="left">音量</td></tr></tbody></table><h1 id="绑定流程"><a href="#绑定流程" class="headerlink" title="绑定流程"></a><strong>绑定流程</strong></h1><hr><p>title: 喜马拉雅WiFi音响绑定及通讯协议初稿<br>date: 2016-05-11 22:54:48<br>tags: [智能家居,喜马拉雅,Andorid]<br>categories:</p><ul><li>[IoT]</li></ul><hr><p>喜马拉雅WiFi音响绑定及通讯协议初稿</p><!--more--><h1 id="通讯协议-1"><a href="#通讯协议-1" class="headerlink" title="通讯协议"></a><strong>通讯协议</strong></h1><p>|0x5A|数据长度|框架版本|协议类型|设备编码|Mac地址|数据帧序列号|保留字|数据类型|数据内容|检验码FCS|<br>|—-|:—-:|<br>|1字节|2字节|1字节|1字节|8字节|6字节|4字节|8字节|2字节|N字节|2字节|</p><h1 id="通讯Json格式：-1"><a href="#通讯Json格式：-1" class="headerlink" title="通讯Json格式："></a><strong>通讯Json格式</strong>：</h1><pre><code>{  "cmd": 0 ,//命令码"code": 0,//返回码"msg": "",//状态消息"data": ......//数据节点}</code></pre><h2 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a><strong>参数说明</strong></h2><table><thead><tr><th align="left">参数名称</th><th align="left">是否必须</th><th align="left">字段类型</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">cmd</td><td align="left">YES</td><td align="left">int</td><td align="left">命令码</td></tr><tr><td align="left">code</td><td align="left">NO</td><td align="left">int</td><td align="left">返回码</td></tr><tr><td align="left">msg</td><td align="left">NO</td><td align="left">String</td><td align="left">状态消息</td></tr><tr><td align="left">data</td><td align="left">NO</td><td align="left">String</td><td align="left">数据节点</td></tr></tbody></table><h2 id="全局命令码-1"><a href="#全局命令码-1" class="headerlink" title="全局命令码"></a><strong>全局命令码</strong></h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>每一种操作对用一个命令码，用作标识指令。</p></blockquote><h4 id="全局命令码说明如下：-1"><a href="#全局命令码说明如下：-1" class="headerlink" title="全局命令码说明如下："></a>全局命令码说明如下：</h4><table><thead><tr><th align="left">命令码（十六进制)</th><th align="left">十进制</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">0x0001</td><td align="left">1</td><td align="left">添加歌曲</td></tr><tr><td align="left">0x0002</td><td align="left">2</td><td align="left">App查询歌曲列表</td></tr><tr><td align="left">0x0003</td><td align="left">3</td><td align="left">升级操作</td></tr><tr><td align="left">0x0004</td><td align="left">4</td><td align="left">播放</td></tr><tr><td align="left">0x0005</td><td align="left">5</td><td align="left">关机</td></tr><tr><td align="left">0x0006</td><td align="left">6</td><td align="left">静音/解除静音</td></tr><tr><td align="left">0x0007</td><td align="left">7</td><td align="left">音量+</td></tr><tr><td align="left">0x0008</td><td align="left">8</td><td align="left">音量-</td></tr><tr><td align="left">0x0009</td><td align="left">9</td><td align="left">切换aux状态</td></tr><tr><td align="left">0x000a</td><td align="left">10</td><td align="left">下一曲</td></tr><tr><td align="left">0x000b</td><td align="left">11</td><td align="left">上一曲</td></tr><tr><td align="left">0x000c</td><td align="left">12</td><td align="left">暂停</td></tr><tr><td align="left">0x000d</td><td align="left">13</td><td align="left">App查询播放状态</td></tr><tr><td align="left">0x000e</td><td align="left">14</td><td align="left">WIFI 无线简易连接</td></tr><tr><td align="left">0x000f</td><td align="left">15</td><td align="left">设备回复心跳</td></tr><tr><td align="left">0x400f</td><td align="left">16399</td><td align="left">App发送心跳</td></tr><tr><td align="left">0x0011</td><td align="left">17</td><td align="left">palyMode(顺序播放/随机播放/列表循环/单曲循环/)</td></tr><tr><td align="left">0x0012</td><td align="left">18</td><td align="left">音量设置（直接设置音量值）</td></tr><tr><td align="left">0x0013</td><td align="left">19</td><td align="left">设备推送播放状态</td></tr><tr><td align="left">0x0014</td><td align="left">20</td><td align="left">设备推送播放列表</td></tr><tr><td align="left">0x0015</td><td align="left">21</td><td align="left">拖拽进度条</td></tr></tbody></table><h2 id="全局返回码-1"><a href="#全局返回码-1" class="headerlink" title="全局返回码"></a><strong>全局返回码</strong></h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>每次调用接口时，可能获得正确或错误的返回码，可以根据返回码信息调试接口，排查错误。<br>####全局返回码说明如下：</p><table><thead><tr><th align="left">0</th><th align="left">请求成功</th></tr></thead><tbody><tr><td align="left">200</td><td align="left">无错误</td></tr><tr><td align="left">400</td><td align="left">不支持此接口</td></tr><tr><td align="left">401</td><td align="left">JSON数据解析错误</td></tr></tbody></table></blockquote><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a><strong>示例</strong></h2><h3 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a><strong>字符串</strong></h3><pre><code>{ "cmd": 0x0001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data": "This is string"  //数据节点}</code></pre><h3 id="整形参数-1"><a href="#整形参数-1" class="headerlink" title="整形参数"></a><strong>整形参数</strong></h3><pre><code>{ "cmd": 0x0001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data": 1  //数据节点}</code></pre><h3 id="对象-1"><a href="#对象-1" class="headerlink" title="对象"></a><strong>对象</strong></h3><pre><code>{ "cmd": 0x0001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data":  {      "ssid":"TP-link",  //连接的路由名称      "password":"12345678",  //路由密码,需要加密  }  }</code></pre><h3 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a><strong>数组</strong></h3><pre><code>{ "cmd": 0x001 ,//命令码"code": 0,  //返回码"msg": "",  //状态消息"data":[  {        "id"      ：   "0"        "name" ： “xxxx",        "artist" ： “xxxx",        "album_title"： “xxxx",        "cover_url_small”：“xxxx",        "cover_url_middle":"xxxx",        "cover_url_large":"xxxx",        "url":"xxxxxxxxx"  {详细规格见规格说明url部分},  },  {        "id":"1"        "name":"xxxx1",        "artist":"xxxx1",        "album":"xxxx1",        "cover_url_small":"xxxx",        "cover_url_middle":"xxxx",        "cover_url_large":"xxxx",        "url":"xxxxxxxxxx"{详细规格见规格说明url部分},  }   ]}</code></pre><h2 id="指令说明-1"><a href="#指令说明-1" class="headerlink" title="指令说明"></a><strong>指令说明</strong></h2><h3 id="一、设备基础指令-1"><a href="#一、设备基础指令-1" class="headerlink" title="一、设备基础指令"></a><strong>一、设备基础指令</strong></h3><ol><li><strong>App扫描设备</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">0022</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">20000000</td><td align="left">0000000000000000</td><td align="left">0405</td><td align="left">data</td><td align="left">381a</td></tr></tbody></table><ul><li><font color="#c00"><strong>命令字：0x0405</strong></font></li><li><font color="#c00"><strong>data区：NULL</strong></font></li></ul><ol start="2"><li><strong>设备回复自身信息</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">00000199001b0300</td><td align="left">d8f710e019b0</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0305</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"><strong>命令字：0x0305</strong></font></li><li><font color="#c00"><strong>厂商ID：0x0199</strong> </font></li><li><font color="#c00"><strong>大分类：0x1b</strong>  </font></li><li><font color="#c00"><strong>小分类：0x03</strong></font></li></ul><ol start="3"><li><strong>App发送心跳包</strong><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">20000000</td><td align="left">0000000000000000</td><td align="left">0104</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table></li></ol><ul><li><font color="#c00"><strong>命令字：0x0104</strong></font></li><li><font color="#c00"><strong>data区：json</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x400f ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data": ......//数据节点    }</code></pre><ol start="4"><li><strong>设备回复心跳</strong></li></ol><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0204</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0204</strong></font> </li><li><font color="#c00"> <strong>data区：json</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x000f ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data":  {              "deviceId": "SPK设备序列号"          }      }</code></pre><h3 id="二、App主动控制终端指令-1"><a href="#二、App主动控制终端指令-1" class="headerlink" title="二、App主动控制终端指令"></a><strong>二、App主动控制终端指令</strong></h3><p><strong>1.App控制终端</strong></p><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0104</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0104</strong></font> </li><li><font color="#c00"> <strong>data区：json数据</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x00xx ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data": ......//数据节点    }</code></pre><p><strong>2.终端回复App</strong></p><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0204</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0204</strong></font> </li><li><font color="#c00"> <strong>data区：json数据</strong></font></li></ul><p>示例：</p><pre><code>    {      "cmd": 0x00xx ,//命令码    "code": 0,//返回码    "msg": "",//状态消息    "data": ......//数据节点    }</code></pre><h3 id="三、终端主动发送控制数据给App-1"><a href="#三、终端主动发送控制数据给App-1" class="headerlink" title="三、终端主动发送控制数据给App"></a><strong>三、终端主动发送控制数据给App</strong></h3><p><strong>1.周期上传运行数据</strong></p><table><thead><tr><th align="left">0x5A</th><th align="left">数据长度</th><th align="left">框架版本</th><th align="left">协议类型</th><th align="left">设备编码</th><th align="left">Mac地址</th><th align="left">数据帧序列号</th><th align="left">保留字</th><th align="left">数据类型</th><th align="left">数据内容</th><th align="left">检验码FCS</th></tr></thead><tbody><tr><td align="left">5A</td><td align="left">xxxx</td><td align="left">40</td><td align="left">01</td><td align="left">0000000000000000</td><td align="left">000000000000</td><td align="left">00000000</td><td align="left">0000000000000000</td><td align="left">0105</td><td align="left">data</td><td align="left">xxxx</td></tr></tbody></table><ul><li><font color="#c00"> <strong>命令字：0x0105</strong></font> </li><li><font color="#c00"> <strong>data区：json数据</strong></font></li></ul><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">{      "cmd": 0x0013 ,//命令码"code": 0,//返回码"msg": "",//状态消息"data": ......//数据节点}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="音箱数据模型-1"><a href="#音箱数据模型-1" class="headerlink" title="音箱数据模型"></a><strong>音箱数据模型</strong></h1><h2 id="一、歌单-1"><a href="#一、歌单-1" class="headerlink" title="一、歌单"></a><strong>一、歌单</strong></h2><p><strong>参数说明</strong></p><table><thead><tr><th align="left">参数名称</th><th align="left">是否必须</th><th align="left">字段类型</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲ID</td></tr><tr><td align="left">name</td><td align="left">否</td><td align="left">string</td><td align="left">演唱者</td></tr><tr><td align="left">artist</td><td align="left">否</td><td align="left">String</td><td align="left">艺术家</td></tr><tr><td align="left">album_title</td><td align="left">否</td><td align="left">String</td><td align="left">专辑标题</td></tr><tr><td align="left">lrc_id</td><td align="left">否</td><td align="left">String</td><td align="left">歌词ID</td></tr><tr><td align="left">image_url_small</td><td align="left">否</td><td align="left">String</td><td align="left">歌曲海报1</td></tr><tr><td align="left">image_url_middle</td><td align="left">否</td><td align="left">String</td><td align="left">歌曲海报2</td></tr><tr><td align="left">image_url_large</td><td align="left">否</td><td align="left">String</td><td align="left">歌曲海报3</td></tr><tr><td align="left">mac</td><td align="left">否</td><td align="left">String</td><td align="left">Mac地址</td></tr><tr><td align="left">total_time</td><td align="left">否</td><td align="left">int</td><td align="left">歌曲时长</td></tr><tr><td align="left">album_id</td><td align="left">否</td><td align="left">int</td><td align="left">专辑ID</td></tr><tr><td align="left">utype</td><td align="left">否</td><td align="left">int</td><td align="left">比如 虾米音乐 考虑 喜马拉雅 之类的</td></tr><tr><td align="left">uri</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲URL</td></tr><tr><td align="left">downloadurl</td><td align="left">是</td><td align="left">String</td><td align="left">下载url</td></tr></tbody></table><h2 id="二、播放状态-1"><a href="#二、播放状态-1" class="headerlink" title="二、播放状态"></a><strong>二、播放状态</strong></h2><p><strong>参数说明</strong></p><table><thead><tr><th align="left">参数名称</th><th align="left">是否必须</th><th align="left">字段类型</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">id是</td><td align="left">int</td><td align="left">歌曲ID</td><td align="left"></td></tr><tr><td align="left">mtype</td><td align="left">是</td><td align="left">String</td><td align="left">虾米，百度云盘，本地音乐…</td></tr><tr><td align="left">p_status</td><td align="left">否</td><td align="left">int</td><td align="left">“0/1/2/3/4”, //准备播放，播放,暂停,停止,播放结束(用于网络收音机)</td></tr><tr><td align="left">type</td><td align="left">否</td><td align="left">String</td><td align="left">当前播放源(预设preset),收藏,实时推送</td></tr><tr><td align="left">name</td><td align="left">否</td><td align="left">string</td><td align="left">演唱者</td></tr><tr><td align="left">artist</td><td align="left">否</td><td align="left">String</td><td align="left">艺术家</td></tr><tr><td align="left">album</td><td align="left">否</td><td align="left">String</td><td align="left">专辑</td></tr><tr><td align="left">next_id</td><td align="left">是</td><td align="left">int</td><td align="left">下一首歌曲id</td></tr><tr><td align="left">total_time</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲总时间</td></tr><tr><td align="left">current_time</td><td align="left">是</td><td align="left">int</td><td align="left">歌曲当前播放时间</td></tr><tr><td align="left">play_mode</td><td align="left">否</td><td align="left">int</td><td align="left">模式（//顺序播放/随机播放列表循环/单曲循环/）</td></tr><tr><td align="left">volume</td><td align="left">是</td><td align="left">int</td><td align="left">音量</td></tr></tbody></table><h1 id="绑定流程-1"><a href="#绑定流程-1" class="headerlink" title="绑定流程"></a><strong>绑定流程</strong></h1><img src="/post/ximalaya/bind.jpg" class="" title="这里写图片描述"><p><em><strong><a href="ximalaya/bind.jpg">点击看大图</a></strong></em></p><p><a href="http://blog.csdn.net/xxl6097/article/details/50127949"><strong>[原文链接地址]http://blog.csdn.net/xxl6097/article/details/50127949</strong></a></p><p><a href="http://blog.csdn.net/xxl6097/article/details/50127949"><strong>[原文链接地址]http://blog.csdn.net/xxl6097/article/details/50127949</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> IoT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Andorid </tag>
            
            <tag> 智能家居 </tag>
            
            <tag> 喜马拉雅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绑定界面动资源画动态替换</title>
      <link href="//post/public-bind.html"/>
      <url>//post/public-bind.html</url>
      
        <content type="html"><![CDATA[<p>由于公共模块绑定满足不了TOB项目以及其他项目特殊需求，现对公共模块绑定界面的资源做成可配置，本文介绍一下哪些资源可配置以及如何配置。</p><span id="more"></span><h3 id="颜色配置"><a href="#颜色配置" class="headerlink" title="颜色配置"></a>颜色配置</h3><p>  颜色的配置需要在<strong>res/values，res/values-v14，res/values-v19，res/values-v21</strong>等目录下新建<br>  <font color="red" face="黑体" size="4">color.xml</font>。<br>  color.xml内容如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;resources&gt;    &lt;color name="title_bar_bg_color"&gt;#FFFF4444&lt;/color&gt;&lt;/resources&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>  目录结构如图1所示</p><img src="/post/public-bind/values.png" class="" title="img1"><p><strong>图1</strong></p><p><strong>1.标题颜</strong></p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;resources&gt;    &lt;color name="title_bar_bg_color"&gt;填入需要配置的颜色值（#FFFF0000）&lt;/color&gt;&lt;/resources&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2.子分类列表背景色</strong></p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;resources&gt;    &lt;color name="color_app_themes"&gt;填入需要配置的颜色值（#FFFF0000）&lt;/color&gt;&lt;/resources&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绑定动画配置"><a href="#绑定动画配置" class="headerlink" title="绑定动画配置"></a>绑定动画配置</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>在主工程<strong>res/drawable</strong>下分别新建<strong>bind_scanning_anim.xml、bind_bouding_anim.xml、bind_failed_anim.xml、bind_sucess_anim.xml</strong>资源文件；</p></blockquote><p>1.<strong>“扫描中“动画</strong>（bind_scanning_anim.xml），代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;!--    根标签为animation-list，其中oneshot代表着是否只展示一遍，设置为false会不停的循环播放动画    根标签下，通过item标签对动画中的每一个图片进行声明    android:duration 表示展示所用的该图片的时间长度     --&gt;&lt;animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="false"&gt;    &lt;item        android:drawable="@drawable/scan1"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/scan2"        android:duration="150"&gt;&lt;/item&gt;&lt;/animation-list&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>扫描中 使用帧动画，默认配置中两帧，即：scan1.png和scan2.png</li><li>图片分辨率:201x307</li></ul><p>2.<strong>绑定中 动画</strong>（bind_bouding_anim.xml），代码如下:</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;!--    根标签为animation-list，其中oneshot代表着是否只展示一遍，设置为false会不停的循环播放动画    根标签下，通过item标签对动画中的每一个图片进行声明    android:duration 表示展示所用的该图片的时间长度 --&gt;&lt;animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="false"&gt;    &lt;item        android:drawable="@drawable/bouding1"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/bouding2"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/bouding3"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/bouding4"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/bouding5"        android:duration="150"&gt;&lt;/item&gt;&lt;/animation-list&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>绑定中 使用帧动画，默认配置使用5帧，即：bouding1.png、bouding2.png、bouding3.png、bouding4.png、bouding5.png</li><li>图片分辨率：392x276</li></ul><p>3.<strong>失败 动画</strong>（bind_failed_anim.xml），代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;!--    根标签为animation-list，其中oneshot代表着是否只展示一遍，设置为false会不停的循环播放动画    根标签下，通过item标签对动画中的每一个图片进行声明    android:duration 表示展示所用的该图片的时间长度 --&gt;&lt;animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="false"&gt;    &lt;item        android:drawable="@drawable/failed1"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/failed2"        android:duration="150"&gt;&lt;/item&gt;&lt;/animation-list&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>扫描中 使用帧动画，默认配置使用2帧，即：failed1.png和failed2.png</li><li>图片分辨率:203x306</li></ul><p>4.<strong>成功 动画</strong>（bind_sucess_anim.xml），代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;!--    根标签为animation-list，其中oneshot代表着是否只展示一遍，设置为false会不停的循环播放动画    根标签下，通过item标签对动画中的每一个图片进行声明    android:duration 表示展示所用的该图片的时间长度 --&gt;&lt;animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="false"&gt;    &lt;item        android:drawable="@drawable/sucess1"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/sucess2"        android:duration="150"&gt;&lt;/item&gt;&lt;/animation-list&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>扫描中 使用帧动画，默认配置使用2帧，即：sucess1.png和sucess2.png</li><li>图片分辨率:203x306</li></ul><h3 id="网络请求loadding图标配置"><a href="#网络请求loadding图标配置" class="headerlink" title="网络请求loadding图标配置"></a>网络请求loadding图标配置</h3><p>在主工程<strong>res/drawable</strong>下分别新建<strong>bind_network_waiting.xml</strong>资源文件。<br>代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="false"&gt;    &lt;item        android:drawable="@drawable/load1"        android:duration="200" /&gt;    &lt;item        android:drawable="@drawable/load2"        android:duration="200" /&gt;&lt;/animation-list&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>网络请求loadding 使用帧动画，默认配置使用2帧，即：load1.png和load2.png</li><li>图片分辨率:126x126</li></ul><p>缺省配置如图2：</p><img src="/post/public-bind/loading.png" class="" title="img1"><p><strong>图2</strong></p><h3 id="下拉列表Header动画配置"><a href="#下拉列表Header动画配置" class="headerlink" title="下拉列表Header动画配置"></a>下拉列表Header动画配置</h3><p>在主工程<strong>res/drawable</strong>下分别新建<strong>bind_droplistview_anim.xml</strong>资源文件。<br>代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;!--    根标签为animation-list，其中oneshot代表着是否只展示一遍，设置为false会不停的循环播放动画    根标签下，通过item标签对动画中的每一个图片进行声明    android:duration 表示展示所用的该图片的时间长度 --&gt;&lt;animation-list xmlns:android="http://schemas.android.com/apk/res/android"    android:oneshot="false"&gt;    &lt;item        android:drawable="@drawable/list1"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/list2"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/list3"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/list4"        android:duration="150"&gt;&lt;/item&gt;    &lt;item        android:drawable="@drawable/list5"        android:duration="150"&gt;&lt;/item&gt;&lt;/animation-list&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>下拉列表Header动画 使用帧动画，默认配置使用5帧，即：list1.png、list2.png、list3.png、list4.png、list5.png</li><li>图片分辨率:72x72</li></ul><p>缺省配置如图3：</p><img src="/post/public-bind/droplist.png" class="" title="img1"><p><strong>图3</strong></p>]]></content>
      
      
      <categories>
          
          <category> IoT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> het </tag>
            
            <tag> 智能家居 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS下shadowsocks-libev一键安装脚本</title>
      <link href="//post/installshadowsocks.html"/>
      <url>//post/installshadowsocks.html</url>
      
        <content type="html"><![CDATA[<p>一键安装 libev 版的 shadowsocks 最新版本。该版本的特点是内存占用小（600k左右），低 CPU 消耗，甚至可以安装在基于 OpenWRT 的路由器上。<br>友情提示：如果你有问题，请先参考这篇《<a href="https://teddysun.com/399.html">Shadowsocks Troubleshooting</a>》后再问。</p><span id="more"></span><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>系统支持：CentOS 32或64位<br>内存要求：≥128M<br>日期：2015年08月01日</p><h2 id="本脚本适用环境："><a href="#本脚本适用环境：" class="headerlink" title="本脚本适用环境："></a>本脚本适用环境：</h2><p>系统支持：CentOS 32或64位<br>内存要求：≥128M<br>日期：2015年08月01日</p><h2 id="关于本脚本："><a href="#关于本脚本：" class="headerlink" title="关于本脚本："></a>关于本脚本：</h2><p>一键安装 libev 版的 shadowsocks 最新版本。该版本的特点是内存占用小（600k左右），低 CPU 消耗，甚至可以安装在基于 OpenWRT 的路由器上。<br>友情提示：如果你有问题，请先参考这篇《<a href="https://teddysun.com/399.html">Shadowsocks Troubleshooting</a>》后再问。</p><h2 id="默认配置："><a href="#默认配置：" class="headerlink" title="默认配置："></a>默认配置：</h2><p>服务器端口：自己设定（如不设定，默认为 8989）<br>客户端端口：1080<br>密码：自己设定（如不设定，默认为teddysun.com）</p><h2 id="客户端下载："><a href="#客户端下载：" class="headerlink" title="客户端下载："></a>客户端下载：</h2><p><a href="http://sourceforge.net/projects/shadowsocksgui/files/dist/">http://sourceforge.net/projects/shadowsocksgui/files/dist/</a></p><h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><p>使用root用户登录，运行以下命令：</p><ol><li>获取安装文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>设置执行权限</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x shadowsocks-libev.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>按照命令</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./shadowsocks-libev.sh <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">tee</span> shadowsocks-libev.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em><strong>安装完成后，脚本提示如下：</strong></em></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Congratulations, shadowsocks-libev <span class="token function">install</span> completed<span class="token operator">!</span>Your Server IP:your_server_ipYour Server Port:your_server_portYour Password:your_passwordYour Local IP:127.0.0.1Your Local Port:1080Your Encryption Method:aes-256-cfbWelcome to visit:https://teddysun.com/357.htmlEnjoy it<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>安装完成后即已后台启动 shadowsocks ，运行</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> ss-server <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token function">grep</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>使用命令</li></ol><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>启动：/etc/init.d/shadowsocks start<br>停止：/etc/init.d/shadowsocks stop<br>重启：/etc/init.d/shadowsocks restart<br>查看状态：/etc/init.d/shadowsocks status</p></blockquote><ol start="6"><li>卸载方法</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./shadowsocks-libev.sh uninstall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="7"><li>更多版本 shadowsocks 安装</li></ol><p><a href="https://shadowsocks.be/9.html">ShadowsocksR 版一键安装脚本（CentOS，Debian，Ubuntu）</a><br><a href="https://teddysun.com/342.html">Shadowsocks Python 版一键安装脚本（CentOS，Debian，Ubuntu）</a><br><a href="https://teddysun.com/358.html">Debian 下 Shadowsocks-libev 一键安装脚本</a><br><a href="https://teddysun.com/392.html">Shadowsocks-go 一键安装脚本（CentOS，Debian，Ubuntu）</a></p><p>更新说明（2015 年 08 月 01 日）：<br>1、新增自定义服务器端口功能（如不设定，默认为 8989）；<br>更新说明（2015 年 04 月 30 日）：<br>1、本脚本会始终安装最新版的 Shadowsocks；<br>2、修改配置文件 /etc/shadowsocks-libev/config.json 同时启用 IPv4 与 IPv6 支持：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">{</span>    <span class="token string">"server"</span>:<span class="token punctuation">[</span><span class="token string">"[::0]"</span>,<span class="token string">"0.0.0.0"</span><span class="token punctuation">]</span>,    <span class="token string">"server_port"</span>:your_server_port,    <span class="token string">"local_address"</span><span class="token builtin class-name">:</span><span class="token string">"127.0.0.1"</span>,    <span class="token string">"local_port"</span>:1080,    <span class="token string">"password"</span><span class="token builtin class-name">:</span><span class="token string">"your_password"</span>,    <span class="token string">"timeout"</span>:600,    <span class="token string">"method"</span><span class="token builtin class-name">:</span><span class="token string">"aes-256-cfb"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、Shadowsocks libev 版不能通过修改配置文件来多端口（只能开启多进程），如果你需要多端口请安装 Python 或 Go 版；</p><p>特别说明：<br>1、已安装旧版本的 shadowsocks 需要升级的话，需下载本脚本的最新版，运行卸载命令</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>./shadowsocks-libev.sh uninstall<br>然后，再次执行本脚本即可安装最新版。</p></blockquote><p>参考链接：<br><a href="https://github.com/madeye/shadowsocks-libev">https://github.com/madeye/shadowsocks-libev</a></p>]]></content>
      
      
      <categories>
          
          <category> VPN </category>
          
          <category> shadowsocks </category>
          
          <category> centos6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shadowsocks </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> centos6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ios开发笔记</title>
      <link href="//post/iosdev.html"/>
      <url>//post/iosdev.html</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.williamlong.info/archives/4319.html">http://www.williamlong.info/archives/4319.html</a></p><ul><li><input checked="" disabled="" type="checkbox"> 证书知识及准备工作</li><li><input checked="" disabled="" type="checkbox"> 几种开发者帐号区别</li><li><input checked="" disabled="" type="checkbox"> 真机调试流程</li><li><input checked="" disabled="" type="checkbox"> 内测发布流程</li><li><input disabled="" type="checkbox"> Appstore 上架流程<span id="more"></span></li></ul><h2 id="目录导航"><a href="#目录导航" class="headerlink" title="目录导航"></a>目录导航</h2><ul><li><a href="#%E8%AF%81%E4%B9%A6%E7%9F%A5%E8%AF%86%E5%8F%8A%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">证书知识及准备工作</a><ul><li><a href="#%E5%9F%BA%E7%A1%80%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91">基础问题答疑</a><ul><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AF%E8%AF%81%E4%B9%A6">什么是证书</a></li><li><a href="#%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81%E8%AF%81%E4%B9%A6">什么时候需要证书</a></li><li><a href="#%E8%AF%81%E4%B9%A6%E5%A6%82%E4%BD%95%E8%8E%B7%E5%BE%97">证书如何获得</a></li><li><a href="#%E5%A6%82%E4%BD%95%E5%AF%B9%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8C%E7%AD%BE%E5%90%8D">如何对代码进行签名</a></li><li><a href="#%E6%88%91%E7%94%9F%E6%88%90%E7%9A%84%E7%A7%81%E9%92%A5%E5%A6%82%E4%BD%95%E5%85%B1%E4%BA%AB%E7%BB%99%E5%9B%A2%E9%98%9F%E6%88%90%E5%91%98">我生成的私钥如何共享给团队成员</a></li></ul></li><li><a href="#%E5%90%84%E6%B5%81%E7%A8%8B%E4%B8%AD%E8%AF%81%E4%B9%A6%E7%9A%84%E9%9C%80%E6%B1%82%E6%83%85%E5%86%B5">各流程中证书的需求情况</a><ul><li><a href="#%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%B0%83%E8%AF%95">模拟器调试</a></li><li><a href="#%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95">真机调试</a></li><li><a href="#%E6%89%93%E5%8C%85%E5%92%8C%E5%8F%91%E5%B8%83">打包和发布</a></li><li><a href="#%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1">消息推送后端服务</a></li></ul></li><li><a href="#%E5%BC%80%E5%8F%91%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E8%AF%81%E4%B9%A6%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%96%87%E4%BB%B6%E4%BB%8B%E7%BB%8D">开发中常见的证书及相关文件介绍</a><ul><li><a href="#csrcertificate-request-%E6%96%87%E4%BB%B6">CSR(certificate request) 文件</a></li><li><a href="#%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6">开发者证书</a></li><li><a href="#apnsapple-push-notification-service-%E8%AF%81%E4%B9%A6">apns(Apple Push Notification Service) 证书</a></li><li><a href="#p12personal-information-exchange-%E8%AF%81%E4%B9%A6">p12(Personal Information Exchange) 证书</a></li><li><a href="##%E6%8F%8F%E8%BF%B0%E6%96%87%E4%BB%B6provisioning-profiles">描述文件(Provisioning Profiles)</a></li></ul></li><li><a href="#%E9%99%84%E5%BD%951-%E5%BC%80%E5%8F%91%E5%87%86%E5%A4%87%E7%9B%B8%E5%85%B3%E7%9A%84%E7%BD%91%E5%9D%80">附录1: 开发准备相关的网址</a></li></ul></li><li><a href="#%E5%87%A0%E7%A7%8D%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7%E5%8C%BA%E5%88%AB">几种开发者帐号区别</a><ul><li><a href="#%E5%85%B3%E9%94%AE%E5%8C%BA%E5%88%AB">关键区别</a></li></ul></li><li><a href="#%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%B5%81%E7%A8%8B">真机调试流程</a><ul><li><a href="##%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">基本概念</a></li><li><a href="#%E6%9D%A1%E4%BB%B6%E5%92%8C%E6%B5%81%E7%A8%8B">条件和流程</a></li></ul></li><li><a href="#%E5%86%85%E6%B5%8B%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B">内测发布流程</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-1">基本概念</a></li><li><a href="#%E5%AE%9E%E7%8E%B0%E6%9D%A1%E4%BB%B6">实现条件</a></li><li><a href="#%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E5%88%86%E5%8F%91%E9%80%94%E5%BE%84">几种常见的分发途径</a></li><li><a href="#%E9%99%84%E5%BD%952-%E5%B8%B8%E8%A7%81%E5%88%86%E5%8F%91%E6%B8%A0%E9%81%93%E5%8F%8A%E5%B7%A5%E5%85%B7%E5%9C%B0%E5%9D%80">附录2: 常见分发渠道及工具地址</a></li></ul></li><li><a href="#appstore-%E4%B8%8A%E6%9E%B6%E6%B5%81%E7%A8%8B">Appstore 上架流程</a><ul><li><a href="#%E9%99%84%E5%BD%953-app-store%E6%9C%80%E6%96%B0%E5%AE%A1%E6%A0%B8%E6%A0%87%E5%87%8620153">附录3: App store最新审核标准(2015.3)</a></li></ul></li></ul><h2 id="证书知识及准备工作"><a href="#证书知识及准备工作" class="headerlink" title="证书知识及准备工作"></a>证书知识及准备工作</h2><h3 id="基础问题答疑"><a href="#基础问题答疑" class="headerlink" title="基础问题答疑"></a>基础问题答疑</h3><h4 id="什么是证书"><a href="#什么是证书" class="headerlink" title="什么是证书"></a>什么是证书</h4><p>由 apple 官方颁发, 用以证明开发者身份的特殊文件, 在 iOS 开发中主要用于代码签名, 保障 iOS 生态的健康安全, 分为开发者证书和发布者证书</p><h4 id="什么时候需要证书"><a href="#什么时候需要证书" class="headerlink" title="什么时候需要证书"></a>什么时候需要证书</h4><p>只有在本机模拟器调试时无需代码签名, 当 App 需要在真机运行和发布时需要使用相应证书进行签名</p><h4 id="证书如何获得"><a href="#证书如何获得" class="headerlink" title="证书如何获得"></a>证书如何获得</h4><p>首先需要拥有相应权限的开发者帐号, 通过在本地生成配对的密钥, 向 <a href="https://developer.apple.com/ios/manage/overview/index.action">provisioning portal</a> 提交公钥后换取, 后续证书在使用时会验证本地私钥</p><h4 id="如何对代码进行签名"><a href="#如何对代码进行签名" class="headerlink" title="如何对代码进行签名"></a>如何对代码进行签名</h4><p>在 xcode 中, 使用描述文件(provision profile 包含调试者证书, 授权设备清单, 应用ID), 在 <code>Build Settings</code> 中选择存于 <code>Keychain Access</code> 中的证书文件设置调试和发布任务时的代码签名</p><h4 id="我生成的私钥如何共享给团队成员"><a href="#我生成的私钥如何共享给团队成员" class="headerlink" title="我生成的私钥如何共享给团队成员"></a>我生成的私钥如何共享给团队成员</h4><p>在 <code>Keychain Access</code> 中找到导入的证书, 右击导出为包含私钥的 Personal Information Exchange(.p12)文件(导出时可以创建密码), 团队成员再导入 <code>p12</code> 证书后就完整包含了证书和私钥</p><h3 id="各流程中证书的需求情况"><a href="#各流程中证书的需求情况" class="headerlink" title="各流程中证书的需求情况"></a>各流程中证书的需求情况</h3><h4 id="模拟器调试"><a href="#模拟器调试" class="headerlink" title="模拟器调试"></a>模拟器调试</h4><p>不需要</p><h4 id="真机调试"><a href="#真机调试" class="headerlink" title="真机调试"></a>真机调试</h4><ul><li><p>描述文件(Provisioning Profiles)</p></li><li><p>开发者证书(ios_development.cer)</p></li></ul><h4 id="打包和发布"><a href="#打包和发布" class="headerlink" title="打包和发布"></a>打包和发布</h4><ul><li><p>描述文件(Provisioning Profiles)</p></li><li><p>可用于发布的开发者证书(ios_distribution.cer)</p></li></ul><h4 id="消息推送后端服务"><a href="#消息推送后端服务" class="headerlink" title="消息推送后端服务"></a>消息推送后端服务</h4><ul><li>apns 证书</li></ul><h3 id="开发中常见的证书及相关文件介绍"><a href="#开发中常见的证书及相关文件介绍" class="headerlink" title="开发中常见的证书及相关文件介绍"></a>开发中常见的证书及相关文件介绍</h3><h4 id="CSR-certificate-request-文件"><a href="#CSR-certificate-request-文件" class="headerlink" title="CSR(certificate request) 文件"></a>CSR(certificate request) 文件</h4><p>用于换取证书的公钥文件, 实际是在本地基于 <code>RSA</code> 加密得到配对的密钥, 私钥存于 <code>Keychain Access</code> 用于签名, 公钥作为换取证书的凭证</p><h5 id="生成方法"><a href="#生成方法" class="headerlink" title="生成方法"></a>生成方法</h5><ul><li><p>OSX 系统自带的 <strong>Keychain Access</strong></p><ul><li><p>选择 “Request a Certificate From a Certificate Authority…”</p></li><li><p>输入 email 等信息后保存为 <code>.certSigningRequest</code> 文件</p></li></ul></li><li><p>命令行下使用 <strong>openssl</strong> 生成</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ openssl genrsa -out private.key <span class="token number">2048</span>$ openssl req -new -sha256 -key private.key -out my.certSigningRequest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="开发者证书"><a href="#开发者证书" class="headerlink" title="开发者证书"></a>开发者证书</h4><p>由 apple 官方颁发, 用来证明开发者资格的证书文件, 分开发(ios_development.cer)和发布(ios_distribution.cer)两种</p><p><code>cer</code> 证书跟开发机(私钥)绑定只能在拥有私钥的机器上使用, 如果要迁移机器需要导出为 <code>p12</code> 文件</p><h5 id="生成方法-1"><a href="#生成方法-1" class="headerlink" title="生成方法"></a>生成方法</h5><p>在 <a href="https://developer.apple.com/devcenter/ios/index.action">开发者中心</a> “certificates” 面板中添加 <code>certificate</code> 并上传刚刚生成的 <code>CSR</code> 文件, 获取 <code>ios_development.cer</code></p><h4 id="apns-Apple-Push-Notification-Service-证书"><a href="#apns-Apple-Push-Notification-Service-证书" class="headerlink" title="apns(Apple Push Notification Service) 证书"></a>apns(Apple Push Notification Service) 证书</h4><p>用于服务端消息推送, 类似 ssl 证书使用, 和 App 端的开发打包没有关系</p><h5 id="生成方法-2"><a href="#生成方法-2" class="headerlink" title="生成方法"></a>生成方法</h5><p>在 <a href="https://developer.apple.com/devcenter/ios/index.action">开发者中心</a> “Identifiers” 面板中添加 <code>App ID</code> 并上传刚刚生成的 <code>CSR</code> 文件, 获取 <code>aps_production.cer</code></p><h4 id="p12-Personal-Information-Exchange-证书"><a href="#p12-Personal-Information-Exchange-证书" class="headerlink" title="p12(Personal Information Exchange) 证书"></a>p12(Personal Information Exchange) 证书</h4><p><code>p12</code> 证书实际是包含了 <code>cer</code> 证书及私钥信息, 可以分发给团队成员</p><h5 id="生成方法-3"><a href="#生成方法-3" class="headerlink" title="生成方法"></a>生成方法</h5><p>在 <strong>Keychain Access</strong> 中找到已经导入的 <code>cer</code> 证书, 点右键导出为 <code>p12</code> 格式</p><h4 id="描述文件-Provisioning-Profiles"><a href="#描述文件-Provisioning-Profiles" class="headerlink" title="描述文件(Provisioning Profiles)"></a>描述文件(Provisioning Profiles)</h4><p>包含 <code>certificate</code> <code>appID</code> <code>devices id</code> 的文件用于在 xcode 调试打包时提供授权的配置信息</p><h5 id="生成方法-4"><a href="#生成方法-4" class="headerlink" title="生成方法"></a>生成方法</h5><ul><li><p>在 <a href="https://developer.apple.com/devcenter/ios/index.action">开发者中心</a> “Provisioning Profiles” 面板中添加 <code>iOS Provisioning Profiles</code> 并上传刚刚生成的 <code>CSR</code> 文件, 获取 <code>.mobileprovision</code> 文件</p></li><li><p>在 xcode 登录开发者帐号后可以连接开发者中心获取</p></li></ul><h3 id="附录1-开发准备相关的网址"><a href="#附录1-开发准备相关的网址" class="headerlink" title="附录1: 开发准备相关的网址"></a>附录1: 开发准备相关的网址</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>开发者中心<br><a href="https://developer.apple.com/devcenter/ios/index.action">https://developer.apple.com/devcenter/ios/index.action</a></p><p>iOS 描述管理(配置证书、描述文件、推送服务)<br><a href="https://developer.apple.com/ios/manage/overview/index.action">https://developer.apple.com/ios/manage/overview/index.action</a></p><p>切换团队(在 web 界面上死活没有找到)<br><a href="https://developer.apple.com/account/selectTeam.action">https://developer.apple.com/account/selectTeam.action</a></p><p>iOS 上架 Appstore<br><a href="http://itunesconnect.apple.com/">http://itunesconnect.apple.com/</a></p></blockquote><h2 id="几种开发者帐号区别"><a href="#几种开发者帐号区别" class="headerlink" title="几种开发者帐号区别"></a>几种开发者帐号区别</h2><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>详见: <a href="https://developer.apple.com/programs/start/ios/">https://developer.apple.com/programs/start/ios/</a></p></blockquote><ul><li><a href="https://developer.apple.com/programs/ios/">个人(individual)</a> <strong>$99</strong>/year</li><li><a href="https://developer.apple.com/programs/ios/">公司(company)</a> <strong>$99</strong>/year</li><li><a href="https://developer.apple.com/programs/ios/enterprise/">企业(enterprise)</a> <strong>$299</strong>/year</li><li><a href="https://developer.apple.com/programs/start/university/">大学(University)</a> <strong>free</strong></li></ul><h3 id="关键区别"><a href="#关键区别" class="headerlink" title="关键区别"></a>关键区别</h3><ul><li>个人帐号可以真机调试, 发布 appstore, 每年 最多为 100台设备分发</li><li>公司帐号和个人帐号类似, 只有这两种帐号可以发布 appstore, 主要特权是可以添加多个开发者子账号, 但只允许主账号提交, 发布等操作, 在协同开发时比较灵活, 可以各自管理授权设备等</li><li>企业帐号<strong>无法用于 appstore 发布</strong>, 但可以不通过 appstore 发布任意 iphone 都可以安装的应用</li><li>大学帐号不能发布 appstore, 主要拥有真机调试的权限</li></ul><h2 id="真机调试流程"><a href="#真机调试流程" class="headerlink" title="真机调试流程"></a>真机调试流程</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>真机调试指 mac 连上 iphone, xcode 可以直接以这台 iphone 设备为 build target, 能在 iphone 里执行编译结果</p><h3 id="条件和流程"><a href="#条件和流程" class="headerlink" title="条件和流程"></a>条件和流程</h3><p>分为拥有独立开发者帐号(也包括公司帐号或企业帐号成员)和共享开发者帐号两种情况</p><h4 id="拥有独立开发者帐号"><a href="#拥有独立开发者帐号" class="headerlink" title="拥有独立开发者帐号"></a>拥有独立开发者帐号</h4><ul><li><ol><li>在 <a href="https://developer.apple.com/ios/manage/overview/index.action">provisioning portal</a> 新建应用, 配置授权设备等</li></ol></li><li><ol start="2"><li>开发机上导入证书</li></ol></li><li><ol start="3"><li>在 xcode 上登录开发者帐号, 不需要准备描述文件, xcode 会自动生成(如果是公司帐号可以自动生成 <code>iOS Team Provisioning Profile</code>)</li></ol></li></ul><h4 id="共享开发者帐号"><a href="#共享开发者帐号" class="headerlink" title="共享开发者帐号"></a>共享开发者帐号</h4><p>如果无法在 xcode 登录一个开发者帐号, 也可以通过他人对你手机和应用 id 的授权, 得到 <code>.mobileprovision</code> 描述文件再导入其含私钥的证书(<code>p12</code>) 即可, 具体步骤如下:</p><ul><li><ol><li>获得手机的 <code>udid</code> (可以连上 mac, 在 itunes 中查看)</li></ol></li><li><ol start="2"><li>告知对方 <code>udid</code> (用以设备授权) 和 应用 id</li></ol></li><li><ol start="3"><li>得到对方生成的证书和描述文件后, 先导入 <code>p12</code> 证书, 再双击 <code>mobileprovision</code> 文件</li></ol></li><li><ol start="4"><li>连接手机, 在 xcode 中选择 build target 为已连接的手机</li></ol></li></ul><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>对刚入门的个人开发者而言, 可以在淘宝搜 <code>iOS真机调试</code> 花几元购买一份授权, 包含(<code>p12</code> 证书 和 <code>.mobileprovision</code> 描述文件)</p></blockquote><h2 id="内测发布流程"><a href="#内测发布流程" class="headerlink" title="内测发布流程"></a>内测发布流程</h2><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><p>当 App 开发进行到一定程度, 需要更多的人参与测试, 需要谋求一种方式方便应用能安装进更多的设备中</p><h3 id="实现条件"><a href="#实现条件" class="headerlink" title="实现条件"></a>实现条件</h3><p>进行内测发布主要的关键点是:</p><ul><li><ol><li>是如何将应用打包为 <code>.ipa</code></li></ol></li></ul><p>xcode6 以后, 个人/公司帐号无法对应用打包为 <code>.ipa</code>, 要么用 xcode5 打包要么拥有企业帐号级别的授权</p><ul><li><ol start="2"><li>设备需不需要授权</li></ol></li></ul><p>个人/公司帐号权限只有在 <code>TestFlight</code> / 越狱渠道下完成不授权安装; 企业帐号授权可以在 <code>ad-hoc</code> / <code>in-house</code> 渠道下分发, 完成不授权设备安装</p><h3 id="几种常见的分发途径"><a href="#几种常见的分发途径" class="headerlink" title="几种常见的分发途径"></a>几种常见的分发途径</h3><ul><li>ad-hoc</li></ul><p>打包时必须在登录企业帐号(或其成员)并已导入证书和描述文件的情况下, 任何用户(未授权)都可以在手机上用浏览器访问一个 url(例: itms-services://?action=download-manifest&amp;url=<a href="https://example.com/manifest.plist">https://example.com/manifest.plist</a>) 完成安装</p><p>最大的问题是安装量有 100 的上限, 无法作为一个量很大的分发渠道</p><ul><li>in-house</li></ul><p>针对企业内部用户进行分发, 相比 <code>ad-hoc</code> 无安装量上限</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>iOS 8.1.3 开始不能企业证书 Iresign 方式重新签名的应用无法安装<br><a href="https://support.apple.com/en-us/HT204245">https://support.apple.com/en-us/HT204245</a></p></blockquote><ul><li>TestFlight</li></ul><p>仅支持 <strong>iOS8.0</strong> 以上, 不需要对设备 <code>udid</code> 进行授权, 适合个人 / 公司开发者, 在应用发布前可以开启 TestFlight Beta 测试并添加测试者的 iTunes Connect 帐号, 需要待测用户拥有 iTunes Connect 帐号并在设备安装 <code>TestFlight</code> 客户端</p><p>这种方式非常便于推送应用更新和收集测试信息</p><ul><li>导出 ipa 包, 越狱安装</li></ul><p>如果测试设备都越狱了, 这种方式非常灵活简单, 只有能导出 ipa 包就能通过 <a href="http://www.itools.cn/">itools</a> 等第三方工具安装</p><h3 id="附录2-常见分发渠道及工具地址"><a href="#附录2-常见分发渠道及工具地址" class="headerlink" title="附录2: 常见分发渠道及工具地址"></a>附录2: 常见分发渠道及工具地址</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>fir-第三方应用托管平台<br><a href="http://fir.im/">http://fir.im/</a></p><p>TestFlight<br><a href="https://developer.apple.com/testflight/">https://developer.apple.com/testflight/</a></p><p>Agile-百度内部 ios 分发测试平台<br><a href="http://agile.baidu.com/">http://agile.baidu.com</a></p><p>fir-分发相关工具<br><a href="http://fir.im/dev/tools">http://fir.im/dev/tools</a></p><p>itools<br><a href="http://www.itools.cn/">http://www.itools.cn/</a></p></blockquote><h2 id="Appstore-上架流程"><a href="#Appstore-上架流程" class="headerlink" title="Appstore 上架流程"></a>Appstore 上架流程</h2><p>@TODO</p><h3 id="附录3-App-store最新审核标准-2015-3"><a href="#附录3-App-store最新审核标准-2015-3" class="headerlink" title="附录3: App store最新审核标准(2015.3)"></a>附录3: App store最新审核标准(2015.3)</h3><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><a href="Appstore%E6%9C%80%E6%96%B0%E5%AE%A1%E6%A0%B8%E6%A0%87%E5%87%86_2015-3.md">App store最新审核标准(2015.3) 中文翻译</a></p></blockquote><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p><a href="https://developer.apple.com/app-store/review/guidelines">App store最新审核标准(2015.3) 英文原版</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Ios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OkHttp使用教程</title>
      <link href="//post/okhttphelp.html"/>
      <url>//post/okhttphelp.html</url>
      
        <content type="html"><![CDATA[<p>这是一个针对技术开发者的一个应用，你可以在掘金上获取最新最优质的技术干货，不仅仅是Android知识、前端、后端以至于产品和设计都有涉猎，想成为全栈工程师的朋友不要错过！</p><span id="more"></span><h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><p>Android系统提供了两种HTTP通信类，HttpURLConnection和HttpClient。<br><a href="http://android-developers.blogspot.com/2011/09/androids-http-clients.html">关于HttpURLConnection和HttpClient的选择&gt;&gt;官方博客</a><br>尽管Google在大部分安卓版本中推荐使用HttpURLConnection，但是这个类相比HttpClient实在是太难用，太弱爆了。<br>OkHttp是一个相对成熟的解决方案，据说Android4.4的源码中可以看到HttpURLConnection已经替换成OkHttp实现了。所以我们更有理由相信OkHttp的强大。</p><p>OkHttp 处理了很多网络疑难杂症：会从很多常用的连接问题中自动恢复。如果您的服务器配置了多个IP地址，当第一个IP连接失败的时候，OkHttp会自动尝试下一个IP。OkHttp还处理了代理服务器问题和SSL握手失败问题。</p><p>使用 OkHttp 无需重写您程序中的网络代码。OkHttp实现了几乎和java.net.HttpURLConnection一样的API。如果你用了 Apache HttpClient，则OkHttp也提供了一个对应的okhttp-apache 模块。</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>注：在国内使用OkHttp会因为这个问题导致部分酷派手机用户无法联网，所以对于大众app来说，需要等待这个bug修复后再使用。或者尝试使用OkHttp的老版本。<br>截止到目前，OkHttp一直没有修复，并把修复计划延迟到了OkHttp2.3中。不是所有设备都能重现，仅少量设备会出现这个问题。（如果问题这么明显，OkHttp早就修复了）</p></blockquote><h2 id="官方资料"><a href="#官方资料" class="headerlink" title="官方资料"></a>官方资料</h2><p><a href="http://square.github.io/okhttp/">官方介绍</a><br><a href="https://github.com/square/okhttp">github源码</a></p><h2 id="使用范围"><a href="#使用范围" class="headerlink" title="使用范围"></a>使用范围</h2><p>OkHttp支持Android 2.3及其以上版本。<br>对于Java, JDK1.7以上。</p><h2 id="jar包准备"><a href="#jar包准备" class="headerlink" title="jar包准备"></a>jar包准备</h2><p>官方介绍页面有链接位置。这里把下载链接也写在下面。<br><a href="http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&amp;g=com.squareup.okhttp&amp;a=okhttp&amp;v=LATEST">OkHttp</a><br><a href="http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&amp;g=com.squareup.okio&amp;a=okio&amp;v=LATEST">Okio</a></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>HTTP GET</strong></p><pre class="line-numbers language-none"><code class="language-none">OkHttpClient client = new OkHttpClient(); String run(String url) throws IOException {    Request request = new Request.Builder().url(url).build();    Response response = client.newCall(request).execute();    if (response.isSuccessful()) {        return response.body().string();    } else {        throw new IOException("Unexpected code " + response);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Request是OkHttp中访问的请求，Builder是辅助类。Response即OkHttp中的响应。<br><strong>Response类：</strong></p><pre class="line-numbers language-none"><code class="language-none">public boolean isSuccessful()Returns true if the code is in [200..300), which means the request was successfully received, understood, and accepted.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>response.body()返回ResponseBody类</strong></p><pre class="line-numbers language-none"><code class="language-none">public final String string() throws IOExceptionReturns the response as a string decoded with the charset of the Content-Type header. If that header is either absent or lacks a charset, this will attempt to decode the response body as UTF-8.Throws:IOException<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当然也能获取到流的形式：</p><pre class="line-numbers language-none"><code class="language-none">public final InputStream byteStream()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>HTTP POST<br>POST提交Json数据</strong></p><pre class="line-numbers language-none"><code class="language-none">public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");OkHttpClient client = new OkHttpClient();String post(String url, String json) throws IOException {     RequestBody body = RequestBody.create(JSON, json);      Request request = new Request.Builder()      .url(url)      .post(body)      .build();      Response response = client.newCall(request).execute();    f (response.isSuccessful()) {        return response.body().string();    } else {        throw new IOException("Unexpected code " + response);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用Request的post方法来提交请求体RequestBody</p><p>** POST提交键值对**<br>很多时候我们会需要通过POST方式把键值对数据传送到服务器。 OkHttp提供了很方便的方式来做这件事情。</p><pre class="line-numbers language-none"><code class="language-none">OkHttpClient client = new OkHttpClient();String post(String url, String json) throws IOException {      RequestBody formBody = new FormEncodingBuilder()    .add("platform", "android")    .add("name", "bug")    .add("subject", "XXXXXXXXXXXXXXX")    .build();       Request request = new Request.Builder()      .url(url)      .post(body)      .build();       Response response = client.newCall(request).execute();    if (response.isSuccessful()) {        return response.body().string();    } else {        throw new IOException("Unexpected code " + response);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过上面的例子我们可以发现，OkHttp在很多时候使用都是很方便的，而且很多代码也有重复，因此特地整理了下面的工具类。<br>注意：</p><ul><li>OkHttp官方文档并不建议我们创建多个OkHttpClient，因此全局使用一个。 如果有需要，可以使用clone方法，再进行自定义。这点在后面的高级教程里会提到。</li><li>enqueue为OkHttp提供的异步方法，入门教程中并没有提到，后面的高级教程里会有解释。</li></ul><pre class="line-numbers language-none"><code class="language-none">import java.io.IOException;import java.util.List;import java.util.concurrent.TimeUnit;import org.apache.http.client.utils.URLEncodedUtils;import org.apache.http.message.BasicNameValuePair;import cn.wiz.sdk.constant.WizConstant;import com.squareup.okhttp.Callback;import com.squareup.okhttp.OkHttpClient;import com.squareup.okhttp.Request;import com.squareup.okhttp.Response;   public class OkHttpUtil {    private static final OkHttpClient mOkHttpClient = new OkHttpClient();    static{        mOkHttpClient.setConnectTimeout(30, TimeUnit.SECONDS);    }    /**     * 该不会开启异步线程。     * @param request     * @return     * @throws IOException     */    public static Response execute(Request request) throws IOException{        return mOkHttpClient.newCall(request).execute();    }    /**     * 开启异步线程访问网络     * @param request     * @param responseCallback     */    public static void enqueue(Request request, Callback responseCallback){        mOkHttpClient.newCall(request).enqueue(responseCallback);    }    /**     * 开启异步线程访问网络, 且不在意返回结果（实现空callback）     * @param request     */    public static void enqueue(Request request){        mOkHttpClient.newCall(request).enqueue(new Callback() {                         @Override            public void onResponse(Response arg0) throws IOException {                             }                         @Override            public void onFailure(Request arg0, IOException arg1) {                             }        });    }    public static String getStringFromServer(String url) throws IOException{        Request request = new Request.Builder().url(url).build();        Response response = execute(request);        if (response.isSuccessful()) {            String responseUrl = response.body().string();            return responseUrl;        } else {            throw new IOException("Unexpected code " + response);        }    }    private static final String CHARSET_NAME = "UTF-8";    /**     * 这里使用了HttpClinet的API。只是为了方便     * @param params     * @return     */    public static String formatParams(List&lt;BasicNameValuePair&gt; params){        return URLEncodedUtils.format(params, CHARSET_NAME);    }    /**     * 为HttpGet 的 url 方便的添加多个name value 参数。     * @param url     * @param params     * @return     */    public static String attachHttpGetParams(String url, List&lt;BasicNameValuePair&gt; params){        return url + "?" + formatParams(params);    }    /**     * 为HttpGet 的 url 方便的添加1个name value 参数。     * @param url     * @param name     * @param value     * @return     */    public static String attachHttpGetParam(String url, String name, String value){        return url + "?" + name + "=" + value;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h2><p>高级属性其实用的不多，这里主要是对OkHttp github官方教程进行了翻译。</p><h2 id="同步get"><a href="#同步get" class="headerlink" title="同步get"></a>同步get</h2><p>下载一个文件，打印他的响应头，以string形式打印响应体。<br>响应体的 string() 方法对于小文档来说十分方便、高效。但是如果响应体太大（超过1MB），应避免适应 string()方法 ，因为他会将把整个文档加载到内存中。<br>对于超过1MB的响应body，应使用流的方式来处理body。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    Request request = new Request.Builder()        .url("http://publicobject.com/helloworld.txt")        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     Headers responseHeaders = response.headers();    for (int i = 0; i &lt; responseHeaders.size(); i++) {      System.out.println(responseHeaders.name(i) + ": " + responseHeaders.value(i));    }     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="异步get"><a href="#异步get" class="headerlink" title="异步get"></a>异步get</h2><p>在一个工作线程中下载文件，当响应可读时回调Callback接口。读取响应时会阻塞当前线程。OkHttp现阶段不提供异步api来接收响应体。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    Request request = new Request.Builder()        .url("http://publicobject.com/helloworld.txt")        .build();     client.newCall(request).enqueue(new Callback() {      @Override public void onFailure(Request request, Throwable throwable) {        throwable.printStackTrace();      }       @Override public void onResponse(Response response) throws IOException {        if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);         Headers responseHeaders = response.headers();        for (int i = 0; i &lt; responseHeaders.size(); i++) {          System.out.println(responseHeaders.name(i) + ": " + responseHeaders.value(i));        }         System.out.println(response.body().string());      }    });}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="提取响应头"><a href="#提取响应头" class="headerlink" title="提取响应头"></a>提取响应头</h2><p>典型的HTTP头 像是一个 Map&lt;String, String&gt; :每个字段都有一个或没有值。但是一些头允许多个值，像Guava的Multimap。例如：HTTP响应里面提供的Vary响应头，就是多值的。OkHttp的api试图让这些情况都适用。<br>当写请求头的时候，使用header(name, value)可以设置唯一的name、value。如果已经有值，旧的将被移除，然后添加新的。使用addHeader(name, value)可以添加多值（添加，不移除已有的）。<br>当读取响应头时，使用header(name)返回最后出现的name、value。通常情况这也是唯一的name、value。如果没有值，那么header(name)将返回null。如果想读取字段对应的所有值，使用headers(name)会返回一个list。<br>为了获取所有的Header，Headers类支持按index访问。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    Request request = new Request.Builder()        .url("https://api.github.com/repos/square/okhttp/issues")        .header("User-Agent", "OkHttp Headers.java")        .addHeader("Accept", "application/json; q=0.5")        .addHeader("Accept", "application/vnd.github.v3+json")        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println("Server: " + response.header("Server"));    System.out.println("Date: " + response.header("Date"));    System.out.println("Vary: " + response.headers("Vary"));}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Post方式提交String"><a href="#Post方式提交String" class="headerlink" title="Post方式提交String"></a>Post方式提交String</h2><p>使用HTTP POST提交请求到服务。这个例子提交了一个markdown文档到web服务，以HTML方式渲染markdown。因为整个请求体都在内存中，因此避免使用此api提交大文档（大于1MB）。</p><pre class="line-numbers language-none"><code class="language-none">public static final MediaType MEDIA_TYPE_MARKDOWN  = MediaType.parse("text/x-markdown; charset=utf-8"); private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    String postBody = ""        + "Releases\n"        + "--------\n"        + "\n"        + " * _1.0_ May 6, 2013\n"        + " * _1.1_ June 15, 2013\n"        + " * _1.2_ August 11, 2013\n";     Request request = new Request.Builder()        .url("https://api.github.com/markdown/raw")        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, postBody))        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Post方式提交流"><a href="#Post方式提交流" class="headerlink" title="Post方式提交流"></a>Post方式提交流</h2><p>以流的方式POST提交请求体。请求体的内容由流写入产生。这个例子是流直接写入Okio的BufferedSink。你的程序可能会使用OutputStream，你可以使用BufferedSink.outputStream()来获取。</p><pre class="line-numbers language-none"><code class="language-none">public static final MediaType MEDIA_TYPE_MARKDOWN      = MediaType.parse("text/x-markdown; charset=utf-8"); private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    RequestBody requestBody = new RequestBody() {      @Override public MediaType contentType() {        return MEDIA_TYPE_MARKDOWN;      }       @Override public void writeTo(BufferedSink sink) throws IOException {        sink.writeUtf8("Numbers\n");        sink.writeUtf8("-------\n");        for (int i = 2; i &lt;= 997; i++) {          sink.writeUtf8(String.format(" * %s = %s\n", i, factor(i)));        }      }       private String factor(int n) {        for (int i = 2; i &lt; n; i++) {          int x = n / i;          if (x * i == n) return factor(x) + " × " + i;        }        return Integer.toString(n);      }    };     Request request = new Request.Builder()        .url("https://api.github.com/markdown/raw")        .post(requestBody)        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Post方式提交文件"><a href="#Post方式提交文件" class="headerlink" title="Post方式提交文件"></a>Post方式提交文件</h2><p>以文件作为请求体是十分简单的。</p><pre class="line-numbers language-none"><code class="language-none">public static final MediaType MEDIA_TYPE_MARKDOWN  = MediaType.parse("text/x-markdown; charset=utf-8"); private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    File file = new File("README.md");     Request request = new Request.Builder()        .url("https://api.github.com/markdown/raw")        .post(RequestBody.create(MEDIA_TYPE_MARKDOWN, file))        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Post方式提交表单"><a href="#Post方式提交表单" class="headerlink" title="Post方式提交表单"></a>Post方式提交表单</h2><p>使用FormEncodingBuilder来构建和HTML</p><form>标签相同效果的请求体。键值对将使用一种HTML兼容形式的URL编码来进行编码。<p></p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    RequestBody formBody = new FormEncodingBuilder()        .add("search", "Jurassic Park")        .build();    Request request = new Request.Builder()        .url("https://en.wikipedia.org/w/index.php")        .post(formBody)        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Post方式提交分块请求"><a href="#Post方式提交分块请求" class="headerlink" title="Post方式提交分块请求"></a>Post方式提交分块请求</h2><p>MultipartBuilder可以构建复杂的请求体，与HTML文件上传形式兼容。多块请求体中每块请求都是一个请求体，可以定义自己的请求头。这些请求头可以用来描述这块请求，例如他的Content-Disposition。如果Content-Length和Content-Type可用的话，他们会被自动添加到请求头中。</p><pre class="line-numbers language-none"><code class="language-none">private static final String IMGUR_CLIENT_ID = "...";private static final MediaType MEDIA_TYPE_PNG = MediaType.parse("image/png"); private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    // Use the imgur image upload API as documented at https://api.imgur.com/endpoints/image    RequestBody requestBody = new MultipartBuilder()        .type(MultipartBuilder.FORM)        .addPart(            Headers.of("Content-Disposition", "form-data; name=\"title\""),            RequestBody.create(null, "Square Logo"))        .addPart(            Headers.of("Content-Disposition", "form-data; name=\"image\""),            RequestBody.create(MEDIA_TYPE_PNG, new File("website/static/logo-square.png")))        .build();     Request request = new Request.Builder()        .header("Authorization", "Client-ID " + IMGUR_CLIENT_ID)        .url("https://api.imgur.com/3/image")        .post(requestBody)        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用Gson来解析JSON响应"><a href="#使用Gson来解析JSON响应" class="headerlink" title="使用Gson来解析JSON响应"></a>使用Gson来解析JSON响应</h2><p>Gson是一个在JSON和Java对象之间转换非常方便的api。这里我们用Gson来解析Github API的JSON响应。<br>注意：ResponseBody.charStream()使用响应头Content-Type指定的字符集来解析响应体。默认是UTF-8。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient();private final Gson gson = new Gson(); public void run() throws Exception {    Request request = new Request.Builder()        .url("https://api.github.com/gists/c2a7c39532239ff261be")        .build();    Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     Gist gist = gson.fromJson(response.body().charStream(), Gist.class);    for (Map.Entry&lt;String, GistFile&gt; entry : gist.files.entrySet()) {      System.out.println(entry.getKey());      System.out.println(entry.getValue().content);    }} static class Gist {    Map&lt;String, GistFile&gt; files;} static class GistFile {    String content;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="响应缓存"><a href="#响应缓存" class="headerlink" title="响应缓存"></a>响应缓存</h2><p>为了缓存响应，你需要一个你可以读写的缓存目录，和缓存大小的限制。这个缓存目录应该是私有的，不信任的程序应不能读取缓存内容。<br>一个缓存目录同时拥有多个缓存访问是错误的。大多数程序只需要调用一次new OkHttp()，在第一次调用时配置好缓存，然后其他地方只需要调用这个实例就可以了。否则两个缓存示例互相干扰，破坏响应缓存，而且有可能会导致程序崩溃。<br>响应缓存使用HTTP头作为配置。你可以在请求头中添加Cache-Control: max-stale=3600 ,OkHttp缓存会支持。你的服务通过响应头确定响应缓存多长时间，例如使用Cache-Control: max-age=9600。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client; public CacheResponse(File cacheDirectory) throws Exception {    int cacheSize = 10 * 1024 * 1024; // 10 MiB    Cache cache = new Cache(cacheDirectory, cacheSize);     client = new OkHttpClient();    client.setCache(cache);} public void run() throws Exception {    Request request = new Request.Builder()        .url("http://publicobject.com/helloworld.txt")        .build();     Response response1 = client.newCall(request).execute();    if (!response1.isSuccessful()) throw new IOException("Unexpected code " + response1);     String response1Body = response1.body().string();    System.out.println("Response 1 response:          " + response1);    System.out.println("Response 1 cache response:    " + response1.cacheResponse());    System.out.println("Response 1 network response:  " + response1.networkResponse());     Response response2 = client.newCall(request).execute();    if (!response2.isSuccessful()) throw new IOException("Unexpected code " + response2);     String response2Body = response2.body().string();    System.out.println("Response 2 response:          " + response2);    System.out.println("Response 2 cache response:    " + response2.cacheResponse());    System.out.println("Response 2 network response:  " + response2.networkResponse());     System.out.println("Response 2 equals Response 1? " + response1Body.equals(response2Body));}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>在这一节还提到了下面一句：<br>There are cache headers to force a cached response, force a network response, or force the network response to be validated with a conditional GET.</p><p>我不是很懂cache，平时用到的也不多，所以把Google在Android Developers一段相关的解析放到这里吧。</p><h2 id="Force-a-Network-Response"><a href="#Force-a-Network-Response" class="headerlink" title="Force a Network Response"></a>Force a Network Response</h2><p>In some situations, such as after a user clicks a ‘refresh’ button, it may be necessary to skip the cache, and fetch data directly from the server. To force a full refresh, add the no-cache directive:</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>connection.addRequestProperty(“Cache-Control”, “no-cache”);</p></blockquote><p>If it is only necessary to force a cached response to be validated by the server, use the more efficient max-age=0 instead:</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>connection.addRequestProperty(“Cache-Control”, “max-age=0”);</p></blockquote><p>##Force a Cache Response<br>Sometimes you’ll want to show resources if they are available immediately, but not otherwise. This can be used so your application can show something while waiting for the latest data to be downloaded. To restrict a request to locally-cached resources, add the only-if-cached directive:</p><pre class="line-numbers language-none"><code class="language-none">try {     connection.addRequestProperty("Cache-Control", "only-if-cached");     InputStream cached = connection.getInputStream();     // the resource was cached! show it  catch (FileNotFoundException e) {     // the resource was not cached }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This technique works even better in situations where a stale response is better than no response. To permit stale cached responses, use the max-stale directive with the maximum staleness in seconds:</p><pre class="line-numbers language-none"><code class="language-none">int maxStale = 60 * 60 * 24 * 28; // tolerate 4-weeks staleconnection.addRequestProperty("Cache-Control", "max-stale=" + maxStale);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上信息来自：<a href="http://developer.android.com/reference/android/net/http/HttpResponseCache.html">HttpResponseCache - Android SDK | Android Developers</a></p><h2 id="取消一个Call"><a href="#取消一个Call" class="headerlink" title="取消一个Call"></a>取消一个Call</h2><p>使用Call.cancel()可以立即停止掉一个正在执行的call。如果一个线程正在写请求或者读响应，将会引发IOException。当call没有必要的时候，使用这个api可以节约网络资源。例如当用户离开一个应用时。不管同步还是异步的call都可以取消。<br>你可以通过tags来同时取消多个请求。当你构建一请求时，使用RequestBuilder.tag(tag)来分配一个标签。之后你就可以用OkHttpClient.cancel(tag)来取消所有带有这个tag的call。</p><pre class="line-numbers language-none"><code class="language-none">private final ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    Request request = new Request.Builder()        .url("http://httpbin.org/delay/2") // This URL is served with a 2 second delay.        .build();     final long startNanos = System.nanoTime();    final Call call = client.newCall(request);     // Schedule a job to cancel the call in 1 second.    executor.schedule(new Runnable() {      @Override public void run() {        System.out.printf("%.2f Canceling call.%n", (System.nanoTime() - startNanos) / 1e9f);        call.cancel();        System.out.printf("%.2f Canceled call.%n", (System.nanoTime() - startNanos) / 1e9f);      }    }, 1, TimeUnit.SECONDS);     try {      System.out.printf("%.2f Executing call.%n", (System.nanoTime() - startNanos) / 1e9f);      Response response = call.execute();      System.out.printf("%.2f Call was expected to fail, but completed: %s%n",          (System.nanoTime() - startNanos) / 1e9f, response);    } catch (IOException e) {      System.out.printf("%.2f Call failed as expected: %s%n",          (System.nanoTime() - startNanos) / 1e9f, e);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="超时"><a href="#超时" class="headerlink" title="超时"></a>超时</h2><p>没有响应时使用超时结束call。没有响应的原因可能是客户点链接问题、服务器可用性问题或者这之间的其他东西。OkHttp支持连接，读取和写入超时</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client; public ConfigureTimeouts() throws Exception {    client = new OkHttpClient();    client.setConnectTimeout(10, TimeUnit.SECONDS);    client.setWriteTimeout(10, TimeUnit.SECONDS);    client.setReadTimeout(30, TimeUnit.SECONDS);} public void run() throws Exception {    Request request = new Request.Builder()        .url("http://httpbin.org/delay/2") // This URL is served with a 2 second delay.        .build();     Response response = client.newCall(request).execute();    System.out.println("Response completed: " + response);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="每个call的配置"><a href="#每个call的配置" class="headerlink" title="每个call的配置"></a>每个call的配置</h2><p>使用OkHttpClient，所有的HTTP Client配置包括代理设置、超时设置、缓存设置。当你需要为单个call改变配置的时候，clone 一个 OkHttpClient。这个api将会返回一个浅拷贝（shallow copy），你可以用来单独自定义。下面的例子中，我们让一个请求是500ms的超时、另一个是3000ms的超时。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    Request request = new Request.Builder()        .url("http://httpbin.org/delay/1") // This URL is served with a 1 second delay.        .build();     try {      Response response = client.clone() // Clone to make a customized OkHttp for this request.          .setReadTimeout(500, TimeUnit.MILLISECONDS)          .newCall(request)          .execute();      System.out.println("Response 1 succeeded: " + response);    } catch (IOException e) {      System.out.println("Response 1 failed: " + e);    }     try {      Response response = client.clone() // Clone to make a customized OkHttp for this request.          .setReadTimeout(3000, TimeUnit.MILLISECONDS)          .newCall(request)          .execute();      System.out.println("Response 2 succeeded: " + response);    } catch (IOException e) {      System.out.println("Response 2 failed: " + e);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="处理验证"><a href="#处理验证" class="headerlink" title="处理验证"></a>处理验证</h2><p>这部分和HTTP AUTH有关。<br>相关资料：<a href="http://blog.csdn.net/wwwsq/article/details/7255062">HTTP AUTH 那些事 - 王绍全的博客 - 博客频道 - CSDN.NET</a></p><p>OkHttp会自动重试未验证的请求。当响应是401 Not Authorized时，Authenticator会被要求提供证书。Authenticator的实现中需要建立一个新的包含证书的请求。如果没有证书可用，返回null来跳过尝试。</p><pre class="line-numbers language-none"><code class="language-none">public List&lt;Challenge&gt; challenges()Returns the authorization challenges appropriate for this response's code. If the response code is 401 unauthorized, this returns the "WWW-Authenticate" challenges.If the response code is 407 proxy unauthorized, this returns the "Proxy-Authenticate" challenges.Otherwise this returns an empty list of challenges.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当需要实现一个Basic challenge， 使用Credentials.basic(username, password)来编码请求头。</p><pre class="line-numbers language-none"><code class="language-none">private final OkHttpClient client = new OkHttpClient(); public void run() throws Exception {    client.setAuthenticator(new Authenticator() {      @Override public Request authenticate(Proxy proxy, Response response) {        System.out.println("Authenticating for response: " + response);        System.out.println("Challenges: " + response.challenges());        String credential = Credentials.basic("jesse", "password1");        return response.request().newBuilder()            .header("Authorization", credential)            .build();      }       @Override public Request authenticateProxy(Proxy proxy, Response response) {        return null; // Null indicates no attempt to authenticate.      }    });     Request request = new Request.Builder()        .url("http://publicobject.com/secrets/hellosecret.txt")        .build();     Response response = client.newCall(request).execute();    if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);     System.out.println(response.body().string());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>转自 <a href="http://www.cnblogs.com/ct2011/p/4001708.html">OkHttp使用介绍</a> 同时整合了 <a href="http://www.cnblogs.com/ct2011/p/3997368.html">OkHttp使用进阶</a> 这篇文章以及其中的评论。</p></form>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> okhttp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教你几招，蚊子一个夏天不敢进你的房间！！</title>
      <link href="//post/gowaywenzi.html"/>
      <url>//post/gowaywenzi.html</url>
      
        <content type="html"><![CDATA[<p>教你几招，蚊子一个夏天不敢进你的房间！！</p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>“多蚊季节来了，谁都不叮偏偏就来叮你？嗡嗡吵得睡不着？怕宝宝被感染？下面教教大家一些驱蚊小窍门！！</p><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p><img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/5796591386340603909.jpg" alt="这里写图片描述"></p><p>用空酒瓶装上糖水或啤酒放在阴暗处，蚊子闻到甜味就会往瓶子里钻，会被啤酒或糖水黏住致死。</p><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><p>沸过的醋用碟装，放到房间里不用关门，整夜都不会被蚊子打扰。</p><p>##方法三:<br>　　<img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/6765316288500183624.jpg" alt="这里写图片描述"><br>避免在花纹蚊出没的时段（上午7-9时，下午4时到黄昏）在树荫、树丛、凉亭等阴暗处逗留。</p><h2 id="方法四"><a href="#方法四" class="headerlink" title="方法四:"></a>方法四:</h2><p>　　<img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/3399212990045993728.jpg" alt="这里写图片描述"><br>　　在室内点燃柑橘皮，既能驱蚊又能消除屋内异味。　　</p><h2 id="方法五："><a href="#方法五：" class="headerlink" title="方法五："></a>方法五：</h2><p>　　<img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/4296329243977038086.jpg" alt="这里写图片描述"><br>关上门窗，窗前放一个盆子，盆子加混合洗衣粉的水，第二天水盆中就会有死去的蚊子。</p><h2 id="方法六："><a href="#方法六：" class="headerlink" title="方法六："></a>方法六：</h2><p>　　<img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/972716997894715278.jpg" alt="这里写图片描述"><br>房间里拜访驱蚊草。</p><h2 id="方法七："><a href="#方法七：" class="headerlink" title="方法七："></a>方法七：</h2><p><img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/1259655297668004577.jpg" alt="这里写图片描述"></p><p>到登隔热流行区旅行，应穿上长袖衣服及长裤，并在外露皮肤及衣服上涂蚊虫趋避药物。</p><h2 id="方法八："><a href="#方法八：" class="headerlink" title="方法八："></a>方法八：</h2><p>　　<img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/7766628205407812354.jpg" alt="这里写图片描述"><br>　　3到5天刷洗水缸、换水一次，并翻盆倒罐、清除花盆、废气罐子等积水。</p><h2 id="方法九："><a href="#方法九：" class="headerlink" title="方法九："></a>方法九：</h2><p>　　<img src="http://imgnews.gmw.cn/attachement/jpg/site2/20160412/3897745475809723662.jpg" alt="这里写图片描述"><br>　　房间里放几盒开着的风油精。</p><h1 id="11种防蚊子奇招妙法"><a href="#11种防蚊子奇招妙法" class="headerlink" title="11种防蚊子奇招妙法"></a>11种防蚊子奇招妙法</h1><p>　1、维生素B泡水擦身，会让蚊子不敢近身，并且这种水溶性维生素没有副作用。</p><p>　　2、在室内点燃干桔皮，可取代蚊香，既能驱蚊，又可消除屋内异味。</p><p>　　3、尽量穿袜子。许多人喜欢夏天光脚穿鞋，殊不知穿袜子后，蚊子感觉人的皮肤湿度降低、皮表挥发物减少，会减少叮咬。</p><p>　　4、在使用驱蚊药时，1个品牌连续使用2个月后，换一种药物驱蚊，效果更好。</p><p>　　5、关上门窗，在窗前放置一盆混合洗衣粉的水，越日水盆中就会有一些死去的蚊子。每天持续使用，可以不用再喷杀虫剂了。</p><p>　　6、在房间里放上几盒开盖的风油精、清冷油，或在墙上涂点薄荷。</p><p>　　7、在身上或寝具上洒些香水。</p><p>　　8、将樟脑丸磨碎、撒在屋内墙角。</p><p>　　9、在室内的花盆里栽一两株番茄，番茄枝叶发出的气味会把蚊子驱除。</p><p>　　10、在灯下挂一把香葱，或用纱袋装几根葱段，各种小虫都不会飞来。</p><p>　　11、用橘红色玻璃纸或绸布套在灯泡上，蚊子最怕橘红色光。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 驱蚊  life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android孤儿进程防止清理</title>
      <link href="//post/deamon.html"/>
      <url>//post/deamon.html</url>
      
        <content type="html"><![CDATA[<p>孤儿进程:因为父进程先退出而导致一个子进程被init进程收养的进程为孤儿进程</p><span id="more"></span><h2 id="孤儿进程-因为父进程先退出而导致一个子进程被init进程收养的进程为孤儿进程。"><a href="#孤儿进程-因为父进程先退出而导致一个子进程被init进程收养的进程为孤儿进程。" class="headerlink" title="孤儿进程:因为父进程先退出而导致一个子进程被init进程收养的进程为孤儿进程。"></a>孤儿进程:因为父进程先退出而导致一个子进程被init进程收养的进程为孤儿进程。</h2><p>因此，可以通过创建孤儿进程，改变native进程的父进程，达到防止系统清理。</p><p>关键代码实现:</p><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;int main(){   pid_t child_pid;   child_pid=fork();   if(child_pid&lt;0)   {     perror("fork error");     exit(EXIT_FAILURE);   }   if(child_pid==0)//子进程处理 事务   {      while(1)      {         printf("hello world\n");         sleep(1);      }      return 0;   }else   {     printf("father bye byte\n");     exit(EXIT_SUCCESS);   }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Service </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404</title>
      <link href="/404/index.html"/>
      <url>/404/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>不用知道我是谁～好吧</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>contact</title>
      <link href="/contact/index.html"/>
      <url>/contact/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>friends</title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>读书</title>
      <link href="/reading/index.html"/>
      <url>/reading/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
